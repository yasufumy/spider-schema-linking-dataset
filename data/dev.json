[{"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE age  <  30", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "value"], "question": "How many visitors below age 30 are there?", "question_toks": ["How", "many", "visitors", "below", "age", "30", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 8, false], null], 30.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "query_toks": ["SELECT", "name", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "Level_of_membership", "DESC"], "query_toks_no_value": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "level_of_membership", "desc"], "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "question_toks": ["Find", "the", "names", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "order", "the", "results", "by", "the", "level", "from", "high", "to", "low", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "visitor", "WHERE", "Level_of_membership", "<", "=", "4"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<", "=", "value"], "question": "What is the average age of the visitors whose membership level is not higher than 4?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "visitors", "whose", "membership", "level", "is", "not", "higher", "than", "4", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 6, [0, [0, 7, false], null], 4.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "Level_of_membership", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "age", "desc"], "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "query_toks": ["SELECT", "museum_id", ",", "name", "FROM", "museum", "ORDER", "BY", "num_of_staff", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "value"], "question": "Find the id and name of the museum that has the most staff members?", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "value"], "question": "Find the average number of staff working for the museums that were open before 2009.", "question_toks": ["Find", "the", "average", "number", "of", "staff", "working", "for", "the", "museums", "that", "were", "open", "before", "2009", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "query_toks": ["SELECT", "Num_of_Staff", ",", "Open_Year", "FROM", "museum", "WHERE", "name", "=", "'Plaza", "Museum", "'"], "query_toks_no_value": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "value"], "question": "What are the opening year and staff number of the museum named Plaza Museum?", "question_toks": ["What", "are", "the", "opening", "year", "and", "staff", "number", "of", "the", "museum", "named", "Plaza", "Museum", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Plaza Museum\"", null]]}}, {"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "num_of_staff", ">", "(", "SELECT", "min", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "value", ")"], "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "question_toks": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]]}, null]]}}, {"db_id": "museum_visit", "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.id", ",", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t1.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "find the id, name and age for visitors who visited some museums more than once.", "question_toks": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "query_toks": ["SELECT", "t2.visitor_id", ",", "t1.name", ",", "t1.Level_of_membership", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t2.visitor_id", "ORDER", "BY", "sum", "(", "t2.Total_spent", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "visitor_id", ",", "t1", ".", "name", ",", "t1", ".", "level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t2", ".", "visitor_id", "order", "by", "sum", "(", "t2", ".", "total_spent", ")", "desc", "limit", "value"], "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "question_toks": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 12, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.Museum_ID", ",", "t1.name", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "GROUP", "BY", "t2.Museum_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "museum_id", ",", "t1", ".", "name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "group", "by", "t2", ".", "museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and name of the museum visited most times?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "Museum_ID", "NOT", "IN", "(", "SELECT", "museum_id", "FROM", "visit", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")"], "question": "What is the name of the museum that had no visitor yet?", "question_toks": ["What", "is", "the", "name", "of", "the", "museum", "that", "had", "no", "visitor", "yet", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "museum_visit", "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "ORDER", "BY", "t2.num_of_ticket", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "order", "by", "t2", ".", "num_of_ticket", "desc", "limit", "value"], "question": "Find the name and age of the visitor who bought the most tickets at once.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "query_toks": ["SELECT", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "FROM", "visit"], "query_toks_no_value": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit"], "question": "What are the average and maximum number of tickets bought in all visits?", "question_toks": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "museum_visit", "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "query_toks": ["SELECT", "sum", "(", "t2.Total_spent", ")", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "WHERE", "t1.Level_of_membership", "=", "1"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "where", "t1", ".", "level_of_membership", "=", "value"], "question": "What is the total ticket expense of the visitors whose membership level is 1?", "question_toks": ["What", "is", "the", "total", "ticket", "expense", "of", "the", "visitors", "whose", "membership", "level", "is", "1", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 1.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "query_toks": ["SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", "<", "2009", "INTERSECT", "SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", ">", "2011"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", "<", "value", "intersect", "select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", ">", "value"], "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "question_toks": ["What", "is", "the", "name", "of", "the", "visitor", "who", "visited", "both", "a", "museum", "opened", "before", "2009", "and", "a", "museum", "opened", "after", "2011", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 2011.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]]}}, {"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "t2.visitor_id", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t1.open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2", ".", "visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t1", ".", "open_year", ">", "value", ")"], "question": "Find the number of visitors who did not visit any museum opened after 2010.", "question_toks": ["Find", "the", "number", "of", "visitors", "who", "did", "not", "visit", "any", "museum", "opened", "after", "2010", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]]}, null]]}}, {"db_id": "museum_visit", "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "museum", "WHERE", "open_year", ">", "2013", "OR", "open_year", "<", "2008"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "value", "or", "open_year", "<", "value"], "question": "How many museums were opened after 2013 or before 2008?", "question_toks": ["How", "many", "museums", "were", "opened", "after", "2013", "or", "before", "2008", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 2013.0, null], "or", [false, 4, [0, [0, 4, false], null], 2008.0, null]]}}, {"db_id": "battle_death", "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship", "WHERE", "disposition_of_ship", "=", "'Captured", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "value"], "question": "How many ships ended up being 'Captured'?", "question_toks": ["How", "many", "ships", "ended", "up", "being", "'Captured", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Captured\"", null]]}}, {"db_id": "battle_death", "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "query_toks": ["SELECT", "name", ",", "tonnage", "FROM", "ship", "ORDER", "BY", "name", "DESC"], "query_toks_no_value": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc"], "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "question_toks": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT name ,  date FROM battle", "query_toks": ["SELECT", "name", ",", "date", "FROM", "battle"], "query_toks_no_value": ["select", "name", ",", "date", "from", "battle"], "question": "List the name, date and result of each battle.", "question_toks": ["List", "the", "name", ",", "date", "and", "result", "of", "each", "battle", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT max(killed) ,  min(killed) FROM death", "query_toks": ["SELECT", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "FROM", "death"], "query_toks_no_value": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death"], "question": "What is maximum and minimum death toll caused each time?", "question_toks": ["What", "is", "maximum", "and", "minimum", "death", "toll", "caused", "each", "time", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [2, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT avg(injured) FROM death", "query_toks": ["SELECT", "avg", "(", "injured", ")", "FROM", "death"], "query_toks_no_value": ["select", "avg", "(", "injured", ")", "from", "death"], "question": "What is the average number of injuries caused each time?", "question_toks": ["What", "is", "the", "average", "number", "of", "injuries", "caused", "each", "time", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "query_toks": ["SELECT", "T1.killed", ",", "T1.injured", "FROM", "death", "AS", "T1", "JOIN", "ship", "AS", "t2", "ON", "T1.caused_by_ship_id", "=", "T2.id", "WHERE", "T2.tonnage", "=", "'t", "'"], "query_toks_no_value": ["select", "t1", ".", "killed", ",", "t1", ".", "injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "caused_by_ship_id", "=", "t2", ".", "id", "where", "t2", ".", "tonnage", "=", "value"], "question": "What are the death and injury situations caused by the ship with tonnage 't'?", "question_toks": ["What", "are", "the", "death", "and", "injury", "situations", "caused", "by", "the", "ship", "with", "tonnage", "'t", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"t\"", null]]}}, {"db_id": "battle_death", "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "query_toks": ["SELECT", "name", ",", "RESULT", "FROM", "battle", "WHERE", "bulgarian_commander", "!", "=", "'Boril", "'"], "query_toks_no_value": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!", "=", "value"], "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "question_toks": ["What", "are", "the", "name", "and", "results", "of", "the", "battles", "when", "the", "bulgarian", "commander", "is", "not", "'Boril", "'"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"Boril\"", null]]}}, {"db_id": "battle_death", "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.ship_type", "=", "'Brig", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "ship_type", "=", "value"], "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "battles", "that", "lost", "any", "'Brig", "'", "type", "shipes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Brig\"", null]]}}, {"db_id": "battle_death", "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "JOIN", "death", "AS", "T3", "ON", "T2.id", "=", "T3.caused_by_ship_id", "GROUP", "BY", "T1.id", "HAVING", "sum", "(", "T3.killed", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "join", "death", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "caused_by_ship_id", "group", "by", "t1", ".", "id", "having", "sum", "(", "t3", ".", "killed", ")", ">", "value"], "question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "battles", "that", "led", "to", "more", "than", "10", "people", "killed", "in", "total", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [4, 17, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.id", ",", "T2.name", "FROM", "death", "AS", "T1", "JOIN", "ship", "AS", "t2", "ON", "T1.caused_by_ship_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "id", ",", "t2", ".", "name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "caused_by_ship_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the ship id and name that caused most total injuries?", "question_toks": ["What", "is", "the", "ship", "id", "and", "name", "that", "caused", "most", "total", "injuries", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "query_toks": ["SELECT", "name", "FROM", "battle", "WHERE", "bulgarian_commander", "=", "'Kaloyan", "'", "AND", "latin_commander", "=", "'Baldwin", "I", "'"], "query_toks_no_value": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "value", "and", "latin_commander", "=", "value"], "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "question_toks": ["What", "are", "the", "distinct", "battle", "names", "which", "are", "between", "bulgarian", "commander", "'Kaloyan", "'", "and", "latin", "commander", "'Baldwin", "I", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Kaloyan\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Baldwin I\"", null]]}}, {"db_id": "battle_death", "query": "SELECT count(DISTINCT RESULT) FROM battle", "query_toks": ["SELECT", "count", "(", "DISTINCT", "RESULT", ")", "FROM", "battle"], "query_toks_no_value": ["select", "count", "(", "distinct", "result", ")", "from", "battle"], "question": "How many different results are there for the battles?", "question_toks": ["How", "many", "different", "results", "are", "there", "for", "the", "battles", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 6, true], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "battle", "WHERE", "id", "NOT", "IN", "(", "SELECT", "lost_in_battle", "FROM", "ship", "WHERE", "tonnage", "=", "'225", "'", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "value", ")"], "question": "How many battles did not lose any ship with tonnage '225'?", "question_toks": ["How", "many", "battles", "did", "not", "lose", "any", "ship", "with", "tonnage", "'225", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"225\"", null]]}, null]]}}, {"db_id": "battle_death", "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "query_toks": ["SELECT", "T1.name", ",", "T1.date", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.name", "=", "'Lettice", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.date", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.name", "=", "'HMS", "Atalanta", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "name", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "name", "=", "value"], "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "question_toks": ["List", "the", "name", "and", "date", "the", "battle", "that", "has", "lost", "the", "ship", "named", "'Lettice", "'", "and", "the", "ship", "named", "'HMS", "Atalanta", "'"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"HMS Atalanta\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Lettice\"", null]]}}, {"db_id": "battle_death", "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "query_toks": ["SELECT", "name", ",", "RESULT", ",", "bulgarian_commander", "FROM", "battle", "EXCEPT", "SELECT", "T1.name", ",", "T1.result", ",", "T1.bulgarian_commander", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.location", "=", "'English", "Channel", "'"], "query_toks_no_value": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1", ".", "name", ",", "t1", ".", "result", ",", "t1", ".", "bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "location", "=", "value"], "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "question_toks": ["Show", "names", ",", "results", "and", "bulgarian", "commanders", "of", "the", "battles", "with", "no", "ships", "lost", "in", "the", "'English", "Channel", "'", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"English Channel\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "battle_death", "query": "SELECT note FROM death WHERE note LIKE '%East%'", "query_toks": ["SELECT", "note", "FROM", "death", "WHERE", "note", "LIKE", "'", "%", "East", "%", "'"], "query_toks_no_value": ["select", "note", "from", "death", "where", "note", "like", "value"], "question": "What are the notes of the death events which has substring 'East'?", "question_toks": ["What", "are", "the", "notes", "of", "the", "death", "events", "which", "has", "substring", "'East", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 16, false], null], "\"%East%\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT line_1 ,  line_2 FROM addresses", "query_toks": ["SELECT", "line_1", ",", "line_2", "FROM", "addresses"], "query_toks_no_value": ["select", "line_1", ",", "line_2", "from", "addresses"], "question": "what are all the addresses including line 1 and line 2?", "question_toks": ["what", "are", "all", "the", "addresses", "including", "line", "1", "and", "line", "2", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT line_1 ,  line_2 FROM addresses", "query_toks": ["SELECT", "line_1", ",", "line_2", "FROM", "addresses"], "query_toks_no_value": ["select", "line_1", ",", "line_2", "from", "addresses"], "question": "What is the first and second line for all addresses?", "question_toks": ["What", "is", "the", "first", "and", "second", "line", "for", "all", "addresses", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Courses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Courses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "courses"], "question": "How many courses in total are listed?", "question_toks": ["How", "many", "courses", "in", "total", "are", "listed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Courses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Courses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "courses"], "question": "How many courses are there?", "question_toks": ["How", "many", "courses", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "query_toks": ["SELECT", "course_description", "FROM", "Courses", "WHERE", "course_name", "=", "'math", "'"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "How is the math course described?", "question_toks": ["How", "is", "the", "math", "course", "described", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "query_toks": ["SELECT", "course_description", "FROM", "Courses", "WHERE", "course_name", "=", "'math", "'"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "What are the descriptions for all the math courses?", "question_toks": ["What", "are", "the", "descriptions", "for", "all", "the", "math", "courses", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "query_toks": ["SELECT", "zip_postcode", "FROM", "Addresses", "WHERE", "city", "=", "'Port", "Chelsea", "'"], "query_toks_no_value": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value"], "question": "What is the zip code of the address in the city Port Chelsea?", "question_toks": ["What", "is", "the", "zip", "code", "of", "the", "address", "in", "the", "city", "Port", "Chelsea", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "query_toks": ["SELECT", "zip_postcode", "FROM", "Addresses", "WHERE", "city", "=", "'Port", "Chelsea", "'"], "query_toks_no_value": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value"], "question": "What is the zip code for Port Chelsea?", "question_toks": ["What", "is", "the", "zip", "code", "for", "Port", "Chelsea", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.department_name", ",", "T1.department_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T1.department_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "t1", ".", "department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which department offers the most number of degrees? List department name and id.", "question_toks": ["Which", "department", "offers", "the", "most", "number", "of", "degrees", "?", "List", "department", "name", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.department_name", ",", "T1.department_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T1.department_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "t1", ".", "department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each department id, what is the name of the department with the most number of degrees?", "question_toks": ["For", "each", "department", "id", ",", "what", "is", "the", "name", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "department_id", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs"], "question": "How many departments offer any degree?", "question_toks": ["How", "many", "departments", "offer", "any", "degree", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 19, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "department_id", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs"], "question": "How many different departments offer degrees?", "question_toks": ["How", "many", "different", "departments", "offer", "degrees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 19, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "degree_summary_name", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs"], "question": "How many different degree names are offered?", "question_toks": ["How", "many", "different", "degree", "names", "are", "offered", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 20, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "degree_summary_name", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs"], "question": "How many different degrees are offered?", "question_toks": ["How", "many", "different", "degrees", "are", "offered", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 20, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Departments", "AS", "T1", "JOIN", "Degree_Programs", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.department_name", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "department_name", "=", "value"], "question": "How many degrees does the engineering department offer?", "question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "offer", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Departments", "AS", "T1", "JOIN", "Degree_Programs", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.department_name", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "department_name", "=", "value"], "question": "How many degrees does the engineering department have?", "question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_name ,  section_description FROM Sections", "query_toks": ["SELECT", "section_name", ",", "section_description", "FROM", "Sections"], "query_toks_no_value": ["select", "section_name", ",", "section_description", "from", "sections"], "question": "What are the names and descriptions of all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "all", "the", "sections", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_name ,  section_description FROM Sections", "query_toks": ["SELECT", "section_name", ",", "section_description", "FROM", "Sections"], "query_toks_no_value": ["select", "section_name", ",", "section_description", "from", "sections"], "question": "What are the names and descriptions for all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_id", "FROM", "Courses", "AS", "T1", "JOIN", "Sections", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and id of courses having at most 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "id", "of", "courses", "having", "at", "most", "2", "sections", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_id", "FROM", "Courses", "AS", "T1", "JOIN", "Sections", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and ids of every course with less than 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "every", "course", "with", "less", "than", "2", "sections", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "query_toks": ["SELECT", "section_name", "FROM", "Sections", "ORDER", "BY", "section_name", "DESC"], "query_toks_no_value": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc"], "question": "List the section_name in reversed lexicographical order.", "question_toks": ["List", "the", "section_name", "in", "reversed", "lexicographical", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 25, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "query_toks": ["SELECT", "section_name", "FROM", "Sections", "ORDER", "BY", "section_name", "DESC"], "query_toks_no_value": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc"], "question": "What are the names of the sections in reverse alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "the", "sections", "in", "reverse", "alphabetical", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 25, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.semester_name", ",", "T1.semester_id", "FROM", "Semesters", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.semester_id", "=", "T2.semester_id", "GROUP", "BY", "T1.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "semester_name", ",", "t1", ".", "semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "semester_id", "=", "t2", ".", "semester_id", "group", "by", "t1", ".", "semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the semester which most student registered in? Show both the name and the id.", "question_toks": ["What", "is", "the", "semester", "which", "most", "student", "registered", "in", "?", "Show", "both", "the", "name", "and", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.semester_name", ",", "T1.semester_id", "FROM", "Semesters", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.semester_id", "=", "T2.semester_id", "GROUP", "BY", "T1.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "semester_name", ",", "t1", ".", "semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "semester_id", "=", "t2", ".", "semester_id", "group", "by", "t1", ".", "semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each semester, what is the name and id of the one with the most students registered?", "question_toks": ["For", "each", "semester", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "students", "registered", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "query_toks": ["SELECT", "department_description", "FROM", "Departments", "WHERE", "department_name", "LIKE", "'", "%", "computer", "%", "'"], "query_toks_no_value": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value"], "question": "What is the description of the department whose name has the substring the computer?", "question_toks": ["What", "is", "the", "description", "of", "the", "department", "whose", "name", "has", "the", "substring", "the", "computer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "query_toks": ["SELECT", "department_description", "FROM", "Departments", "WHERE", "department_name", "LIKE", "'", "%", "computer", "%", "'"], "query_toks_no_value": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value"], "question": "What is the department description for the one whose name has the word computer?", "question_toks": ["What", "is", "the", "department", "description", "for", "the", "one", "whose", "name", "has", "the", "word", "computer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "question_toks": ["Who", "are", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "and", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", ",", "along", "with", "the", "ids", ",", "of", "all", "students", "who", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Degree_Programs", "AS", "T3", "ON", "T2.degree_program_id", "=", "T3.degree_program_id", "WHERE", "T3.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "degree_programs", "as", "t3", "on", "t2", ".", "degree_program_id", "=", "t3", ".", "degree_program_id", "where", "t3", ".", "degree_summary_name", "=", "value"], "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "question_toks": ["Who", "is", "enrolled", "in", "a", "Bachelor", "degree", "program", "?", "List", "the", "first", "name", ",", "middle", "name", ",", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Degree_Programs", "AS", "T3", "ON", "T2.degree_program_id", "=", "T3.degree_program_id", "WHERE", "T3.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "degree_programs", "as", "t3", "on", "t2", ".", "degree_program_id", "=", "t3", ".", "degree_program_id", "where", "t3", ".", "degree_summary_name", "=", "value"], "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "for", "everybody", "enrolled", "in", "a", "Bachelors", "program", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_summary_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the kind of program which most number of students are enrolled in?", "question_toks": ["Find", "the", "kind", "of", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_summary_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the degree summary name that has the most number of students enrolled?", "question_toks": ["What", "is", "the", "degree", "summary", "name", "that", "has", "the", "most", "number", "of", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_program_id", ",", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_program_id", ",", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the program which most number of students are enrolled in. List both the id and the summary.", "question_toks": ["Find", "the", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", ".", "List", "both", "the", "id", "and", "the", "summary", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_program_id", ",", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_program_id", ",", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the program id and the summary of the degree that has the most students enrolled?", "question_toks": ["What", "is", "the", "program", "id", "and", "the", "summary", "of", "the", "degree", "that", "has", "the", "most", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "count", "(", "*", ")", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "question_toks": ["Which", "student", "has", "enrolled", "for", "the", "most", "times", "in", "any", "program", "?", "List", "the", "id", ",", "first", "name", ",", "middle", "name", ",", "last", "name", ",", "the", "number", "of", "enrollments", "and", "student", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "count", "(", "*", ")", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", ",", "along", "with", "the", "id", "and", "number", "of", "enrollments", ",", "for", "the", "student", "who", "enrolled", "the", "most", "in", "any", "program", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "query_toks": ["SELECT", "semester_name", "FROM", "Semesters", "WHERE", "semester_id", "NOT", "IN", "(", "SELECT", "semester_id", "FROM", "Student_Enrolment", ")"], "query_toks_no_value": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")"], "question": "Which semesters do not have any student enrolled? List the semester name.", "question_toks": ["Which", "semesters", "do", "not", "have", "any", "student", "enrolled", "?", "List", "the", "semester", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 28, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "query_toks": ["SELECT", "semester_name", "FROM", "Semesters", "WHERE", "semester_id", "NOT", "IN", "(", "SELECT", "semester_id", "FROM", "Student_Enrolment", ")"], "query_toks_no_value": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")"], "question": "What is the name of the semester with no students enrolled?", "question_toks": ["What", "is", "the", "name", "of", "the", "semester", "with", "no", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 28, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "query_toks": ["SELECT", "DISTINCT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "What are all the course names of the courses which ever have students enrolled in?", "question_toks": ["What", "are", "all", "the", "course", "names", "of", "the", "courses", "which", "ever", "have", "students", "enrolled", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]], "table_units": [["table_unit", 1], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "query_toks": ["SELECT", "DISTINCT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "What are the names of all courses that have some students enrolled?", "question_toks": ["What", "are", "the", "names", "of", "all", "courses", "that", "have", "some", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]], "table_units": [["table_unit", 1], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What's the name of the course with most number of enrollments?", "question_toks": ["What", "'s", "the", "name", "of", "the", "course", "with", "most", "number", "of", "enrollments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]], "table_units": [["table_unit", 1], ["table_unit", 8]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the course with the most students enrolled?", "question_toks": ["What", "is", "the", "name", "of", "the", "course", "with", "the", "most", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]], "table_units": [["table_unit", 1], ["table_unit", 8]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "query_toks": ["SELECT", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.current_address_id", "=", "T2.address_id", "WHERE", "T2.state_province_county", "=", "'NorthCarolina", "'", "EXCEPT", "SELECT", "DISTINCT", "T3.last_name", "FROM", "Students", "AS", "T3", "JOIN", "Student_Enrolment", "AS", "T4", "ON", "T3.student_id", "=", "T4.student_id"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "current_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "state_province_county", "=", "value", "except", "select", "distinct", "t3", ".", "last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3", ".", "student_id", "=", "t4", ".", "student_id"], "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "question_toks": ["Find", "the", "last", "name", "of", "the", "students", "who", "currently", "live", "in", "the", "state", "of", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "program", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 37, false], null]]]], "union": null, "where": []}, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 37, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "query_toks": ["SELECT", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.current_address_id", "=", "T2.address_id", "WHERE", "T2.state_province_county", "=", "'NorthCarolina", "'", "EXCEPT", "SELECT", "DISTINCT", "T3.last_name", "FROM", "Students", "AS", "T3", "JOIN", "Student_Enrolment", "AS", "T4", "ON", "T3.student_id", "=", "T4.student_id"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "current_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "state_province_county", "=", "value", "except", "select", "distinct", "t3", ".", "last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3", ".", "student_id", "=", "t4", ".", "student_id"], "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "question_toks": ["What", "are", "the", "last", "name", "of", "the", "students", "who", "live", "in", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "programs", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 37, false], null]]]], "union": null, "where": []}, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 37, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the date and id of the transcript with at least 2 course results.", "question_toks": ["Show", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "course", "results", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the date and id of the transcript with at least 2 courses listed?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "courses", "listed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "query_toks": ["SELECT", "cell_mobile_number", "FROM", "Students", "WHERE", "first_name", "=", "'Timmothy", "'", "AND", "last_name", "=", "'Ward", "'"], "query_toks_no_value": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "question_toks": ["What", "is", "the", "phone", "number", "of", "the", "man", "with", "the", "first", "name", "Timmothy", "and", "the", "last", "name", "Ward", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 35, false], null], "\"Timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Ward\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "query_toks": ["SELECT", "cell_mobile_number", "FROM", "Students", "WHERE", "first_name", "=", "'Timmothy", "'", "AND", "last_name", "=", "'Ward", "'"], "query_toks_no_value": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the mobile phone number of the student named Timothy Ward?", "question_toks": ["What", "is", "the", "mobile", "phone", "number", "of", "the", "student", "named", "Timothy", "Ward", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 35, false], null], "\"Timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Ward\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "value"], "question": "Who is the first student to register? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "first", "student", "to", "register", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 41, false], null]]], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "value"], "question": "What is the first, middle, and last name of the first student to register?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 41, false], null]]], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "value"], "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "earliest", "graduate", "of", "the", "school", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 42, false], null]]], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "value"], "question": "What is the first, middle, and last name of the earliest school graduate?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "earliest", "school", "graduate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 42, false], null]]], "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "query_toks": ["SELECT", "first_name", "FROM", "Students", "WHERE", "current_address_id", "!", "=", "permanent_address_id"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "current_address_id", "!", "=", "permanent_address_id"], "question": "Whose permanent address is different from his or her current address? List his or her first name.", "question_toks": ["Whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "address", "?", "List", "his", "or", "her", "first", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "query_toks": ["SELECT", "first_name", "FROM", "Students", "WHERE", "current_address_id", "!", "=", "permanent_address_id"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "current_address_id", "!", "=", "permanent_address_id"], "question": "What is the first name of the student whose permanent address is different from his or her current one?", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "one", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_id", ",", "T1.line_1", ",", "T1.line_2", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.current_address_id", "GROUP", "BY", "T1.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_id", ",", "t1", ".", "line_1", ",", "t1", ".", "line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "current_address_id", "group", "by", "t1", ".", "address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which address holds the most number of students currently? List the address id and all lines.", "question_toks": ["Which", "address", "holds", "the", "most", "number", "of", "students", "currently", "?", "List", "the", "address", "id", "and", "all", "lines", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]], "table_units": [["table_unit", 0], ["table_unit", 6]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_id", ",", "T1.line_1", ",", "T1.line_2", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.current_address_id", "GROUP", "BY", "T1.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_id", ",", "t1", ".", "line_1", ",", "t1", ".", "line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "current_address_id", "group", "by", "t1", ".", "address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id, line 1, and line 2 of the address with the most students?", "question_toks": ["What", "is", "the", "id", ",", "line", "1", ",", "and", "line", "2", "of", "the", "address", "with", "the", "most", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]], "table_units": [["table_unit", 0], ["table_unit", 6]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT avg(transcript_date) FROM Transcripts", "query_toks": ["SELECT", "avg", "(", "transcript_date", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts"], "question": "On average, when were the transcripts printed?", "question_toks": ["On", "average", ",", "when", "were", "the", "transcripts", "printed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 53, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT avg(transcript_date) FROM Transcripts", "query_toks": ["SELECT", "avg", "(", "transcript_date", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts"], "question": "What is the average transcript date?", "question_toks": ["What", "is", "the", "average", "transcript", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 53, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "transcript_date", ",", "other_details", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "value"], "question": "When is the first transcript released? List the date and details.", "question_toks": ["When", "is", "the", "first", "transcript", "released", "?", "List", "the", "date", "and", "details", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 53, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "transcript_date", ",", "other_details", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "value"], "question": "What is the earliest date of a transcript release, and what details can you tell me?", "question_toks": ["What", "is", "the", "earliest", "date", "of", "a", "transcript", "release", ",", "and", "what", "details", "can", "you", "tell", "me", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 53, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Transcripts", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "transcripts"], "question": "How many transcripts are released?", "question_toks": ["How", "many", "transcripts", "are", "released", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Transcripts", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "transcripts"], "question": "How many transcripts are listed?", "question_toks": ["How", "many", "transcripts", "are", "listed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "query_toks": ["SELECT", "transcript_date", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "value"], "question": "What is the last transcript release date?", "question_toks": ["What", "is", "the", "last", "transcript", "release", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 53, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "query_toks": ["SELECT", "transcript_date", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "value"], "question": "When was the last transcript released?", "question_toks": ["When", "was", "the", "last", "transcript", "released", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 53, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_course_id", "FROM", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "question_toks": ["How", "many", "times", "at", "most", "can", "a", "course", "enrollment", "result", "show", "in", "different", "transcripts", "?", "Also", "show", "the", "course", "enrollment", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [[0, 55, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_course_id", "FROM", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "times", "that", "a", "course", "shows", "up", "in", "different", "transcripts", "and", "what", "is", "that", "course", "'s", "enrollment", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [[0, 55, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Show the date of the transcript which shows the least number of results, also list the id.", "question_toks": ["Show", "the", "date", "of", "the", "transcript", "which", "shows", "the", "least", "number", "of", "results", ",", "also", "list", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [[0, 56, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the date and id of the transcript with the least number of results?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "the", "least", "number", "of", "results", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [[0, 56, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Master", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value"], "question": "Find the semester when both Master students and Bachelor students got enrolled in.", "question_toks": ["Find", "the", "semester", "when", "both", "Master", "students", "and", "Bachelor", "students", "got", "enrolled", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]]}, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Master", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value"], "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "question_toks": ["What", "is", "the", "id", "of", "the", "semester", "that", "had", "both", "Masters", "and", "Bachelors", "students", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]]}, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT current_address_id) FROM Students", "query_toks": ["SELECT", "count", "(", "DISTINCT", "current_address_id", ")", "FROM", "Students"], "query_toks_no_value": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students"], "question": "How many different addresses do the students currently live?", "question_toks": ["How", "many", "different", "addresses", "do", "the", "students", "currently", "live", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 33, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT current_address_id) FROM Students", "query_toks": ["SELECT", "count", "(", "DISTINCT", "current_address_id", ")", "FROM", "Students"], "query_toks_no_value": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students"], "question": "What are the different addresses that have students living there?", "question_toks": ["What", "are", "the", "different", "addresses", "that", "have", "students", "living", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 33, true], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "query_toks": ["SELECT", "other_student_details", "FROM", "Students", "ORDER", "BY", "other_student_details", "DESC"], "query_toks_no_value": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc"], "question": "List all the student details in reversed lexicographical order.", "question_toks": ["List", "all", "the", "student", "details", "in", "reversed", "lexicographical", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "query_toks": ["SELECT", "other_student_details", "FROM", "Students", "ORDER", "BY", "other_student_details", "DESC"], "query_toks_no_value": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc"], "question": "What other details can you tell me about students in reverse alphabetical order?", "question_toks": ["What", "other", "details", "can", "you", "tell", "me", "about", "students", "in", "reverse", "alphabetical", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "query_toks": ["SELECT", "section_description", "FROM", "Sections", "WHERE", "section_name", "=", "'h", "'"], "query_toks_no_value": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value"], "question": "Describe the section h.", "question_toks": ["Describe", "the", "section", "h", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "query_toks": ["SELECT", "section_description", "FROM", "Sections", "WHERE", "section_name", "=", "'h", "'"], "query_toks_no_value": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value"], "question": "What is the description for the section named h?", "question_toks": ["What", "is", "the", "description", "for", "the", "section", "named", "h", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'", "query_toks": ["SELECT", "T1.first_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.permanent_address_id", "=", "T2.address_id", "WHERE", "T2.country", "=", "'Haiti", "'", "UNION", "SELECT", "first_name", "FROM", "Students", "WHERE", "cell_mobile_number", "=", "'09700166582", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "permanent_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "country", "=", "value", "union", "select", "first_name", "from", "students", "where", "cell_mobile_number", "=", "value"], "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.", "question_toks": ["Find", "the", "first", "name", "of", "the", "students", "who", "permanently", "live", "in", "the", "country", "Haiti", "or", "have", "the", "cell", "phone", "number", "09700166582", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]]}, "where": [[false, 2, [0, [0, 8, false], null], "\"Haiti\"", null]]}}, {"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'", "query_toks": ["SELECT", "T1.first_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.permanent_address_id", "=", "T2.address_id", "WHERE", "T2.country", "=", "'Haiti", "'", "UNION", "SELECT", "first_name", "FROM", "Students", "WHERE", "cell_mobile_number", "=", "'09700166582", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "permanent_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "country", "=", "value", "union", "select", "first_name", "from", "students", "where", "cell_mobile_number", "=", "value"], "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "question_toks": ["What", "are", "the", "first", "names", "of", "the", "students", "who", "live", "in", "Haiti", "permanently", "or", "have", "the", "cell", "phone", "number", "09700166582", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]]}, "where": [[false, 2, [0, [0, 8, false], null], "\"Haiti\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon ORDER BY title", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "ORDER", "BY", "title"], "query_toks_no_value": ["select", "title", "from", "cartoon", "order", "by", "title"], "question": "List the title of all cartoons in alphabetical order.", "question_toks": ["List", "the", "title", "of", "all", "cartoons", "in", "alphabetical", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon ORDER BY title", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "ORDER", "BY", "title"], "query_toks_no_value": ["select", "title", "from", "cartoon", "order", "by", "title"], "question": "What are the titles of the cartoons sorted alphabetically?", "question_toks": ["What", "are", "the", "titles", "of", "the", "cartoons", "sorted", "alphabetically", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "List all cartoon directed by \"Ben Jones\".", "question_toks": ["List", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "What are the names of all cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "names", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}}, {"db_id": "tvshow", "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Cartoon", "WHERE", "Written_by", "=", "``", "Joseph", "Kuhr", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value"], "question": "How many cartoons were written by \"Joseph Kuhr\"?", "question_toks": ["How", "many", "cartoons", "were", "written", "by", "``", "Joseph", "Kuhr", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]]}}, {"db_id": "tvshow", "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Cartoon", "WHERE", "Written_by", "=", "``", "Joseph", "Kuhr", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value"], "question": "What is the number of cartoones written by Joseph Kuhr?", "question_toks": ["What", "is", "the", "number", "of", "cartoones", "written", "by", "Joseph", "Kuhr", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]]}}, {"db_id": "tvshow", "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "query_toks": ["SELECT", "title", ",", "Directed_by", "FROM", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date"], "question": "list all cartoon titles and their directors ordered by their air date", "question_toks": ["list", "all", "cartoon", "titles", "and", "their", "directors", "ordered", "by", "their", "air", "date"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "query_toks": ["SELECT", "title", ",", "Directed_by", "FROM", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date"], "question": "What is the name and directors of all the cartoons that are ordered by air date?", "question_toks": ["What", "is", "the", "name", "and", "directors", "of", "all", "the", "cartoons", "that", "are", "ordered", "by", "air", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", "OR", "Directed_by", "=", "``", "Brandon", "Vietti", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value"], "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "question_toks": ["List", "the", "title", "of", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "or", "``", "Brandon", "Vietti", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", "OR", "Directed_by", "=", "``", "Brandon", "Vietti", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value"], "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "question_toks": ["What", "are", "the", "titles", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "or", "Brandon", "Vietti", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "question_toks": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the country with the most number of TV Channels and how many does it have?", "question_toks": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "series_name", ")", ",", "count", "(", "DISTINCT", "content", ")", "FROM", "TV_Channel", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel"], "question": "List the number of different series names and contents in the TV Channel table.", "question_toks": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "series_name", ")", ",", "count", "(", "DISTINCT", "content", ")", "FROM", "TV_Channel", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel"], "question": "How many different series and contents are listed in the TV Channel table?", "question_toks": ["How", "many", "different", "series", "and", "contents", "are", "listed", "in", "the", "TV", "Channel", "table", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Content", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the content of TV Channel with serial name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "content", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Content", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the content of the series Sky Radio?", "question_toks": ["What", "is", "the", "content", "of", "the", "series", "Sky", "Radio", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Package_Option", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "Package", "Option", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Package_Option", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "question_toks": ["What", "are", "the", "Package", "Options", "of", "the", "TV", "Channels", "whose", "series", "names", "are", "Sky", "Radio", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "TV_Channel", "WHERE", "LANGUAGE", "=", "``", "English", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value"], "question": "How many TV Channel using language English?", "question_toks": ["How", "many", "TV", "Channel", "using", "language", "English", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]]}}, {"db_id": "tvshow", "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "TV_Channel", "WHERE", "LANGUAGE", "=", "``", "English", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value"], "question": "How many TV Channels use the English language?", "question_toks": ["How", "many", "TV", "Channels", "use", "the", "English", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]]}}, {"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "List the language used least number of TV Channel. List language and number of TV Channel.", "question_toks": ["List", "the", "language", "used", "least", "number", "of", "TV", "Channel", ".", "List", "language", "and", "number", "of", "TV", "Channel", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What are the languages used by the least number of TV Channels and how many channels use it?", "question_toks": ["What", "are", "the", "languages", "used", "by", "the", "least", "number", "of", "TV", "Channels", "and", "how", "many", "channels", "use", "it", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language"], "question": "List each language and the number of TV Channels using it.", "question_toks": ["List", "each", "language", "and", "the", "number", "of", "TV", "Channels", "using", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language"], "question": "For each language, list the number of TV Channels that use it.", "question_toks": ["For", "each", "language", ",", "list", "the", "number", "of", "TV", "Channels", "that", "use", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Title", "=", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "``", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "title", "=", "value"], "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "question_toks": ["What", "is", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Title", "=", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "``", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "title", "=", "value"], "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "question_toks": ["What", "is", "the", "series", "name", "of", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Title", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "question_toks": ["List", "the", "title", "of", "all", "Cartoons", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Title", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "title", "of", "all", "the", "cartools", "that", "are", "on", "the", "TV", "Channel", "with", "the", "series", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Episode FROM TV_series ORDER BY rating", "query_toks": ["SELECT", "Episode", "FROM", "TV_series", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "episode", "from", "tv_series", "order", "by", "rating"], "question": "List the Episode of all TV series sorted by rating.", "question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "sorted", "by", "rating", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Episode FROM TV_series ORDER BY rating", "query_toks": ["SELECT", "Episode", "FROM", "TV_series", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "episode", "from", "tv_series", "order", "by", "rating"], "question": "What are all of the episodes ordered by ratings?", "question_toks": ["What", "are", "all", "of", "the", "episodes", "ordered", "by", "ratings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "query_toks": ["SELECT", "Episode", ",", "Rating", "FROM", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "value"], "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "question_toks": ["List", "top", "3", "highest", "Rating", "TV", "series", ".", "List", "the", "TV", "series", "'s", "Episode", "and", "Rating", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "query_toks": ["SELECT", "Episode", ",", "Rating", "FROM", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "value"], "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "question_toks": ["What", "are", "3", "most", "highly", "rated", "episodes", "in", "the", "TV", "series", "table", "and", "what", "were", "those", "ratings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "TV_series", ";"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series"], "question": "What is minimum and maximum share of TV series?", "question_toks": ["What", "is", "minimum", "and", "maximum", "share", "of", "TV", "series", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "TV_series", ";"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series"], "question": "What is the maximum and minimum share for the TV series?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "share", "for", "the", "TV", "series", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Air_Date", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "air", "date", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Air_Date", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value"], "question": "When did the episode \"A Love of a Lifetime\" air?", "question_toks": ["When", "did", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "air", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Weekly_Rank", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "Weekly", "Rank", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Weekly_Rank", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "weekly", "rank", "for", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "episode", "=", "value"], "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "question_toks": ["What", "is", "the", "TV", "Channel", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "episode", "=", "value"], "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "name", "of", "the", "series", "that", "has", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Episode", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Episode", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "What is the episode for the TV series named \"Sky Radio\"?", "question_toks": ["What", "is", "the", "episode", "for", "the", "TV", "series", "named", "``", "Sky", "Radio", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]]}}, {"db_id": "tvshow", "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Directed_by", "FROM", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by"], "question": "Find the number of cartoons directed by each of the listed directors.", "question_toks": ["Find", "the", "number", "of", "cartoons", "directed", "by", "each", "of", "the", "listed", "directors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Directed_by", "FROM", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by"], "question": "How many cartoons did each director create?", "question_toks": ["How", "many", "cartoons", "did", "each", "director", "create", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1", "query_toks": ["SELECT", "production_code", ",", "channel", "FROM", "cartoon", "ORDER", "BY", "original_air_date", "LIMIT", "1"], "query_toks_no_value": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "limit", "value"], "question": "Find the production code and channel of the most recently aired cartoon.", "question_toks": ["Find", "the", "production", "code", "and", "channel", "of", "the", "most", "recently", "aired", "cartoon", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1", "query_toks": ["SELECT", "production_code", ",", "channel", "FROM", "cartoon", "ORDER", "BY", "original_air_date", "LIMIT", "1"], "query_toks_no_value": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "limit", "value"], "question": "What is the produdction code and channel of the most recent cartoon?", "question_toks": ["What", "is", "the", "produdction", "code", "and", "channel", "of", "the", "most", "recent", "cartoon", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "package_option", ",", "series_name", "FROM", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value"], "question": "Find the package choice and series name of the TV channel that has high definition TV.", "question_toks": ["Find", "the", "package", "choice", "and", "series", "name", "of", "the", "TV", "channel", "that", "has", "high", "definition", "TV", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]]}}, {"db_id": "tvshow", "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "package_option", ",", "series_name", "FROM", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value"], "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "question_toks": ["What", "are", "the", "package", "options", "and", "the", "name", "of", "the", "series", "for", "the", "TV", "Channel", "that", "supports", "high", "definition", "TV", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "which countries' tv channels are playing some cartoon written by Todd Casey?", "question_toks": ["which", "countries", "'", "tv", "channels", "are", "playing", "some", "cartoon", "written", "by", "Todd", "Casey", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "What are the countries that have cartoons on TV that were written by Todd Casey?", "question_toks": ["What", "are", "the", "countries", "that", "have", "cartoons", "on", "TV", "that", "were", "written", "by", "Todd", "Casey", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]]}}, {"db_id": "tvshow", "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "country", "FROM", "TV_Channel", "EXCEPT", "SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "country", "from", "tv_channel", "except", "select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "question_toks": ["which", "countries", "'", "tv", "channels", "are", "not", "playing", "any", "cartoon", "written", "by", "Todd", "Casey", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "country", "FROM", "TV_Channel", "EXCEPT", "SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "country", "from", "tv_channel", "except", "select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "What are the countries that are not playing cartoons written by Todd Casey?", "question_toks": ["What", "are", "the", "countries", "that", "are", "not", "playing", "cartoons", "written", "by", "Todd", "Casey", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Michael", "Chang", "'", "INTERSECT", "SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value", "intersect", "select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value"], "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "question_toks": ["Find", "the", "series", "name", "and", "country", "of", "the", "tv", "channel", "that", "is", "playing", "some", "cartoons", "directed", "by", "Ben", "Jones", "and", "Michael", "Chang", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]]}}, {"db_id": "tvshow", "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Michael", "Chang", "'", "INTERSECT", "SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value", "intersect", "select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value"], "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "question_toks": ["What", "is", "the", "series", "name", "and", "country", "of", "all", "TV", "channels", "that", "are", "playing", "cartoons", "directed", "by", "Ben", "Jones", "and", "cartoons", "directed", "by", "Michael", "Chang", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "query_toks": ["SELECT", "Pixel_aspect_ratio_PAR", ",", "country", "FROM", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!", "=", "value"], "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "question_toks": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]]}}, {"db_id": "tvshow", "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "query_toks": ["SELECT", "Pixel_aspect_ratio_PAR", ",", "country", "FROM", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!", "=", "value"], "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "question_toks": ["What", "is", "the", "pixel", "aspect", "ratio", "and", "country", "of", "origin", "for", "all", "TV", "channels", "that", "do", "not", "use", "English", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]]}}, {"db_id": "tvshow", "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "query_toks": ["SELECT", "id", "FROM", "tv_channel", "GROUP", "BY", "country", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "find id of the tv channels that from the countries where have more than two tv channels.", "question_toks": ["find", "id", "of", "the", "tv", "channels", "that", "from", "the", "countries", "where", "have", "more", "than", "two", "tv", "channels", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "query_toks": ["SELECT", "id", "FROM", "tv_channel", "GROUP", "BY", "country", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids of all tv channels that have more than 2 TV channels?", "question_toks": ["What", "are", "the", "ids", "of", "all", "tv", "channels", "that", "have", "more", "than", "2", "TV", "channels", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "id", "FROM", "TV_Channel", "EXCEPT", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "question_toks": ["find", "the", "id", "of", "tv", "channels", "that", "do", "not", "play", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "id", "FROM", "TV_Channel", "EXCEPT", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "ids", "of", "the", "TV", "channels", "that", "do", "not", "have", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "tvshow", "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "query_toks": ["SELECT", "package_option", "FROM", "TV_Channel", "WHERE", "id", "NOT", "IN", "(", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'", ")"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")"], "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "question_toks": ["find", "the", "package", "option", "of", "the", "tv", "channel", "that", "do", "not", "have", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, null]]}}, {"db_id": "tvshow", "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "query_toks": ["SELECT", "package_option", "FROM", "TV_Channel", "WHERE", "id", "NOT", "IN", "(", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'", ")"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")"], "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "package", "options", "of", "all", "tv", "channels", "that", "are", "not", "playing", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]]}, null]]}}, {"db_id": "voter_1", "query": "SELECT count(*) FROM area_code_state", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "area_code_state"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "area_code_state"], "question": "How many states are there?", "question_toks": ["How", "many", "states", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "query_toks": ["SELECT", "contestant_number", ",", "contestant_name", "FROM", "contestants", "ORDER", "BY", "contestant_name", "DESC"], "query_toks_no_value": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc"], "question": "List the contestant numbers and names, ordered by contestant name descending.", "question_toks": ["List", "the", "contestant", "numbers", "and", "names", ",", "ordered", "by", "contestant", "name", "descending", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT vote_id ,  phone_number ,  state FROM votes", "query_toks": ["SELECT", "vote_id", ",", "phone_number", ",", "state", "FROM", "votes"], "query_toks_no_value": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes"], "question": "List the vote ids, phone numbers and states of all votes.", "question_toks": ["List", "the", "vote", "ids", ",", "phone", "numbers", "and", "states", "of", "all", "votes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "query_toks": ["SELECT", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "FROM", "area_code_state"], "query_toks_no_value": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state"], "question": "What are the maximum and minimum values of area codes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "values", "of", "area", "codes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 1, false], null]], [2, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT max(created) FROM votes WHERE state  =  'CA'", "query_toks": ["SELECT", "max", "(", "created", ")", "FROM", "votes", "WHERE", "state", "=", "'CA", "'"], "query_toks_no_value": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "value"], "question": "What is last date created of votes from the state 'CA'?", "question_toks": ["What", "is", "last", "date", "created", "of", "votes", "from", "the", "state", "'CA", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"CA\"", null]]}}, {"db_id": "voter_1", "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "query_toks": ["SELECT", "contestant_name", "FROM", "contestants", "WHERE", "contestant_name", "!", "=", "'Jessie", "Alloway", "'"], "query_toks_no_value": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!", "=", "value"], "question": "What are the names of the contestants whose names are not 'Jessie Alloway'", "question_toks": ["What", "are", "the", "names", "of", "the", "contestants", "whose", "names", "are", "not", "'Jessie", "Alloway", "'"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"Jessie Alloway\"", null]]}}, {"db_id": "voter_1", "query": "SELECT DISTINCT state ,  created FROM votes", "query_toks": ["SELECT", "DISTINCT", "state", ",", "created", "FROM", "votes"], "query_toks_no_value": ["select", "distinct", "state", ",", "created", "from", "votes"], "question": "What are the distinct states and create time of all votes?", "question_toks": ["What", "are", "the", "distinct", "states", "and", "create", "time", "of", "all", "votes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.contestant_number", ",", "T1.contestant_name", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "GROUP", "BY", "T1.contestant_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "contestant_number", ",", "t1", ".", "contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "group", "by", "t1", ".", "contestant_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the contestant numbers and names of the contestants who had at least two votes?", "question_toks": ["What", "are", "the", "contestant", "numbers", "and", "names", "of", "the", "contestants", "who", "had", "at", "least", "two", "votes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.contestant_number", ",", "T1.contestant_name", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "GROUP", "BY", "T1.contestant_number", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "contestant_number", ",", "t1", ".", "contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "group", "by", "t1", ".", "contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "question_toks": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "votes", "WHERE", "state", "=", "'NY", "'", "OR", "state", "=", "'CA", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the number of votes from state 'NY' or 'CA'?", "question_toks": ["What", "are", "the", "number", "of", "votes", "from", "state", "'NY", "'", "or", "'CA", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"NY\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"CA\"", null]]}}, {"db_id": "voter_1", "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "contestants", "WHERE", "contestant_number", "NOT", "IN", "(", "SELECT", "contestant_number", "FROM", "votes", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")"], "question": "How many contestants did not get voted?", "question_toks": ["How", "many", "contestants", "did", "not", "get", "voted", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "voter_1", "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.area_code", "FROM", "area_code_state", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.state", "=", "T2.state", "GROUP", "BY", "T1.area_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "state", "=", "t2", ".", "state", "group", "by", "t1", ".", "area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the area code in which the most voters voted?", "question_toks": ["What", "is", "the", "area", "code", "in", "which", "the", "most", "voters", "voted", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_1", "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "query_toks": ["SELECT", "T2.created", ",", "T2.state", ",", "T2.phone_number", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "WHERE", "T1.contestant_name", "=", "'Tabatha", "Gehling", "'"], "query_toks_no_value": ["select", "t2", ".", "created", ",", "t2", ".", "state", ",", "t2", ".", "phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "where", "t1", ".", "contestant_name", "=", "value"], "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "question_toks": ["What", "are", "the", "create", "dates", ",", "states", ",", "and", "phone", "numbers", "of", "the", "votes", "that", "were", "for", "the", "contestant", "named", "'Tabatha", "Gehling", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]]}}, {"db_id": "voter_1", "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "query_toks": ["SELECT", "T3.area_code", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "JOIN", "area_code_state", "AS", "T3", "ON", "T2.state", "=", "T3.state", "WHERE", "T1.contestant_name", "=", "'Tabatha", "Gehling", "'", "INTERSECT", "SELECT", "T3.area_code", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "JOIN", "area_code_state", "AS", "T3", "ON", "T2.state", "=", "T3.state", "WHERE", "T1.contestant_name", "=", "'Kelly", "Clauss", "'"], "query_toks_no_value": ["select", "t3", ".", "area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "join", "area_code_state", "as", "t3", "on", "t2", ".", "state", "=", "t3", ".", "state", "where", "t1", ".", "contestant_name", "=", "value", "intersect", "select", "t3", ".", "area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "join", "area_code_state", "as", "t3", "on", "t2", ".", "state", "=", "t3", ".", "state", "where", "t1", ".", "contestant_name", "=", "value"], "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "question_toks": ["List", "the", "area", "codes", "in", "which", "voters", "voted", "both", "for", "the", "contestant", "'Tabatha", "Gehling", "'", "and", "the", "contestant", "'Kelly", "Clauss", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Kelly Clauss\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]]}}, {"db_id": "voter_1", "query": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"", "query_toks": ["SELECT", "contestant_name", "FROM", "contestants", "WHERE", "contestant_name", "LIKE", "``", "%", "Al", "%", "''"], "query_toks_no_value": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "value"], "question": "Return the names the contestants whose names contain the substring 'Al'.", "question_toks": ["Return", "the", "names", "the", "contestants", "whose", "names", "contain", "the", "substring", "'Al", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 4, false], null], "\"%Al%\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE IndepYear  >  1950", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "IndepYear", ">", "1950"], "query_toks_no_value": ["select", "name", "from", "country", "where", "indepyear", ">", "value"], "question": "What are the names of all the countries that became independent after 1950?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "countries", "that", "became", "independent", "after", "1950", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE IndepYear  >  1950", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "IndepYear", ">", "1950"], "query_toks_no_value": ["select", "name", "from", "country", "where", "indepyear", ">", "value"], "question": "Give the names of the nations that were founded after 1950.", "question_toks": ["Give", "the", "names", "of", "the", "nations", "that", "were", "founded", "after", "1950", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]]}}, {"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "How many countries have a republic as their form of government?", "question_toks": ["How", "many", "countries", "have", "a", "republic", "as", "their", "form", "of", "government", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "How many countries have governments that are republics?", "question_toks": ["How", "many", "countries", "have", "governments", "that", "are", "republics", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Caribbean", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value"], "question": "What is the total surface area of the countries in the Caribbean region?", "question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "countries", "in", "the", "Caribbean", "region", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Caribbean", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value"], "question": "How much surface area do the countires in the Carribean cover together?", "question_toks": ["How", "much", "surface", "area", "do", "the", "countires", "in", "the", "Carribean", "cover", "together", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]]}}, {"db_id": "world_1", "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "query_toks": ["SELECT", "Continent", "FROM", "country", "WHERE", "Name", "=", "``", "Anguilla", "''"], "query_toks_no_value": ["select", "continent", "from", "country", "where", "name", "=", "value"], "question": "Which continent is Anguilla in?", "question_toks": ["Which", "continent", "is", "Anguilla", "in", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]]}}, {"db_id": "world_1", "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "query_toks": ["SELECT", "Continent", "FROM", "country", "WHERE", "Name", "=", "``", "Anguilla", "''"], "query_toks_no_value": ["select", "continent", "from", "country", "where", "name", "=", "value"], "question": "What is the continent name which Anguilla belongs to?", "question_toks": ["What", "is", "the", "continent", "name", "which", "Anguilla", "belongs", "to", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]]}}, {"db_id": "world_1", "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "query_toks": ["SELECT", "Region", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Name", "=", "``", "Kabul", "''"], "query_toks_no_value": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "name", "=", "value"], "question": "Which region is the city Kabul located in?", "question_toks": ["Which", "region", "is", "the", "city", "Kabul", "located", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]]}}, {"db_id": "world_1", "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "query_toks": ["SELECT", "Region", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Name", "=", "``", "Kabul", "''"], "query_toks_no_value": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "name", "=", "value"], "question": "What region is Kabul in?", "question_toks": ["What", "region", "is", "Kabul", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''", "ORDER", "BY", "Percentage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "order", "by", "percentage", "desc", "limit", "value"], "question": "Which language is the most popular in Aruba?", "question_toks": ["Which", "language", "is", "the", "most", "popular", "in", "Aruba", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 26, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''", "ORDER", "BY", "Percentage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "order", "by", "percentage", "desc", "limit", "value"], "question": "What language is predominantly spoken in Aruba?", "question_toks": ["What", "language", "is", "predominantly", "spoken", "in", "Aruba", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 26, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]]}}, {"db_id": "world_1", "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "query_toks": ["SELECT", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value"], "question": "What are the population and life expectancies in Brazil?", "question_toks": ["What", "are", "the", "population", "and", "life", "expectancies", "in", "Brazil", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]]}}, {"db_id": "world_1", "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "query_toks": ["SELECT", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value"], "question": "Give me Brazil\u2019s population and life expectancies.", "question_toks": ["Give", "me", "Brazil\u2019s", "population", "and", "life", "expectancies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]]}}, {"db_id": "world_1", "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "query_toks": ["SELECT", "Population", ",", "Region", "FROM", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value"], "question": "What are the region and population of Angola?", "question_toks": ["What", "are", "the", "region", "and", "population", "of", "Angola", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]]}}, {"db_id": "world_1", "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "query_toks": ["SELECT", "Population", ",", "Region", "FROM", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value"], "question": "What region does Angola belong to and what is its population?", "question_toks": ["What", "region", "does", "Angola", "belong", "to", "and", "what", "is", "its", "population", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Central", "Africa", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value"], "question": "What is the average expected life expectancy for countries in the region of Central Africa?", "question_toks": ["What", "is", "the", "average", "expected", "life", "expectancy", "for", "countries", "in", "the", "region", "of", "Central", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Central", "Africa", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value"], "question": "How long is the people\u2019s average life expectancy in Central Africa?", "question_toks": ["How", "long", "is", "the", "people\u2019s", "average", "life", "expectancy", "in", "Central", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "LifeExpectancy", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "value"], "question": "What is the name of country that has the shortest life expectancy in Asia?", "question_toks": ["What", "is", "the", "name", "of", "country", "that", "has", "the", "shortest", "life", "expectancy", "in", "Asia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "LifeExpectancy", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "value"], "question": "Give the name of the country in Asia with the lowest life expectancy.", "question_toks": ["Give", "the", "name", "of", "the", "country", "in", "Asia", "with", "the", "lowest", "life", "expectancy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "max", "(", "GNP", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value"], "question": "What is the total population and maximum GNP in Asia?", "question_toks": ["What", "is", "the", "total", "population", "and", "maximum", "GNP", "in", "Asia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "max", "(", "GNP", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many people live in Asia, and what is the largest GNP among them?", "question_toks": ["How", "many", "people", "live", "in", "Asia", ",", "and", "what", "is", "the", "largest", "GNP", "among", "them", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value"], "question": "What is the average life expectancy in African countries that are republics?", "question_toks": ["What", "is", "the", "average", "life", "expectancy", "in", "African", "countries", "that", "are", "republics", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value"], "question": "Give the average life expectancy for countries in Africa which are republics?", "question_toks": ["Give", "the", "average", "life", "expectancy", "for", "countries", "in", "Africa", "which", "are", "republics", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "OR", "Continent", "=", "``", "Europe", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value"], "question": "What is the total surface area of the continents Asia and Europe?", "question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "continents", "Asia", "and", "Europe", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "OR", "Continent", "=", "``", "Europe", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value"], "question": "Give the total surface area covered by countries in Asia or Europe.", "question_toks": ["Give", "the", "total", "surface", "area", "covered", "by", "countries", "in", "Asia", "or", "Europe", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "city", "WHERE", "District", "=", "``", "Gelderland", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value"], "question": "How many people live in Gelderland district?", "question_toks": ["How", "many", "people", "live", "in", "Gelderland", "district", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "city", "WHERE", "District", "=", "``", "Gelderland", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value"], "question": "What is the total population of Gelderland district?", "question_toks": ["What", "is", "the", "total", "population", "of", "Gelderland", "district", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "avg", "(", "GNP", ")", ",", "sum", "(", "population", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "What is the average GNP and total population in all nations whose government is US territory?", "question_toks": ["What", "is", "the", "average", "GNP", "and", "total", "population", "in", "all", "nations", "whose", "government", "is", "US", "territory", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "avg", "(", "GNP", ")", ",", "sum", "(", "population", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "Give the mean GNP and total population of nations which are considered US territory.", "question_toks": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LANGUAGE", ")", "FROM", "countrylanguage"], "query_toks_no_value": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage"], "question": "How many unique languages are spoken in the world?", "question_toks": ["How", "many", "unique", "languages", "are", "spoken", "in", "the", "world", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, true], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LANGUAGE", ")", "FROM", "countrylanguage"], "query_toks_no_value": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage"], "question": "What is the number of distinct languages used around the world?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "languages", "used", "around", "the", "world", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, true], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "GovernmentForm", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many type of governments are in Africa?", "question_toks": ["How", "many", "type", "of", "governments", "are", "in", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 19, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "GovernmentForm", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many different forms of governments are there in Africa?", "question_toks": ["How", "many", "different", "forms", "of", "governments", "are", "there", "in", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 19, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value"], "question": "What is the total number of languages used in Aruba?", "question_toks": ["What", "is", "the", "total", "number", "of", "languages", "used", "in", "Aruba", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value"], "question": "How many languages are spoken in Aruba?", "question_toks": ["How", "many", "languages", "are", "spoken", "in", "Aruba", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Afghanistan", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "and", "isofficial", "=", "value"], "question": "How many official languages does Afghanistan have?", "question_toks": ["How", "many", "official", "languages", "does", "Afghanistan", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Afghanistan", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "and", "isofficial", "=", "value"], "question": "How many official languages are spoken in Afghanistan?", "question_toks": ["How", "many", "official", "languages", "are", "spoken", "in", "Afghanistan", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is name of the country that speaks the largest number of languages?", "question_toks": ["What", "is", "name", "of", "the", "country", "that", "speaks", "the", "largest", "number", "of", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the name of the nation that uses the greatest amount of languages.", "question_toks": ["Give", "the", "name", "of", "the", "nation", "that", "uses", "the", "greatest", "amount", "of", "languages", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Continent", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Continent", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which continent has the most diverse languages?", "question_toks": ["Which", "continent", "has", "the", "most", "diverse", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Continent", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Continent", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which continent speaks the most languages?", "question_toks": ["Which", "continent", "speaks", "the", "most", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "How many countries speak both English and Dutch?", "question_toks": ["How", "many", "countries", "speak", "both", "English", "and", "Dutch", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["sql", {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "What is the number of nations that use English and Dutch?", "question_toks": ["What", "is", "the", "number", "of", "nations", "that", "use", "English", "and", "Dutch", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["sql", {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "What are the names of nations speak both English and French?", "question_toks": ["What", "are", "the", "names", "of", "nations", "speak", "both", "English", "and", "French", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "Give the names of nations that speak both English and French.", "question_toks": ["Give", "the", "names", "of", "nations", "that", "speak", "both", "English", "and", "French", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What are the names of nations where both English and French are official languages?", "question_toks": ["What", "are", "the", "names", "of", "nations", "where", "both", "English", "and", "French", "are", "official", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "Give the names of countries with English and French as official languages.", "question_toks": ["Give", "the", "names", "of", "countries", "with", "English", "and", "French", "as", "official", "languages", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "What is the number of distinct continents where Chinese is spoken?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "continents", "where", "Chinese", "is", "spoken", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 10, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]]}}, {"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "How many continents speak Chinese?", "question_toks": ["How", "many", "continents", "speak", "Chinese", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 10, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "query_toks": ["SELECT", "DISTINCT", "T1.Region", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "OR", "T2.Language", "=", "``", "Dutch", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "or", "t2", ".", "language", "=", "value"], "question": "What are the regions that use English or Dutch?", "question_toks": ["What", "are", "the", "regions", "that", "use", "English", "or", "Dutch", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "query_toks": ["SELECT", "DISTINCT", "T1.Region", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "OR", "T2.Language", "=", "``", "Dutch", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "or", "t2", ".", "language", "=", "value"], "question": "Which regions speak Dutch or English?", "question_toks": ["Which", "regions", "speak", "Dutch", "or", "English", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]]}}, {"db_id": "world_1", "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "IsOfficial", "=", "``", "T", "''", "UNION", "SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value"], "question": "What are the countries where either English or Dutch is the official language?", "question_toks": ["What", "are", "the", "countries", "where", "either", "English", "or", "Dutch", "is", "the", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "IsOfficial", "=", "``", "T", "''", "UNION", "SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value"], "question": "Which countries have either English or Dutch as an official language?", "question_toks": ["Which", "countries", "have", "either", "English", "or", "Dutch", "as", "an", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Continent", "=", "``", "Asia", "''", "GROUP", "BY", "T2.Language", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "continent", "=", "value", "group", "by", "t2", ".", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which language is the most popular on the Asian continent?", "question_toks": ["Which", "language", "is", "the", "most", "popular", "on", "the", "Asian", "continent", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Continent", "=", "``", "Asia", "''", "GROUP", "BY", "T2.Language", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "continent", "=", "value", "group", "by", "t2", ".", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the language that is used by the largest number of Asian nations?", "question_toks": ["What", "is", "the", "language", "that", "is", "used", "by", "the", "largest", "number", "of", "Asian", "nations", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.GovernmentForm", "=", "``", "Republic", "''", "GROUP", "BY", "T2.Language", "HAVING", "COUNT", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "governmentform", "=", "value", "group", "by", "t2", ".", "language", "having", "count", "(", "*", ")", "=", "value"], "question": "Which languages are spoken by only one country in republic governments?", "question_toks": ["Which", "languages", "are", "spoken", "by", "only", "one", "country", "in", "republic", "governments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.GovernmentForm", "=", "``", "Republic", "''", "GROUP", "BY", "T2.Language", "HAVING", "COUNT", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "governmentform", "=", "value", "group", "by", "t2", ".", "language", "having", "count", "(", "*", ")", "=", "value"], "question": "What languages are only used by a single country with a republic government?", "question_toks": ["What", "languages", "are", "only", "used", "by", "a", "single", "country", "with", "a", "republic", "government", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Population", "FROM", "city", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.CountryCode", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "ORDER", "BY", "T1.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "countrycode", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "order", "by", "t1", ".", "population", "desc", "limit", "value"], "question": "Find the city with the largest population that uses English.", "question_toks": ["Find", "the", "city", "with", "the", "largest", "population", "that", "uses", "English", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Population", "FROM", "city", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.CountryCode", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "ORDER", "BY", "T1.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "countrycode", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "order", "by", "t1", ".", "population", "desc", "limit", "value"], "question": "What is the most populace city that speaks English?", "question_toks": ["What", "is", "the", "most", "populace", "city", "that", "speaks", "English", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Find the name, population and expected life length of asian country with the largest area?", "question_toks": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the name, population, and life expectancy of the largest Asian country by land?", "question_toks": ["What", "are", "the", "name", ",", "population", ",", "and", "life", "expectancy", "of", "the", "largest", "Asian", "country", "by", "land", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", ")"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", ")"], "question": "What is average life expectancy in the countries where English is not the official language?", "question_toks": ["What", "is", "average", "life", "expectancy", "in", "the", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", ")"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", ")"], "question": "Give the mean life expectancy of countries in which English is not the official language.", "question_toks": ["Give", "the", "mean", "life", "expectancy", "of", "countries", "in", "which", "English", "is", "not", "the", "official", "language", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "What is the total number of people living in the nations that do not use English?", "question_toks": ["What", "is", "the", "total", "number", "of", "people", "living", "in", "the", "nations", "that", "do", "not", "use", "English", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "How many people live in countries that do not speak English?", "question_toks": ["How", "many", "people", "live", "in", "countries", "that", "do", "not", "speak", "English", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.HeadOfState", "=", "``", "Beatrix", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "headofstate", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the official language spoken in the country whose head of state is Beatrix?", "question_toks": ["What", "is", "the", "official", "language", "spoken", "in", "the", "country", "whose", "head", "of", "state", "is", "Beatrix", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.HeadOfState", "=", "``", "Beatrix", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "headofstate", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the official language used in the country the name of whose head of state is Beatrix.", "question_toks": ["What", "is", "the", "official", "language", "used", "in", "the", "country", "the", "name", "of", "whose", "head", "of", "state", "is", "Beatrix", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "IndepYear", "<", "1930", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "indepyear", "<", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "question_toks": ["What", "is", "the", "total", "number", "of", "unique", "official", "languages", "spoken", "in", "the", "countries", "that", "are", "founded", "before", "1930", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, true], null]]]], "union": null, "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "IndepYear", "<", "1930", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "indepyear", "<", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "For the countries founded before 1930, what is the total number of distinct official languages?", "question_toks": ["For", "the", "countries", "founded", "before", "1930", ",", "what", "is", "the", "total", "number", "of", "distinct", "official", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, true], null]]]], "union": null, "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "SurfaceArea", ">", "(", "SELECT", "min", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Europe", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the countries that have greater surface area than any country in Europe?", "question_toks": ["What", "are", "the", "countries", "that", "have", "greater", "surface", "area", "than", "any", "country", "in", "Europe", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "SurfaceArea", ">", "(", "SELECT", "min", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Europe", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which countries have greater area than that of any country in Europe?", "question_toks": ["Which", "countries", "have", "greater", "area", "than", "that", "of", "any", "country", "in", "Europe", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "population", "<", "(", "SELECT", "max", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the African countries that have a  population less than any country in Asia?", "question_toks": ["What", "are", "the", "African", "countries", "that", "have", "a", "population", "less", "than", "any", "country", "in", "Asia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "population", "<", "(", "SELECT", "min", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which African countries have a smaller population than that of any country in Asia?", "question_toks": ["Which", "African", "countries", "have", "a", "smaller", "population", "than", "that", "of", "any", "country", "in", "Asia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "AND", "population", ">", "(", "SELECT", "max", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which Asian countries have a population that is larger than any country in Africa?", "question_toks": ["Which", "Asian", "countries", "have", "a", "population", "that", "is", "larger", "than", "any", "country", "in", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "AND", "population", ">", "(", "SELECT", "min", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the Asian countries which have a population larger than that of any country in Africa?", "question_toks": ["What", "are", "the", "Asian", "countries", "which", "have", "a", "population", "larger", "than", "that", "of", "any", "country", "in", "Africa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "CountryCode", "FROM", "countrylanguage", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "What are the country codes for countries that do not speak English?", "question_toks": ["What", "are", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "?"], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "CountryCode", "FROM", "countrylanguage", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "Return the country codes for countries that do not speak English.", "question_toks": ["Return", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "."], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "query_toks": ["SELECT", "DISTINCT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "!", "=", "``", "English", "''"], "query_toks_no_value": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!", "=", "value"], "question": "What are the country codes of countries where people use languages other than English?", "question_toks": ["What", "are", "the", "country", "codes", "of", "countries", "where", "people", "use", "languages", "other", "than", "English", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "query_toks": ["SELECT", "DISTINCT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "!", "=", "``", "English", "''"], "query_toks_no_value": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!", "=", "value"], "question": "Give the country codes for countries in which people speak langauges that are not English.", "question_toks": ["Give", "the", "country", "codes", "for", "countries", "in", "which", "people", "speak", "langauges", "that", "are", "not", "English", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]]}}, {"db_id": "world_1", "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "Code", "FROM", "country", "WHERE", "GovernmentForm", "!", "=", "``", "Republic", "''", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "code", "from", "country", "where", "governmentform", "!", "=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "question_toks": ["What", "are", "the", "codes", "of", "the", "countries", "that", "do", "not", "speak", "English", "and", "whose", "government", "forms", "are", "not", "Republic", "?"], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "Code", "FROM", "country", "WHERE", "GovernmentForm", "!", "=", "``", "Republic", "''", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "code", "from", "country", "where", "governmentform", "!", "=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "Return the codes of countries that do not speak English and do not have Republics for governments.", "question_toks": ["Return", "the", "codes", "of", "countries", "that", "do", "not", "speak", "English", "and", "do", "not", "have", "Republics", "for", "governments", "."], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T2.CountryCode", "=", "T1.Code", "WHERE", "T1.Continent", "=", "'Europe", "'", "AND", "T1.Name", "NOT", "IN", "(", "SELECT", "T3.Name", "FROM", "country", "AS", "T3", "JOIN", "countrylanguage", "AS", "T4", "ON", "T3.Code", "=", "T4.CountryCode", "WHERE", "T4.IsOfficial", "=", "'T", "'", "AND", "T4.Language", "=", "'English", "'", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2", ".", "countrycode", "=", "t1", ".", "code", "where", "t1", ".", "continent", "=", "value", "and", "t1", ".", "name", "not", "in", "(", "select", "t3", ".", "name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3", ".", "code", "=", "t4", ".", "countrycode", "where", "t4", ".", "isofficial", "=", "value", "and", "t4", ".", "language", "=", "value", ")"], "question": "Which cities are in European countries where English is not the official language?", "question_toks": ["Which", "cities", "are", "in", "European", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T2.CountryCode", "=", "T1.Code", "WHERE", "T1.Continent", "=", "'Europe", "'", "AND", "T1.Name", "NOT", "IN", "(", "SELECT", "T3.Name", "FROM", "country", "AS", "T3", "JOIN", "countrylanguage", "AS", "T4", "ON", "T3.Code", "=", "T4.CountryCode", "WHERE", "T4.IsOfficial", "=", "'T", "'", "AND", "T4.Language", "=", "'English", "'", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2", ".", "countrycode", "=", "t1", ".", "code", "where", "t1", ".", "continent", "=", "value", "and", "t1", ".", "name", "not", "in", "(", "select", "t3", ".", "name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3", ".", "code", "=", "t4", ".", "countrycode", "where", "t4", ".", "isofficial", "=", "value", "and", "t4", ".", "language", "=", "value", ")"], "question": "What are the names of cities in Europe for which English is not the official language?", "question_toks": ["What", "are", "the", "names", "of", "cities", "in", "Europe", "for", "which", "English", "is", "not", "the", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]]}, null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "query_toks": ["SELECT", "DISTINCT", "T3.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "JOIN", "city", "AS", "T3", "ON", "T1.Code", "=", "T3.CountryCode", "WHERE", "T2.IsOfficial", "=", "'T", "'", "AND", "T2.Language", "=", "'Chinese", "'", "AND", "T1.Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "join", "city", "as", "t3", "on", "t1", ".", "code", "=", "t3", ".", "countrycode", "where", "t2", ".", "isofficial", "=", "value", "and", "t2", ".", "language", "=", "value", "and", "t1", ".", "continent", "=", "value"], "question": "Whic`h unique cities are in  Asian countries where Chinese is the official language?", "question_toks": ["Whic`h", "unique", "cities", "are", "in", "Asian", "countries", "where", "Chinese", "is", "the", "official", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "query_toks": ["SELECT", "DISTINCT", "T3.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "JOIN", "city", "AS", "T3", "ON", "T1.Code", "=", "T3.CountryCode", "WHERE", "T2.IsOfficial", "=", "'T", "'", "AND", "T2.Language", "=", "'Chinese", "'", "AND", "T1.Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "join", "city", "as", "t3", "on", "t1", ".", "code", "=", "t3", ".", "countrycode", "where", "t2", ".", "isofficial", "=", "value", "and", "t2", ".", "language", "=", "value", "and", "t1", ".", "continent", "=", "value"], "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "question_toks": ["Return", "the", "different", "names", "of", "cities", "that", "are", "in", "Asia", "and", "for", "which", "Chinese", "is", "the", "official", "language", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", ",", "IndepYear", "FROM", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "value"], "question": "What are the name, independence year, and surface area of the country with the smallest population?", "question_toks": ["What", "are", "the", "name", ",", "independence", "year", ",", "and", "surface", "area", "of", "the", "country", "with", "the", "smallest", "population", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", ",", "IndepYear", "FROM", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "value"], "question": "Give the name, year of independence, and surface area of the country that has the lowest population.", "question_toks": ["Give", "the", "name", ",", "year", "of", "independence", ",", "and", "surface", "area", "of", "the", "country", "that", "has", "the", "lowest", "population", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "population", ",", "HeadOfState", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the population, name and leader of the country with the largest area?", "question_toks": ["What", "are", "the", "population", ",", "name", "and", "leader", "of", "the", "country", "with", "the", "largest", "area", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "population", ",", "HeadOfState", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Give the name, population, and head of state for the country that has the largest area.", "question_toks": ["Give", "the", "name", ",", "population", ",", "and", "head", "of", "state", "for", "the", "country", "that", "has", "the", "largest", "area", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "question_toks": ["Return", "the", "country", "name", "and", "the", "numbers", "of", "languages", "spoken", "for", "each", "country", "that", "speaks", "at", "least", "3", "languages", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "question_toks": ["What", "are", "the", "names", "of", "countries", "that", "speak", "more", "than", "2", "languages", ",", "as", "well", "as", "how", "many", "languages", "they", "speak", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "District", "FROM", "city", "WHERE", "Population", ">", "(", "SELECT", "avg", "(", "Population", ")", "FROM", "city", ")", "GROUP", "BY", "District"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district"], "question": "Find the number of cities in each district whose population is greater than the average population of cities?", "question_toks": ["Find", "the", "number", "of", "cities", "in", "each", "district", "whose", "population", "is", "greater", "than", "the", "average", "population", "of", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "world_1", "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "District", "FROM", "city", "WHERE", "Population", ">", "(", "SELECT", "avg", "(", "Population", ")", "FROM", "city", ")", "GROUP", "BY", "District"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district"], "question": "How many cities in each district have a population that is above the average population across all cities?", "question_toks": ["How", "many", "cities", "in", "each", "district", "have", "a", "population", "that", "is", "above", "the", "average", "population", "across", "all", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "GovernmentForm", "FROM", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "value"], "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "question_toks": ["Find", "the", "government", "form", "name", "and", "total", "population", "for", "each", "government", "form", "whose", "average", "life", "expectancy", "is", "longer", "than", "72", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "GovernmentForm", "FROM", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "value"], "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "question_toks": ["What", "are", "the", "different", "government", "forms", "and", "what", "is", "the", "total", "population", "of", "each", "for", "government", "forms", "that", "have", "an", "average", "life", "expectancy", "greater", "than", "72", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "LifeExpectancy", ")", ",", "Continent", "FROM", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "value"], "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "question_toks": ["Find", "the", "average", "life", "expectancy", "and", "total", "population", "for", "each", "continent", "where", "the", "average", "life", "expectancy", "is", "shorter", "than", "72", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "LifeExpectancy", ")", ",", "Continent", "FROM", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "value"], "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "question_toks": ["What", "are", "the", "different", "continents", "and", "the", "total", "popuation", "and", "average", "life", "expectancy", "corresponding", "to", "each", ",", "for", "continents", "that", "have", "an", "average", "life", "expectancy", "less", "than", "72", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the names and areas of countries with the top 5 largest area?", "question_toks": ["What", "are", "the", "names", "and", "areas", "of", "countries", "with", "the", "top", "5", "largest", "area", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Return the names and surface areas of the 5 largest countries.", "question_toks": ["Return", "the", "names", "and", "surface", "areas", "of", "the", "5", "largest", "countries", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "value"], "question": "What are names of countries with the top 3 largest population?", "question_toks": ["What", "are", "names", "of", "countries", "with", "the", "top", "3", "largest", "population", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "value"], "question": "Return the names of the 3 most populated countries.", "question_toks": ["Return", "the", "names", "of", "the", "3", "most", "populated", "countries", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "value"], "question": "What are the names of the nations with the 3 lowest populations?", "question_toks": ["What", "are", "the", "names", "of", "the", "nations", "with", "the", "3", "lowest", "populations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "value"], "question": "Return the names of the 3 countries with the fewest people.", "question_toks": ["Return", "the", "names", "of", "the", "3", "countries", "with", "the", "fewest", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value"], "question": "how many countries are in Asia?", "question_toks": ["how", "many", "countries", "are", "in", "Asia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value"], "question": "Count the number of countries in Asia.", "question_toks": ["Count", "the", "number", "of", "countries", "in", "Asia", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "continent", "=", "``", "Europe", "''", "AND", "Population", "=", "``", "80000", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value"], "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "that", "are", "in", "the", "continent", "of", "Europe", "and", "have", "a", "population", "of", "80000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]]}}, {"db_id": "world_1", "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "continent", "=", "``", "Europe", "''", "AND", "Population", "=", "``", "80000", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value"], "question": "Give the names of countries that are in Europe and have a population equal to 80000.", "question_toks": ["Give", "the", "names", "of", "countries", "that", "are", "in", "Europe", "and", "have", "a", "population", "equal", "to", "80000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "North", "America", "''", "AND", "SurfaceArea", ">", "3000"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "value"], "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000\uff1f", "question_toks": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000\uff1f"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"North America\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]]}}, {"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "North", "America", "''", "AND", "SurfaceArea", ">", "3000"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "value"], "question": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000.", "question_toks": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "Noth", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"North America\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]]}}, {"db_id": "world_1", "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "Population", "BETWEEN", "160000", "AND", "900000"], "query_toks_no_value": ["select", "name", "from", "city", "where", "population", "between", "value", "and", "value"], "question": "What are the cities whose population is between 160000 and 900000?", "question_toks": ["What", "are", "the", "cities", "whose", "population", "is", "between", "160000", "and", "900000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]]}}, {"db_id": "world_1", "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "Population", "BETWEEN", "160000", "AND", "90000"], "query_toks_no_value": ["select", "name", "from", "city", "where", "population", "between", "value", "and", "value"], "question": "Return the names of cities that have a population between 160000 and 900000.", "question_toks": ["Return", "the", "names", "of", "cities", "that", "have", "a", "population", "between", "160000", "and", "900000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 90000.0]]}}, {"db_id": "world_1", "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LANGUAGE", "FROM", "countrylanguage", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which language is spoken by the largest number of countries?", "question_toks": ["Which", "language", "is", "spoken", "by", "the", "largest", "number", "of", "countries", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LANGUAGE", "FROM", "countrylanguage", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the language that is spoken in the most countries.", "question_toks": ["Give", "the", "language", "that", "is", "spoken", "in", "the", "most", "countries", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "query_toks": ["SELECT", "LANGUAGE", ",", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode"], "question": "What is the language spoken by the largest percentage of people in each country?", "question_toks": ["What", "is", "the", "language", "spoken", "by", "the", "largest", "percentage", "of", "people", "in", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "query_toks": ["SELECT", "LANGUAGE", ",", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode"], "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "question_toks": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "world_1", "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]]}}, {"db_id": "world_1", "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "Count the number of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Count", "the", "number", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]]}}, {"db_id": "world_1", "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]]}}, {"db_id": "world_1", "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "Return the codes of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Return", "the", "codes", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]]}}, {"db_id": "orchestra", "query": "SELECT count(*) FROM conductor", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "conductor"], "question": "How many conductors are there?", "question_toks": ["How", "many", "conductors", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT count(*) FROM conductor", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "conductor"], "question": "Count the number of conductors.", "question_toks": ["Count", "the", "number", "of", "conductors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "age", "asc"], "question": "List the names of conductors in ascending order of age.", "question_toks": ["List", "the", "names", "of", "conductors", "in", "ascending", "order", "of", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "age", "asc"], "question": "What are the names of conductors, ordered by age?", "question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "ordered", "by", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "query_toks": ["SELECT", "Name", "FROM", "conductor", "WHERE", "Nationality", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "conductor", "where", "nationality", "!", "=", "value"], "question": "What are the names of conductors whose nationalities are not \"USA\"?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "whose", "nationalities", "are", "not", "``", "USA", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "query_toks": ["SELECT", "Name", "FROM", "conductor", "WHERE", "Nationality", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "conductor", "where", "nationality", "!", "=", "value"], "question": "Return the names of conductors that do not have the nationality \"USA\".", "question_toks": ["Return", "the", "names", "of", "conductors", "that", "do", "not", "have", "the", "nationality", "``", "USA", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "ORDER", "BY", "Year_of_Founded", "DESC"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc"], "question": "What are the record companies of orchestras in descending order of years in which they were founded?", "question_toks": ["What", "are", "the", "record", "companies", "of", "orchestras", "in", "descending", "order", "of", "years", "in", "which", "they", "were", "founded", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "ORDER", "BY", "Year_of_Founded", "DESC"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc"], "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "question_toks": ["Return", "the", "record", "companies", "of", "orchestras", ",", "sorted", "descending", "by", "the", "years", "in", "which", "they", "were", "founded", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT avg(Attendance) FROM SHOW", "query_toks": ["SELECT", "avg", "(", "Attendance", ")", "FROM", "SHOW"], "query_toks_no_value": ["select", "avg", "(", "attendance", ")", "from", "show"], "question": "What is the average attendance of shows?", "question_toks": ["What", "is", "the", "average", "attendance", "of", "shows", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT avg(Attendance) FROM SHOW", "query_toks": ["SELECT", "avg", "(", "Attendance", ")", "FROM", "SHOW"], "query_toks_no_value": ["select", "avg", "(", "attendance", ")", "from", "show"], "question": "Return the average attendance across all shows.", "question_toks": ["Return", "the", "average", "attendance", "across", "all", "shows", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!", "=", "value"], "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "share", "of", "performances", "whose", "type", "is", "not", "``", "Live", "final", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]]}}, {"db_id": "orchestra", "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!", "=", "value"], "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "question_toks": ["Return", "the", "maximum", "and", "minimum", "shares", "for", "performances", "that", "do", "not", "have", "the", "type", "``", "Live", "final", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]]}}, {"db_id": "orchestra", "query": "SELECT count(DISTINCT Nationality) FROM conductor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor"], "question": "How many different nationalities do conductors have?", "question_toks": ["How", "many", "different", "nationalities", "do", "conductors", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 4, true], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT count(DISTINCT Nationality) FROM conductor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor"], "question": "Count the number of different nationalities of conductors.", "question_toks": ["Count", "the", "number", "of", "different", "nationalities", "of", "conductors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 4, true], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc"], "question": "List names of conductors in descending order of years of work.", "question_toks": ["List", "names", "of", "conductors", "in", "descending", "order", "of", "years", "of", "work", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc"], "question": "What are the names of conductors, sorted descending by the number of years they have worked?", "question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "sorted", "descending", "by", "the", "number", "of", "years", "they", "have", "worked", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "value"], "question": "List the name of the conductor with the most years of work.", "question_toks": ["List", "the", "name", "of", "the", "conductor", "with", "the", "most", "years", "of", "work", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "value"], "question": "What is the name of the conductor who has worked the greatest number of years?", "question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "worked", "the", "greatest", "number", "of", "years", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Orchestra", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id"], "question": "Show the names of conductors and the orchestras they have conducted.", "question_toks": ["Show", "the", "names", "of", "conductors", "and", "the", "orchestras", "they", "have", "conducted", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Orchestra", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id"], "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "as", "well", "as", "the", "corresonding", "orchestras", "that", "they", "have", "conducted", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of conductors that have conducted more than one orchestras.", "question_toks": ["Show", "the", "names", "of", "conductors", "that", "have", "conducted", "more", "than", "one", "orchestras", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of conductors who have conducted at more than one orchestra?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "at", "more", "than", "one", "orchestra", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the name of the conductor that has conducted the most number of orchestras.", "question_toks": ["Show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "the", "most", "number", "of", "orchestras", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the conductor who has conducted the most orchestras?", "question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "conducted", "the", "most", "orchestras", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "WHERE", "Year_of_Founded", ">", "2008"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "where", "year_of_founded", ">", "value"], "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "question_toks": ["Please", "show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "orchestras", "founded", "after", "2008", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]]}}, {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "WHERE", "Year_of_Founded", ">", "2008"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "where", "year_of_founded", ">", "value"], "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "orchestras", "founded", "after", "the", "year", "2008", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]]}}, {"db_id": "orchestra", "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "query_toks": ["SELECT", "Record_Company", ",", "COUNT", "(", "*", ")", "FROM", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company"], "question": "Please show the different record companies and the corresponding number of orchestras.", "question_toks": ["Please", "show", "the", "different", "record", "companies", "and", "the", "corresponding", "number", "of", "orchestras", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "query_toks": ["SELECT", "Record_Company", ",", "COUNT", "(", "*", ")", "FROM", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company"], "question": "How many orchestras does each record company manage?", "question_toks": ["How", "many", "orchestras", "does", "each", "record", "company", "manage", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "Major_Record_Format", "FROM", "orchestra", "GROUP", "BY", "Major_Record_Format", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc"], "question": "Please show the record formats of orchestras in ascending order of count.", "question_toks": ["Please", "show", "the", "record", "formats", "of", "orchestras", "in", "ascending", "order", "of", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "Major_Record_Format", "FROM", "orchestra", "GROUP", "BY", "Major_Record_Format", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc"], "question": "What are the major record formats of orchestras, sorted by their frequency?", "question_toks": ["What", "are", "the", "major", "record", "formats", "of", "orchestras", ",", "sorted", "by", "their", "frequency", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "GROUP", "BY", "Record_Company", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the record company shared by the most number of orchestras.", "question_toks": ["List", "the", "record", "company", "shared", "by", "the", "most", "number", "of", "orchestras", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "GROUP", "BY", "Record_Company", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the record company used by the greatest number of orchestras?", "question_toks": ["What", "is", "the", "record", "company", "used", "by", "the", "greatest", "number", "of", "orchestras", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "query_toks": ["SELECT", "Orchestra", "FROM", "orchestra", "WHERE", "Orchestra_ID", "NOT", "IN", "(", "SELECT", "Orchestra_ID", "FROM", "performance", ")"], "query_toks_no_value": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")"], "question": "List the names of orchestras that have no performance.", "question_toks": ["List", "the", "names", "of", "orchestras", "that", "have", "no", "performance", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "orchestra", "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "query_toks": ["SELECT", "Orchestra", "FROM", "orchestra", "WHERE", "Orchestra_ID", "NOT", "IN", "(", "SELECT", "Orchestra_ID", "FROM", "performance", ")"], "query_toks_no_value": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")"], "question": "What are the orchestras that do not have any performances?", "question_toks": ["What", "are", "the", "orchestras", "that", "do", "not", "have", "any", "performances", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", "<", "2003", "INTERSECT", "SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", ">", "2003"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "value", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "value"], "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "question_toks": ["Show", "the", "record", "companies", "shared", "by", "orchestras", "founded", "before", "2003", "and", "after", "2003", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]]}}, {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", "<", "2003", "INTERSECT", "SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", ">", "2003"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "value", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "value"], "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "question_toks": ["What", "are", "the", "record", "companies", "that", "are", "used", "by", "both", "orchestras", "founded", "before", "2003", "and", "those", "founded", "after", "2003", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]]}}, {"db_id": "orchestra", "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "orchestra", "WHERE", "Major_Record_Format", "=", "``", "CD", "''", "OR", "Major_Record_Format", "=", "``", "DVD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value"], "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "question_toks": ["Find", "the", "number", "of", "orchestras", "whose", "record", "format", "is", "``", "CD", "''", "or", "``", "DVD", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]]}}, {"db_id": "orchestra", "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "orchestra", "WHERE", "Major_Record_Format", "=", "``", "CD", "''", "OR", "Major_Record_Format", "=", "``", "DVD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value"], "question": "Count the number of orchestras that have CD or DVD as their record format.", "question_toks": ["Count", "the", "number", "of", "orchestras", "that", "have", "CD", "or", "DVD", "as", "their", "record", "format", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]]}}, {"db_id": "orchestra", "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Year_of_Founded", "FROM", "orchestra", "AS", "T1", "JOIN", "performance", "AS", "T2", "ON", "T1.Orchestra_ID", "=", "T2.Orchestra_ID", "GROUP", "BY", "T2.Orchestra_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1", ".", "orchestra_id", "=", "t2", ".", "orchestra_id", "group", "by", "t2", ".", "orchestra_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the years in which orchestras that have given more than one performance are founded.", "question_toks": ["Show", "the", "years", "in", "which", "orchestras", "that", "have", "given", "more", "than", "one", "performance", "are", "founded", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "orchestra", "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Year_of_Founded", "FROM", "orchestra", "AS", "T1", "JOIN", "performance", "AS", "T2", "ON", "T1.Orchestra_ID", "=", "T2.Orchestra_ID", "GROUP", "BY", "T2.Orchestra_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1", ".", "orchestra_id", "=", "t2", ".", "orchestra_id", "group", "by", "t2", ".", "orchestra_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are years of founding for orchestras that have had more than a single performance?", "question_toks": ["What", "are", "years", "of", "founding", "for", "orchestras", "that", "have", "had", "more", "than", "a", "single", "performance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler"], "question": "How many high schoolers are there?", "question_toks": ["How", "many", "high", "schoolers", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler"], "question": "Count the number of high schoolers.", "question_toks": ["Count", "the", "number", "of", "high", "schoolers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT name ,  grade FROM Highschooler", "query_toks": ["SELECT", "name", ",", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "name", ",", "grade", "from", "highschooler"], "question": "Show the names and grades of each high schooler.", "question_toks": ["Show", "the", "names", "and", "grades", "of", "each", "high", "schooler", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT name ,  grade FROM Highschooler", "query_toks": ["SELECT", "name", ",", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "name", ",", "grade", "from", "highschooler"], "question": "What are the names and grades for each high schooler?", "question_toks": ["What", "are", "the", "names", "and", "grades", "for", "each", "high", "schooler", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler", "query_toks": ["SELECT", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "grade", "from", "highschooler"], "question": "Show all the grades of the high schoolers.", "question_toks": ["Show", "all", "the", "grades", "of", "the", "high", "schoolers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler", "query_toks": ["SELECT", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "grade", "from", "highschooler"], "question": "What is the grade of each high schooler?", "question_toks": ["What", "is", "the", "grade", "of", "each", "high", "schooler", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "where", "name", "=", "value"], "question": "What grade is Kyle in?", "question_toks": ["What", "grade", "is", "Kyle", "in", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "where", "name", "=", "value"], "question": "Return the grade for the high schooler named Kyle.", "question_toks": ["Return", "the", "grade", "for", "the", "high", "schooler", "named", "Kyle", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "Show the names of all high schoolers in grade 10.", "question_toks": ["Show", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]]}}, {"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "What are the names of all high schoolers in grade 10?", "question_toks": ["What", "are", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]]}}, {"db_id": "network_1", "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "ID", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "id", "from", "highschooler", "where", "name", "=", "value"], "question": "Show the ID of the high schooler named Kyle.", "question_toks": ["Show", "the", "ID", "of", "the", "high", "schooler", "named", "Kyle", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "ID", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "id", "from", "highschooler", "where", "name", "=", "value"], "question": "What is Kyle's id?", "question_toks": ["What", "is", "Kyle", "'s", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler", "WHERE", "grade", "=", "9", "OR", "grade", "=", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "value", "or", "grade", "=", "value"], "question": "How many high schoolers are there in grade 9 or 10?", "question_toks": ["How", "many", "high", "schoolers", "are", "there", "in", "grade", "9", "or", "10", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler", "WHERE", "grade", "=", "9", "OR", "grade", "=", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "value", "or", "grade", "=", "value"], "question": "Count the number of high schoolers in grades 9 or 10.", "question_toks": ["Count", "the", "number", "of", "high", "schoolers", "in", "grades", "9", "or", "10", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]]}}, {"db_id": "network_1", "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "*", ")", "FROM", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade"], "question": "Show the number of high schoolers for each grade.", "question_toks": ["Show", "the", "number", "of", "high", "schoolers", "for", "each", "grade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "*", ")", "FROM", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade"], "question": "How many high schoolers are in each grade?", "question_toks": ["How", "many", "high", "schoolers", "are", "in", "each", "grade", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which grade has the most high schoolers?", "question_toks": ["Which", "grade", "has", "the", "most", "high", "schoolers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the grade that has the greatest number of high schoolers.", "question_toks": ["Return", "the", "grade", "that", "has", "the", "greatest", "number", "of", "high", "schoolers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show me all grades that have at least 4 students.", "question_toks": ["Show", "me", "all", "grades", "that", "have", "at", "least", "4", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which grades have 4 or more high schoolers?", "question_toks": ["Which", "grades", "have", "4", "or", "more", "high", "schoolers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id"], "question": "Show the student IDs and numbers of friends corresponding to each.", "question_toks": ["Show", "the", "student", "IDs", "and", "numbers", "of", "friends", "corresponding", "to", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id"], "question": "How many friends does each student have?", "question_toks": ["How", "many", "friends", "does", "each", "student", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "Show the names of high school students and their corresponding number of friends.", "question_toks": ["Show", "the", "names", "of", "high", "school", "students", "and", "their", "corresponding", "number", "of", "friends", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "What are the names of the high schoolers and how many friends does each have?", "question_toks": ["What", "are", "the", "names", "of", "the", "high", "schoolers", "and", "how", "many", "friends", "does", "each", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of friends?", "question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "friends", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name of the high school student with the most friends.", "question_toks": ["Return", "the", "name", "of", "the", "high", "school", "student", "with", "the", "most", "friends", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of high schoolers who have at least 3 friends.", "question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "at", "least", "3", "friends", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of high schoolers who have 3 or more friends?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "3", "or", "more", "friends", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "T3.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "JOIN", "Highschooler", "AS", "T3", "ON", "T1.friend_id", "=", "T3.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "join", "highschooler", "as", "t3", "on", "t1", ".", "friend_id", "=", "t3", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Show the names of all of the high schooler Kyle's friends.", "question_toks": ["Show", "the", "names", "of", "all", "of", "the", "high", "schooler", "Kyle", "'s", "friends", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "T3.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "JOIN", "Highschooler", "AS", "T3", "ON", "T1.friend_id", "=", "T3.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "join", "highschooler", "as", "t3", "on", "t1", ".", "friend_id", "=", "t3", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Return the names of friends of the high school student Kyle.", "question_toks": ["Return", "the", "names", "of", "friends", "of", "the", "high", "school", "student", "Kyle", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "How many friends does the high school student Kyle have?", "question_toks": ["How", "many", "friends", "does", "the", "high", "school", "student", "Kyle", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Count the number of friends Kyle has.", "question_toks": ["Count", "the", "number", "of", "friends", "Kyle", "has", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "query_toks": ["SELECT", "id", "FROM", "Highschooler", "EXCEPT", "SELECT", "student_id", "FROM", "Friend"], "query_toks_no_value": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend"], "question": "Show ids of all students who do not have any friends.", "question_toks": ["Show", "ids", "of", "all", "students", "who", "do", "not", "have", "any", "friends", "."], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "query_toks": ["SELECT", "id", "FROM", "Highschooler", "EXCEPT", "SELECT", "student_id", "FROM", "Friend"], "query_toks_no_value": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend"], "question": "What are the ids of high school students who do not have friends?", "question_toks": ["What", "are", "the", "ids", "of", "high", "school", "students", "who", "do", "not", "have", "friends", "?"], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "EXCEPT", "SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id"], "query_toks_no_value": ["select", "name", "from", "highschooler", "except", "select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id"], "question": "Show names of all high school students who do not have any friends.", "question_toks": ["Show", "names", "of", "all", "high", "school", "students", "who", "do", "not", "have", "any", "friends", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "EXCEPT", "SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id"], "query_toks_no_value": ["select", "name", "from", "highschooler", "except", "select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id"], "question": "What are the names of students who have no friends?", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "no", "friends", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "query_toks": ["SELECT", "student_id", "FROM", "Friend", "INTERSECT", "SELECT", "liked_id", "FROM", "Likes"], "query_toks_no_value": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes"], "question": "Show the ids of high schoolers who have friends and are also liked by someone else.", "question_toks": ["Show", "the", "ids", "of", "high", "schoolers", "who", "have", "friends", "and", "are", "also", "liked", "by", "someone", "else", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "query_toks": ["SELECT", "student_id", "FROM", "Friend", "INTERSECT", "SELECT", "liked_id", "FROM", "Likes"], "query_toks_no_value": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes"], "question": "What are the ids of students who both have friends and are liked?", "question_toks": ["What", "are", "the", "ids", "of", "students", "who", "both", "have", "friends", "and", "are", "liked", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "INTERSECT", "SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.liked_id", "=", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "intersect", "select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "liked_id", "=", "t2", ".", "id"], "question": "Show name of all students who have some friends and also are liked by someone else.", "question_toks": ["Show", "name", "of", "all", "students", "who", "have", "some", "friends", "and", "also", "are", "liked", "by", "someone", "else", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "INTERSECT", "SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.liked_id", "=", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "intersect", "select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "liked_id", "=", "t2", ".", "id"], "question": "What are the names of high schoolers who both have friends and are liked?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "both", "have", "friends", "and", "are", "liked", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id"], "question": "Count the number of likes for each student id.", "question_toks": ["Count", "the", "number", "of", "likes", "for", "each", "student", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id"], "question": "How many likes correspond to each student id?", "question_toks": ["How", "many", "likes", "correspond", "to", "each", "student", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "Show the names of high schoolers who have likes, and numbers of likes for each.", "question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "numbers", "of", "likes", "for", "each", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "What are the names of high schoolers who have likes, and how many likes does each have?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "how", "many", "likes", "does", "each", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of likes?", "question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "likes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the name of the student with the most likes.", "question_toks": ["Give", "the", "name", "of", "the", "student", "with", "the", "most", "likes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of students who have at least 2 likes.", "question_toks": ["Show", "the", "names", "of", "students", "who", "have", "at", "least", "2", "likes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of students who have 2 or more likes?", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "2", "or", "more", "likes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.grade", ">", "5", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "grade", ">", "value", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "question_toks": ["Show", "the", "names", "of", "students", "who", "have", "a", "grade", "higher", "than", "5", "and", "have", "at", "least", "2", "friends", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]]}}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.grade", ">", "5", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "grade", ">", "value", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "a", "grade", "of", "over", "5", "and", "have", "2", "or", "more", "friends", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "How many likes does Kyle have?", "question_toks": ["How", "many", "likes", "does", "Kyle", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Return the number of likes that the high schooler named Kyle has.", "question_toks": ["Return", "the", "number", "of", "likes", "that", "the", "high", "schooler", "named", "Kyle", "has", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]]}}, {"db_id": "network_1", "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "avg", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "Find the average grade of all students who have some friends.", "question_toks": ["Find", "the", "average", "grade", "of", "all", "students", "who", "have", "some", "friends", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "network_1", "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "avg", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "What is the average grade of students who have friends?", "question_toks": ["What", "is", "the", "average", "grade", "of", "students", "who", "have", "friends", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "network_1", "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "min", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "Find the minimum grade of students who have no friends.", "question_toks": ["Find", "the", "minimum", "grade", "of", "students", "who", "have", "no", "friends", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "network_1", "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "min", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "What is the lowest grade of students who do not have any friends?", "question_toks": ["What", "is", "the", "lowest", "grade", "of", "students", "who", "do", "not", "have", "any", "friends", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "query_toks": ["SELECT", "state", "FROM", "Owners", "INTERSECT", "SELECT", "state", "FROM", "Professionals"], "query_toks_no_value": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals"], "question": "Which states have both owners and professionals living there?", "question_toks": ["Which", "states", "have", "both", "owners", "and", "professionals", "living", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "query_toks": ["SELECT", "state", "FROM", "Owners", "INTERSECT", "SELECT", "state", "FROM", "Professionals"], "query_toks_no_value": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals"], "question": "Find the states where both owners and professionals live.", "question_toks": ["Find", "the", "states", "where", "both", "owners", "and", "professionals", "live", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs", "WHERE", "dog_id", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "What is the average age of the dogs who have gone through any treatments?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "dogs", "who", "have", "gone", "through", "any", "treatments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs", "WHERE", "dog_id", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "Find the average age of the dogs who went through treatments.", "question_toks": ["Find", "the", "average", "age", "of", "the", "dogs", "who", "went", "through", "treatments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "query_toks": ["SELECT", "professional_id", ",", "last_name", ",", "cell_number", "FROM", "Professionals", "WHERE", "state", "=", "'Indiana", "'", "UNION", "SELECT", "T1.professional_id", ",", "T1.last_name", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1", ".", "professional_id", ",", "t1", ".", "last_name", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "question_toks": ["Which", "professionals", "live", "in", "the", "state", "of", "Indiana", "or", "have", "done", "treatment", "on", "more", "than", "2", "treatments", "?", "List", "his", "or", "her", "id", ",", "last", "name", "and", "cell", "phone", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}, "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "query_toks": ["SELECT", "professional_id", ",", "last_name", ",", "cell_number", "FROM", "Professionals", "WHERE", "state", "=", "'Indiana", "'", "UNION", "SELECT", "T1.professional_id", ",", "T1.last_name", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1", ".", "professional_id", ",", "t1", ".", "last_name", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "question_toks": ["Find", "the", "id", ",", "last", "name", "and", "cell", "phone", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Indiana", "or", "have", "performed", "more", "than", "two", "treatments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}, "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )", "query_toks": ["SELECT", "name", "FROM", "Dogs", "WHERE", "dog_id", "NOT", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", "GROUP", "BY", "dog_id", "HAVING", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")"], "query_toks_no_value": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "value", ")"], "question": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.", "question_toks": ["Which", "dogs", "have", "not", "cost", "their", "owner", "more", "than", "1000", "for", "treatment", "?", "List", "the", "dog", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )", "query_toks": ["SELECT", "name", "FROM", "Dogs", "WHERE", "dog_id", "NOT", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", "GROUP", "BY", "dog_id", "HAVING", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")"], "query_toks_no_value": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "value", ")"], "question": "What are the names of the dogs for which the owner spent more than 1000 for treatment?", "question_toks": ["What", "are", "the", "names", "of", "the", "dogs", "for", "which", "the", "owner", "spent", "more", "than", "1000", "for", "treatment", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "query_toks": ["SELECT", "first_name", "FROM", "Professionals", "UNION", "SELECT", "first_name", "FROM", "Owners", "EXCEPT", "SELECT", "name", "FROM", "Dogs"], "query_toks_no_value": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs"], "question": "Which first names are used for professionals or owners but are not used as dog names?", "question_toks": ["Which", "first", "names", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "query_toks": ["SELECT", "first_name", "FROM", "Professionals", "UNION", "SELECT", "first_name", "FROM", "Owners", "EXCEPT", "SELECT", "name", "FROM", "Dogs"], "query_toks_no_value": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs"], "question": "Find the first names that are used for professionals or owners but are not used as dog names.", "question_toks": ["Find", "the", "first", "names", "that", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]]]], "union": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "professional_id", ",", "role_code", ",", "email_address", "FROM", "Professionals", "EXCEPT", "SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.email_address", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "question_toks": ["Which", "professional", "did", "not", "operate", "any", "treatment", "on", "dogs", "?", "List", "the", "professional", "'s", "id", ",", "role", "and", "email", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "professional_id", ",", "role_code", ",", "email_address", "FROM", "Professionals", "EXCEPT", "SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.email_address", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "question_toks": ["Give", "me", "the", "id", ",", "role", "and", "email", "of", "the", "professionals", "who", "did", "not", "perform", "any", "treatment", "on", "dogs", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T2.first_name", ",", "T2.last_name", "FROM", "Dogs", "AS", "T1", "JOIN", "Owners", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which owner owns the most dogs? List the owner id, first name and last name.", "question_toks": ["Which", "owner", "owns", "the", "most", "dogs", "?", "List", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T2.first_name", ",", "T2.last_name", "FROM", "Dogs", "AS", "T1", "JOIN", "Owners", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the owner id, first name and last name of the owner who has the most dogs.", "question_toks": ["Return", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "of", "the", "owner", "who", "has", "the", "most", "dogs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.first_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "treatments", "?", "List", "the", "professional", "'s", "id", ",", "role", ",", "and", "first", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.first_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "question_toks": ["What", "are", "the", "id", ",", "role", ",", "and", "first", "name", "of", "the", "professionals", "who", "have", "performed", "two", "or", "more", "treatments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.breed_name", "FROM", "Breeds", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.breed_code", "=", "T2.breed_code", "GROUP", "BY", "T1.breed_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "breed_code", "=", "t2", ".", "breed_code", "group", "by", "t1", ".", "breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the breed with the most dogs?", "question_toks": ["What", "is", "the", "name", "of", "the", "breed", "with", "the", "most", "dogs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 5]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.breed_name", "FROM", "Breeds", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.breed_code", "=", "T2.breed_code", "GROUP", "BY", "T1.breed_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "breed_code", "=", "t2", ".", "breed_code", "group", "by", "t1", ".", "breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which breed do the most dogs have? Give me the breed name.", "question_toks": ["Which", "breed", "do", "the", "most", "dogs", "have", "?", "Give", "me", "the", "breed", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 5]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "question_toks": ["Which", "owner", "has", "paid", "for", "the", "most", "treatments", "on", "his", "or", "her", "dogs", "?", "List", "the", "owner", "id", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "question_toks": ["Tell", "me", "the", "owner", "id", "and", "last", "name", "of", "the", "owner", "who", "spent", "the", "most", "on", "treatments", "of", "his", "or", "her", "dogs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "query_toks": ["SELECT", "T1.treatment_type_description", "FROM", "Treatment_types", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code", "GROUP", "BY", "T1.treatment_type_code", "ORDER", "BY", "sum", "(", "cost_of_treatment", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code", "group", "by", "t1", ".", "treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "value"], "question": "What is the description of the treatment type that costs the least money in total?", "question_toks": ["What", "is", "the", "description", "of", "the", "treatment", "type", "that", "costs", "the", "least", "money", "in", "total", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 49, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "query_toks": ["SELECT", "T1.treatment_type_description", "FROM", "Treatment_types", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code", "GROUP", "BY", "T1.treatment_type_code", "ORDER", "BY", "sum", "(", "cost_of_treatment", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code", "group", "by", "t1", ".", "treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "value"], "question": "Give me the description of the treatment type whose total cost is the lowest.", "question_toks": ["Give", "me", "the", "description", "of", "the", "treatment", "type", "whose", "total", "cost", "is", "the", "lowest", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]], "table_units": [["table_unit", 3], ["table_unit", 7]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 49, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.zip_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "sum", "(", "T3.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "sum", "(", "t3", ".", "cost_of_treatment", ")", "desc", "limit", "value"], "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "question_toks": ["Which", "owner", "has", "paid", "the", "largest", "amount", "of", "money", "in", "total", "for", "their", "dogs", "?", "Show", "the", "owner", "id", "and", "zip", "code", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 49, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.zip_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "sum", "(", "T3.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "sum", "(", "t3", ".", "cost_of_treatment", ")", "desc", "limit", "value"], "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "question_toks": ["Find", "the", "owner", "id", "and", "zip", "code", "of", "the", "owner", "who", "spent", "the", "most", "money", "in", "total", "for", "his", "or", "her", "dogs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 49, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "types", "of", "treatments", "?", "List", "the", "professional", "id", "and", "cell", "phone", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "question_toks": ["Find", "the", "id", "and", "cell", "phone", "of", "the", "professionals", "who", "operate", "two", "or", "more", "types", "of", "treatments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "WHERE", "cost_of_treatment", "<", "(", "SELECT", "avg", "(", "cost_of_treatment", ")", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")"], "question": "What are the first name and last name of the professionals who have done treatment with cost below average?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "professionals", "who", "have", "done", "treatment", "with", "cost", "below", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 49, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 49, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "WHERE", "cost_of_treatment", "<", "(", "SELECT", "avg", "(", "cost_of_treatment", ")", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")"], "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "question_toks": ["Which", "professionals", "have", "operated", "a", "treatment", "that", "costs", "less", "than", "the", "average", "?", "Give", "me", "theor", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 49, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 49, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "T1.date_of_treatment", ",", "T2.first_name", "FROM", "Treatments", "AS", "T1", "JOIN", "Professionals", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "t1", ".", "date_of_treatment", ",", "t2", ".", "first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "List the date of each treatment, together with the first name of the professional who operated it.", "question_toks": ["List", "the", "date", "of", "each", "treatment", ",", "together", "with", "the", "first", "name", "of", "the", "professional", "who", "operated", "it", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]], "table_units": [["table_unit", 7], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "T1.date_of_treatment", ",", "T2.first_name", "FROM", "Treatments", "AS", "T1", "JOIN", "Professionals", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "t1", ".", "date_of_treatment", ",", "t2", ".", "first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "What are the date and the operating professional's first name of each treatment?", "question_toks": ["What", "are", "the", "date", "and", "the", "operating", "professional", "'s", "first", "name", "of", "each", "treatment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]], "table_units": [["table_unit", 7], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "query_toks": ["SELECT", "T1.cost_of_treatment", ",", "T2.treatment_type_description", "FROM", "Treatments", "AS", "T1", "JOIN", "treatment_types", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code"], "query_toks_no_value": ["select", "t1", ".", "cost_of_treatment", ",", "t2", ".", "treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code"], "question": "List the cost of each treatment and the corresponding treatment type description.", "question_toks": ["List", "the", "cost", "of", "each", "treatment", "and", "the", "corresponding", "treatment", "type", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]], "table_units": [["table_unit", 7], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "query_toks": ["SELECT", "T1.cost_of_treatment", ",", "T2.treatment_type_description", "FROM", "Treatments", "AS", "T1", "JOIN", "treatment_types", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code"], "query_toks_no_value": ["select", "t1", ".", "cost_of_treatment", ",", "t2", ".", "treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code"], "question": "What are the cost and treatment type description of each treatment?", "question_toks": ["What", "are", "the", "cost", "and", "treatment", "type", "description", "of", "each", "treatment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]], "table_units": [["table_unit", 7], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.size_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "List each owner's first name, last name, and the size of his for her dog.", "question_toks": ["List", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "his", "for", "her", "dog", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.size_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "What are each owner's first name, last name, and the size of their dog?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "their", "dog", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "List pairs of the owner's first name and the dogs's name.", "question_toks": ["List", "pairs", "of", "the", "owner", "'s", "first", "name", "and", "the", "dogs", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "What are each owner's first name and their dogs's name?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", "and", "their", "dogs", "'s", "name", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "T1.name", ",", "T2.date_of_treatment", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id", "WHERE", "T1.breed_code", "=", "(", "SELECT", "breed_code", "FROM", "Dogs", "GROUP", "BY", "breed_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id", "where", "t1", ".", "breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "List the names of the dogs of the rarest breed and the treatment dates of them.", "question_toks": ["List", "the", "names", "of", "the", "dogs", "of", "the", "rarest", "breed", "and", "the", "treatment", "dates", "of", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "T1.name", ",", "T2.date_of_treatment", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id", "WHERE", "T1.breed_code", "=", "(", "SELECT", "breed_code", "FROM", "Dogs", "GROUP", "BY", "breed_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id", "where", "t1", ".", "breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "Which dogs are of the rarest breed? Show their names and treatment dates.", "question_toks": ["Which", "dogs", "are", "of", "the", "rarest", "breed", "?", "Show", "their", "names", "and", "treatment", "dates", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T1.state", "=", "'Virginia", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t1", ".", "state", "=", "value"], "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "question_toks": ["Which", "dogs", "are", "owned", "by", "someone", "who", "lives", "in", "Virginia", "?", "List", "the", "owner", "'s", "first", "name", "and", "the", "dog", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T1.state", "=", "'Virginia", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t1", ".", "state", "=", "value"], "question": "Find the first names of owners living in Virginia and the names of dogs they own.", "question_toks": ["Find", "the", "first", "names", "of", "owners", "living", "in", "Virginia", "and", "the", "names", "of", "dogs", "they", "own", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "query_toks": ["SELECT", "DISTINCT", "T1.date_arrived", ",", "T1.date_departed", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "date_arrived", ",", "t1", ".", "date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id"], "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "who", "have", "gone", "through", "a", "treatment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "query_toks": ["SELECT", "DISTINCT", "T1.date_arrived", ",", "T1.date_departed", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "date_arrived", ",", "t1", ".", "date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id"], "question": "Find the arriving date and the departing date of the dogs that received a treatment.", "question_toks": ["Find", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "that", "received", "a", "treatment", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]], "table_units": [["table_unit", 5], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "query_toks": ["SELECT", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T2.age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t2", ".", "age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")"], "question": "List the last name of the owner owning the youngest dog.", "question_toks": ["List", "the", "last", "name", "of", "the", "owner", "owning", "the", "youngest", "dog", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 26, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "query_toks": ["SELECT", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T2.age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t2", ".", "age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")"], "question": "Who owns the youngest dog? Give me his or her last name.", "question_toks": ["Who", "owns", "the", "youngest", "dog", "?", "Give", "me", "his", "or", "her", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 26, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "query_toks": ["SELECT", "email_address", "FROM", "Professionals", "WHERE", "state", "=", "'Hawaii", "'", "OR", "state", "=", "'Wisconsin", "'"], "query_toks_no_value": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "question_toks": ["List", "the", "emails", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "query_toks": ["SELECT", "email_address", "FROM", "Professionals", "WHERE", "state", "=", "'Hawaii", "'", "OR", "state", "=", "'Wisconsin", "'"], "query_toks_no_value": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "question_toks": ["What", "are", "the", "emails", "of", "the", "professionals", "living", "in", "either", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT date_arrived ,  date_departed FROM Dogs", "query_toks": ["SELECT", "date_arrived", ",", "date_departed", "FROM", "Dogs"], "query_toks_no_value": ["select", "date_arrived", ",", "date_departed", "from", "dogs"], "question": "What are the arriving date and the departing date of all the dogs?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "all", "the", "dogs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT date_arrived ,  date_departed FROM Dogs", "query_toks": ["SELECT", "date_arrived", ",", "date_departed", "FROM", "Dogs"], "query_toks_no_value": ["select", "date_arrived", ",", "date_departed", "from", "dogs"], "question": "List the arrival date and the departure date for all the dogs.", "question_toks": ["List", "the", "arrival", "date", "and", "the", "departure", "date", "for", "all", "the", "dogs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT count(DISTINCT dog_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dog_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments"], "question": "How many dogs went through any treatments?", "question_toks": ["How", "many", "dogs", "went", "through", "any", "treatments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 45, true], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT count(DISTINCT dog_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dog_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments"], "question": "Count the number of dogs that went through a treatment.", "question_toks": ["Count", "the", "number", "of", "dogs", "that", "went", "through", "a", "treatment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 45, true], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT count(DISTINCT professional_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "professional_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments"], "question": "How many professionals have performed any treatment to dogs?", "question_toks": ["How", "many", "professionals", "have", "performed", "any", "treatment", "to", "dogs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 46, true], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT count(DISTINCT professional_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "professional_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments"], "question": "Find the number of professionals who have ever treated dogs.", "question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "ever", "treated", "dogs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 46, true], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "query_toks": ["SELECT", "role_code", ",", "street", ",", "city", ",", "state", "FROM", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value"], "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "question_toks": ["Which", "professionals", "live", "in", "a", "city", "containing", "the", "substring", "'West", "'", "?", "List", "his", "or", "her", "role", ",", "street", ",", "city", "and", "state", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "query_toks": ["SELECT", "role_code", ",", "street", ",", "city", ",", "state", "FROM", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value"], "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "question_toks": ["Find", "the", "role", ",", "street", ",", "city", "and", "state", "of", "the", "professionals", "living", "in", "a", "city", "that", "contains", "the", "substring", "'West", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "email_address", "FROM", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value"], "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "question_toks": ["Which", "owners", "live", "in", "the", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "?", "List", "his", "first", "name", ",", "last", "name", "and", "email", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "email_address", "FROM", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value"], "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "question_toks": ["Return", "the", "first", "name", ",", "last", "name", "and", "email", "of", "the", "owners", "living", "in", "a", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")"], "question": "How many dogs have an age below the average?", "question_toks": ["How", "many", "dogs", "have", "an", "age", "below", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 26, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")"], "question": "Count the number of dogs of an age below the average.", "question_toks": ["Count", "the", "number", "of", "dogs", "of", "an", "age", "below", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 26, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "query_toks": ["SELECT", "cost_of_treatment", "FROM", "Treatments", "ORDER", "BY", "date_of_treatment", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "value"], "question": "How much does the most recent treatment cost?", "question_toks": ["How", "much", "does", "the", "most", "recent", "treatment", "cost", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 48, false], null]]], "select": [false, [[0, [0, [0, 49, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "query_toks": ["SELECT", "cost_of_treatment", "FROM", "Treatments", "ORDER", "BY", "date_of_treatment", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "value"], "question": "Show me the cost of the most recently performed treatment.", "question_toks": ["Show", "me", "the", "cost", "of", "the", "most", "recently", "performed", "treatment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 48, false], null]]], "select": [false, [[0, [0, [0, 49, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "dog_id", "NOT", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "How many dogs have not gone through any treatment?", "question_toks": ["How", "many", "dogs", "have", "not", "gone", "through", "any", "treatment", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "dog_id", "NOT", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "Tell me the number of dogs that have received any treatment.", "question_toks": ["Tell", "me", "the", "number", "of", "dogs", "that", "have", "received", "any", "treatment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Owners", "WHERE", "owner_id", "NOT", "IN", "(", "SELECT", "owner_id", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")"], "question": "How many owners temporarily do not have any dogs?", "question_toks": ["How", "many", "owners", "temporarily", "do", "not", "have", "any", "dogs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 10, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Owners", "WHERE", "owner_id", "NOT", "IN", "(", "SELECT", "owner_id", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")"], "question": "Find the number of owners who do not own any dogs at this moment.", "question_toks": ["Find", "the", "number", "of", "owners", "who", "do", "not", "own", "any", "dogs", "at", "this", "moment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 10, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Professionals", "WHERE", "professional_id", "NOT", "IN", "(", "SELECT", "professional_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")"], "question": "How many professionals did not operate any treatment on dogs?", "question_toks": ["How", "many", "professionals", "did", "not", "operate", "any", "treatment", "on", "dogs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 33, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Professionals", "WHERE", "professional_id", "NOT", "IN", "(", "SELECT", "professional_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")"], "question": "Find the number of professionals who have not treated any dogs.", "question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "not", "treated", "any", "dogs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 33, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dog_kennels", "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "query_toks": ["SELECT", "name", ",", "age", ",", "weight", "FROM", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "value"], "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "question_toks": ["List", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "who", "have", "been", "abandoned", "?", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]]}}, {"db_id": "dog_kennels", "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "query_toks": ["SELECT", "name", ",", "age", ",", "weight", "FROM", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "value"], "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "question_toks": ["What", "are", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "that", "were", "abandoned", "?", "Note", "that", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "in", "the", "tables", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]]}}, {"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs"], "question": "What is the average age of all the dogs?", "question_toks": ["What", "is", "the", "average", "age", "of", "all", "the", "dogs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs"], "question": "Compute the average age of all the dogs.", "question_toks": ["Compute", "the", "average", "age", "of", "all", "the", "dogs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT max(age) FROM Dogs", "query_toks": ["SELECT", "max", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "dogs"], "question": "What is the age of the oldest dog?", "question_toks": ["What", "is", "the", "age", "of", "the", "oldest", "dog", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT max(age) FROM Dogs", "query_toks": ["SELECT", "max", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "dogs"], "question": "Tell me the age of the oldest dog.", "question_toks": ["Tell", "me", "the", "age", "of", "the", "oldest", "dog", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT charge_type ,  charge_amount FROM Charges", "query_toks": ["SELECT", "charge_type", ",", "charge_amount", "FROM", "Charges"], "query_toks_no_value": ["select", "charge_type", ",", "charge_amount", "from", "charges"], "question": "How much does each charge type costs? List both charge type and amount.", "question_toks": ["How", "much", "does", "each", "charge", "type", "costs", "?", "List", "both", "charge", "type", "and", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT charge_type ,  charge_amount FROM Charges", "query_toks": ["SELECT", "charge_type", ",", "charge_amount", "FROM", "Charges"], "query_toks_no_value": ["select", "charge_type", ",", "charge_amount", "from", "charges"], "question": "List each charge type and its amount.", "question_toks": ["List", "each", "charge", "type", "and", "its", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT max(charge_amount) FROM Charges", "query_toks": ["SELECT", "max", "(", "charge_amount", ")", "FROM", "Charges"], "query_toks_no_value": ["select", "max", "(", "charge_amount", ")", "from", "charges"], "question": "How much does the most expensive charge type costs?", "question_toks": ["How", "much", "does", "the", "most", "expensive", "charge", "type", "costs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT max(charge_amount) FROM Charges", "query_toks": ["SELECT", "max", "(", "charge_amount", ")", "FROM", "Charges"], "query_toks_no_value": ["select", "max", "(", "charge_amount", ")", "from", "charges"], "question": "What is the charge amount of the most expensive charge type?", "question_toks": ["What", "is", "the", "charge", "amount", "of", "the", "most", "expensive", "charge", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "query_toks": ["SELECT", "email_address", ",", "cell_number", ",", "home_phone", "FROM", "professionals"], "query_toks_no_value": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals"], "question": "List the email, cell phone and home phone of all the professionals.", "question_toks": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "query_toks": ["SELECT", "email_address", ",", "cell_number", ",", "home_phone", "FROM", "professionals"], "query_toks_no_value": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals"], "question": "What are the email, cell phone and home phone of each professional?", "question_toks": ["What", "are", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "each", "professional", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "query_toks": ["SELECT", "DISTINCT", "breed_code", ",", "size_code", "FROM", "dogs"], "query_toks_no_value": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs"], "question": "What are all the possible breed type and size type combinations?", "question_toks": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "query_toks": ["SELECT", "DISTINCT", "breed_code", ",", "size_code", "FROM", "dogs"], "query_toks_no_value": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs"], "question": "Find the distinct breed type and size type combinations for dogs.", "question_toks": ["Find", "the", "distinct", "breed", "type", "and", "size", "type", "combinations", "for", "dogs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T3.treatment_type_description", "FROM", "professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "JOIN", "Treatment_types", "AS", "T3", "ON", "T2.treatment_type_code", "=", "T3.treatment_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t3", ".", "treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "join", "treatment_types", "as", "t3", "on", "t2", ".", "treatment_type_code", "=", "t3", ".", "treatment_type_code"], "question": "List the first name of all the professionals along with the description of the treatment they have done.", "question_toks": ["List", "the", "first", "name", "of", "all", "the", "professionals", "along", "with", "the", "description", "of", "the", "treatment", "they", "have", "done", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T3.treatment_type_description", "FROM", "professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "JOIN", "Treatment_types", "AS", "T3", "ON", "T2.treatment_type_code", "=", "T3.treatment_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t3", ".", "treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "join", "treatment_types", "as", "t3", "on", "t2", ".", "treatment_type_code", "=", "t3", ".", "treatment_type_code"], "question": "What are each professional's first name and description of the treatment they have performed?", "question_toks": ["What", "are", "each", "professional", "'s", "first", "name", "and", "description", "of", "the", "treatment", "they", "have", "performed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "How many singers are there?", "question_toks": ["How", "many", "singers", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "What is the count of singers?", "question_toks": ["What", "is", "the", "count", "of", "singers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "ASC"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc"], "question": "List the name of singers in ascending order of net worth.", "question_toks": ["List", "the", "name", "of", "singers", "in", "ascending", "order", "of", "net", "worth", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "ASC"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc"], "question": "What are the names of singers ordered by ascending net worth?", "question_toks": ["What", "are", "the", "names", "of", "singers", "ordered", "by", "ascending", "net", "worth", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Birth_Year ,  Citizenship FROM singer", "query_toks": ["SELECT", "Birth_Year", ",", "Citizenship", "FROM", "singer"], "query_toks_no_value": ["select", "birth_year", ",", "citizenship", "from", "singer"], "question": "What are the birth year and citizenship of singers?", "question_toks": ["What", "are", "the", "birth", "year", "and", "citizenship", "of", "singers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Birth_Year ,  Citizenship FROM singer", "query_toks": ["SELECT", "Birth_Year", ",", "Citizenship", "FROM", "singer"], "query_toks_no_value": ["select", "birth_year", ",", "citizenship", "from", "singer"], "question": "What are the birth years and citizenships of the singers?", "question_toks": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "List the name of singers whose citizenship is not \"France\".", "question_toks": ["List", "the", "name", "of", "singers", "whose", "citizenship", "is", "not", "``", "France", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]]}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "What are the names of the singers who are not French citizens?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "are", "not", "French", "citizens", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]]}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Birth_Year", "=", "1948", "OR", "Birth_Year", "=", "1949"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "birth_year", "=", "value", "or", "birth_year", "=", "value"], "question": "Show the name of singers whose birth year is either 1948 or 1949?", "question_toks": ["Show", "the", "name", "of", "singers", "whose", "birth", "year", "is", "either", "1948", "or", "1949", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]]}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Birth_Year", "=", "1948", "OR", "Birth_Year", "=", "1949"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "birth_year", "=", "value", "or", "birth_year", "=", "value"], "question": "What are the names of the singers whose birth years are either 1948 or 1949?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "whose", "birth", "years", "are", "either", "1948", "or", "1949", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]]}}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "value"], "question": "What is the name of the singer with the largest net worth?", "question_toks": ["What", "is", "the", "name", "of", "the", "singer", "with", "the", "largest", "net", "worth", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "value"], "question": "What is the name of the singer who is worth the most?", "question_toks": ["What", "is", "the", "name", "of", "the", "singer", "who", "is", "worth", "the", "most", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "COUNT", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship"], "question": "Show different citizenship of singers and the number of singers of each citizenship.", "question_toks": ["Show", "different", "citizenship", "of", "singers", "and", "the", "number", "of", "singers", "of", "each", "citizenship", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "COUNT", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship"], "question": "For each citizenship, how many singers are from that country?", "question_toks": ["For", "each", "citizenship", ",", "how", "many", "singers", "are", "from", "that", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "GROUP", "BY", "Citizenship", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common citizenship of singers.", "question_toks": ["Please", "show", "the", "most", "common", "citizenship", "of", "singers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "GROUP", "BY", "Citizenship", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the msot common singer citizenship?", "question_toks": ["What", "is", "the", "msot", "common", "singer", "citizenship", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "max", "(", "Net_Worth_Millions", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship"], "question": "Show different citizenships and the maximum net worth of singers of each citizenship.", "question_toks": ["Show", "different", "citizenships", "and", "the", "maximum", "net", "worth", "of", "singers", "of", "each", "citizenship", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "max", "(", "Net_Worth_Millions", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship"], "question": "For each citizenship, what is the maximum net worth?", "question_toks": ["For", "each", "citizenship", ",", "what", "is", "the", "maximum", "net", "worth", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "query_toks": ["SELECT", "T2.Title", ",", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id"], "question": "Show titles of songs and names of singers.", "question_toks": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "query_toks": ["SELECT", "T2.Title", ",", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id"], "question": "What are the song titles and singer names?", "question_toks": ["What", "are", "the", "song", "titles", "and", "singer", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "query_toks": ["SELECT", "DISTINCT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "WHERE", "T2.Sales", ">", "300000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "where", "t2", ".", "sales", ">", "value"], "question": "Show distinct names of singers that have songs with sales more than 300000.", "question_toks": ["Show", "distinct", "names", "of", "singers", "that", "have", "songs", "with", "sales", "more", "than", "300000", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]]}}, {"db_id": "singer", "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "query_toks": ["SELECT", "DISTINCT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "WHERE", "T2.Sales", ">", "300000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "where", "t2", ".", "sales", ">", "value"], "question": "what are the different names of the singers that have sales more than 300000?", "question_toks": ["what", "are", "the", "different", "names", "of", "the", "singers", "that", "have", "sales", "more", "than", "300000", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]]}}, {"db_id": "singer", "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of singers that have more than one song.", "question_toks": ["Show", "the", "names", "of", "singers", "that", "have", "more", "than", "one", "song", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of the singers that have more than one songs?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "that", "have", "more", "than", "one", "songs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Sales", ")", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name"], "question": "Show the names of singers and the total sales of their songs.", "question_toks": ["Show", "the", "names", "of", "singers", "and", "the", "total", "sales", "of", "their", "songs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Sales", ")", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name"], "question": "For each singer name, what is the total sales for their songs?", "question_toks": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "List the name of singers that do not have any song.", "question_toks": ["List", "the", "name", "of", "singers", "that", "do", "not", "have", "any", "song", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "What is the sname of every sing that does not have any song?", "question_toks": ["What", "is", "the", "sname", "of", "every", "sing", "that", "does", "not", "have", "any", "song", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", "<", "1945", "INTERSECT", "SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", ">", "1955"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "value", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "value"], "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "question_toks": ["Show", "the", "citizenship", "shared", "by", "singers", "with", "birth", "year", "before", "1945", "and", "after", "1955", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]]}}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", "<", "1945", "INTERSECT", "SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", ">", "1955"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "value", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "value"], "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "question_toks": ["What", "are", "the", "citizenships", "that", "are", "shared", "by", "singers", "with", "a", "birth", "year", "before", "1945", "and", "after", "1955", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]]}}]