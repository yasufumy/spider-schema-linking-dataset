{"id": 3616, "text": "How many singers do we have?", "meta": {"000_sql": "SELECT count(*) FROM singer", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"]]}
{"id": 3617, "text": "What is the total number of singers?", "meta": {"000_sql": "SELECT count(*) FROM singer", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[28, 35, "001_table_1"]]}
{"id": 3618, "text": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "meta": {"000_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[32, 39, "001_table_1"], [5, 9, "002_col_9"], [11, 18, "002_col_10"], [20, 23, "002_col_13"], [51, 54, "002_col_13"]]}
{"id": 3619, "text": "What are the names, countries, and ages for every singer in descending order of age?", "meta": {"000_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [20, 29, "002_col_10"], [35, 39, "002_col_13"], [50, 56, "001_table_1"], [80, 83, "002_col_13"]]}
{"id": 3620, "text": "What is the average, minimum, and maximum age of all singers from France?", "meta": {"000_sql": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[42, 45, "002_col_13"], [53, 60, "001_table_1"]]}
{"id": 3621, "text": "What is the average, minimum, and maximum age for all French singers?", "meta": {"000_sql": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[42, 45, "002_col_13"], [61, 68, "001_table_1"]]}
{"id": 3622, "text": "Show the name and the release year of the song by the youngest singer.", "meta": {"000_sql": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [22, 46, "002_col_12"], [63, 69, "001_table_1"]]}
{"id": 3807, "text": "How many flights do we have?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"]]}
{"id": 3623, "text": "What are the names and release years for all the songs of the youngest singer?", "meta": {"000_sql": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [23, 54, "002_col_12"], [71, 77, "001_table_1"]]}
{"id": 3624, "text": "What are all distinct countries where singers above age 20 are from?", "meta": {"000_sql": "SELECT DISTINCT country FROM singer WHERE age  >  20", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[22, 31, "002_col_10"], [38, 45, "001_table_1"], [52, 55, "002_col_13"]]}
{"id": 3625, "text": "What are  the different countries with singers above age 20?", "meta": {"000_sql": "SELECT DISTINCT country FROM singer WHERE age  >  20", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[24, 33, "002_col_10"], [39, 46, "001_table_1"], [53, 56, "002_col_13"]]}
{"id": 3626, "text": "Show all countries and the number of singers in each country.", "meta": {"000_sql": "SELECT country ,  count(*) FROM singer GROUP BY country", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 18, "002_col_10"], [37, 44, "001_table_1"], [53, 60, "002_col_10"]]}
{"id": 3627, "text": "How many singers are from each country?", "meta": {"000_sql": "SELECT country ,  count(*) FROM singer GROUP BY country", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"], [31, 38, "002_col_10"]]}
{"id": 3628, "text": "List all song names by singers above the average age.", "meta": {"000_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 19, "002_col_11"], [23, 30, "001_table_1"], [49, 52, "002_col_13"]]}
{"id": 3629, "text": "What are all the song names by singers who are older than average?", "meta": {"000_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[17, 26, "002_col_11"], [31, 38, "001_table_1"]]}
{"id": 3808, "text": "Return the number of flights.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[21, 28, "001_table_2"]]}
{"id": 3630, "text": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "meta": {"000_sql": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[5, 13, "002_col_2"], [18, 22, "002_col_3"], [31, 39, "001_table_0"], [47, 55, "002_col_4"]]}
{"id": 3631, "text": "What are the locations and names of all stations with capacity between 5000 and 10000?", "meta": {"000_sql": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 22, "002_col_2"], [27, 32, "002_col_3"], [40, 48, "001_table_0"], [54, 62, "002_col_4"]]}
{"id": 3632, "text": "What is the average and the maximum capacity of all stadiums?", "meta": {"000_sql": "SELECT avg(capacity) ,  max(capacity) FROM stadium", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[36, 44, "002_col_4"], [52, 60, "001_table_0"]]}
{"id": 3633, "text": "What is the average and maximum capacities for all stations?", "meta": {"000_sql": "SELECT avg(capacity) ,  max(capacity) FROM stadium", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[32, 42, "002_col_4"], [51, 59, "001_table_0"]]}
{"id": 3634, "text": "What is the name and capacity for the stadium with highest average attendance?", "meta": {"000_sql": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_3"], [21, 29, "002_col_4"], [38, 45, "001_table_0"], [59, 77, "002_col_7"]]}
{"id": 3635, "text": "What is the name and capacity for the stadium with the highest average attendance?", "meta": {"000_sql": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_3"], [21, 29, "002_col_4"], [38, 45, "001_table_0"], [63, 81, "002_col_7"]]}
{"id": 3636, "text": "How many concerts are there in year 2014 or 2015?", "meta": {"000_sql": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 17, "001_table_2"], [31, 35, "002_col_19"]]}
{"id": 3809, "text": "Which airline has abbreviation 'UAL'?", "meta": {"000_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 13, "002_col_2"], [18, 30, "002_col_3"]]}
{"id": 3637, "text": "How many concerts occurred in 2014 or 2015?", "meta": {"000_sql": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 17, "001_table_2"]]}
{"id": 3638, "text": "Show the stadium name and the number of concerts in each stadium.", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[40, 48, "001_table_2"], [57, 64, "001_table_0"], [17, 21, "002_col_3"], [9, 16, "001_table_0"]]}
{"id": 3639, "text": "For each stadium, how many concerts play there?", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"], [27, 35, "001_table_2"]]}
{"id": 3640, "text": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "meta": {"000_sql": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[26, 34, "002_col_4"], [55, 63, "001_table_2"], [67, 71, "002_col_19"], [17, 21, "002_col_3"], [9, 16, "001_table_0"]]}
{"id": 3641, "text": "What is the name and capacity of the stadium  with the most concerts after 2013?", "meta": {"000_sql": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_3"], [21, 29, "002_col_4"], [37, 44, "001_table_0"], [60, 68, "001_table_2"]]}
{"id": 3642, "text": "Which year has most number of concerts?", "meta": {"000_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[6, 10, "002_col_19"], [30, 38, "001_table_2"]]}
{"id": 3643, "text": "What is the year that had the most concerts?", "meta": {"000_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_19"], [35, 43, "001_table_2"]]}
{"id": 4490, "text": "How many high schoolers are there in grade 9 or 10?", "meta": {"000_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 23, "001_table_0"], [37, 42, "002_col_3"]]}
{"id": 3644, "text": "Show the stadium names without any concert.", "meta": {"000_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[35, 42, "001_table_2"], [9, 16, "001_table_0"], [17, 22, "002_col_3"]]}
{"id": 3645, "text": "What are the names of the stadiums without any concerts?", "meta": {"000_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_3"], [26, 34, "001_table_0"], [47, 55, "001_table_2"]]}
{"id": 3646, "text": "Show countries where a singer above age 40 and a singer below 30 are from.", "meta": {"000_sql": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[5, 14, "002_col_10"], [23, 29, "001_table_1"], [36, 39, "002_col_13"], [49, 55, "001_table_1"]]}
{"id": 3647, "text": "Show names for all stadiums except for stadiums having a concert in year 2014.", "meta": {"000_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[5, 10, "002_col_3"], [19, 27, "001_table_0"], [39, 47, "001_table_0"], [57, 64, "001_table_2"], [68, 72, "002_col_19"]]}
{"id": 3648, "text": "What are the names of all stadiums that did not have a concert in 2014?", "meta": {"000_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_3"], [26, 34, "001_table_0"], [55, 62, "001_table_2"]]}
{"id": 3649, "text": "Show the name and theme for all concerts and the number of singers in each concert.", "meta": {"000_sql": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 13, "002_col_16"], [32, 40, "001_table_2"], [59, 82, "001_table_3"], [18, 23, "002_col_17"]]}
{"id": 3650, "text": "What are the names, themes, and number of singers for each and every concert?", "meta": {"000_sql": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_16"], [20, 26, "002_col_17"], [42, 76, "001_table_3"]]}
{"id": 3651, "text": "List singer names and number of concerts for each singer.", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[32, 56, "001_table_3"], [5, 11, "001_table_1"], [12, 17, "002_col_9"]]}
{"id": 3652, "text": "What are the names of the singers and number of concerts for each person?", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [26, 33, "001_table_1"], [48, 72, "001_table_3"]]}
{"id": 3653, "text": "List all singer names in concerts in year 2014.", "meta": {"000_sql": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[37, 41, "002_col_19"], [16, 21, "002_col_9"], [22, 33, "001_table_3"], [9, 15, "001_table_1"]]}
{"id": 3654, "text": "What are the names of the singers who performed in a concert in 2014?", "meta": {"000_sql": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[26, 33, "001_table_1"], [13, 18, "002_col_9"], [48, 60, "001_table_3"]]}
{"id": 3655, "text": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "meta": {"000_sql": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_9"], [21, 27, "002_col_10"], [35, 41, "001_table_1"], [53, 57, "002_col_11"], [78, 82, "002_col_11"]]}
{"id": 3656, "text": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "meta": {"000_sql": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[12, 16, "002_col_9"], [21, 38, "002_col_10"], [48, 54, "001_table_1"], [65, 69, "002_col_11"], [97, 102, "002_col_11"]]}
{"id": 3657, "text": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "meta": {"000_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[9, 13, "002_col_3"], [18, 26, "002_col_2"], [34, 42, "001_table_0"], [54, 62, "001_table_2"], [79, 84, "002_col_19"]]}
{"id": 3658, "text": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "meta": {"000_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[13, 18, "002_col_3"], [23, 32, "002_col_2"], [40, 48, "001_table_0"], [58, 66, "001_table_2"]]}
{"id": 3659, "text": "Find the number of concerts happened in the stadium with the highest capacity.", "meta": {"000_sql": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[19, 27, "001_table_2"], [44, 51, "001_table_0"], [69, 77, "002_col_2"]]}
{"id": 3660, "text": "What are the number of concerts that occurred in the stadium with the largest capacity?", "meta": {"000_sql": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1", "001_table_0": "stadium", "001_table_1": "singer", "001_table_2": "concert", "001_table_3": "singer_in_concert", "002_col_1": "stadium.Stadium_ID", "002_col_2": "stadium.Location", "002_col_3": "stadium.Name", "002_col_4": "stadium.Capacity", "002_col_5": "stadium.Highest", "002_col_6": "stadium.Lowest", "002_col_7": "stadium.Average", "002_col_8": "singer.Singer_ID", "002_col_9": "singer.Name", "002_col_10": "singer.Country", "002_col_11": "singer.Song_Name", "002_col_12": "singer.Song_release_year", "002_col_13": "singer.Age", "002_col_14": "singer.Is_male", "002_col_15": "concert.concert_ID", "002_col_16": "concert.concert_Name", "002_col_17": "concert.Theme", "002_col_18": "concert.Stadium_ID", "002_col_19": "concert.Year", "002_col_20": "singer_in_concert.concert_ID", "002_col_21": "singer_in_concert.Singer_ID"}, "annotation_approver": null, "labels": [[23, 31, "001_table_2"], [53, 60, "001_table_0"], [78, 86, "002_col_4"]]}
{"id": 3661, "text": "Find the number of pets whose weight is heavier than 10.", "meta": {"000_sql": "SELECT count(*) FROM pets WHERE weight  >  10", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[19, 23, "001_table_2"], [30, 36, "002_col_14"]]}
{"id": 3662, "text": "How many pets have a greater weight than 10?", "meta": {"000_sql": "SELECT count(*) FROM pets WHERE weight  >  10", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 13, "001_table_2"], [29, 35, "002_col_14"]]}
{"id": 3663, "text": "Find the weight of the youngest dog.", "meta": {"000_sql": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 15, "002_col_14"]]}
{"id": 3665, "text": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "meta": {"000_sql": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[17, 23, "002_col_14"], [33, 44, "002_col_12"], [63, 69, "002_col_14"], [74, 82, "002_col_12"]]}
{"id": 3666, "text": "List the maximum weight and type for each type of pet.", "meta": {"000_sql": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[17, 23, "002_col_14"], [28, 32, "002_col_12"], [42, 53, "002_col_12"]]}
{"id": 4491, "text": "Count the number of high schoolers in grades 9 or 10.", "meta": {"000_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[20, 34, "001_table_0"], [38, 44, "002_col_3"]]}
{"id": 3667, "text": "Find number of pets owned by students who are older than 20.", "meta": {"000_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[29, 37, "001_table_0"], [15, 19, "001_table_1"]]}
{"id": 3668, "text": "How many pets are owned by students that have an age greater than 20?", "meta": {"000_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 13, "001_table_1"], [27, 35, "001_table_0"], [49, 52, "002_col_4"]]}
{"id": 3669, "text": "Find the number of dog pets that are raised by female students (with sex F).", "meta": {"000_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[54, 62, "001_table_0"], [69, 72, "002_col_5"], [23, 27, "001_table_2"]]}
{"id": 3670, "text": "How many dog pets are raised by female students?", "meta": {"000_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[13, 17, "001_table_2"], [39, 47, "001_table_0"]]}
{"id": 3671, "text": "Find the number of distinct type of pets.", "meta": {"000_sql": "SELECT count(DISTINCT pettype) FROM pets", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[36, 40, "001_table_2"]]}
{"id": 3672, "text": "How many different types of pet are there?", "meta": {"000_sql": "SELECT count(DISTINCT pettype) FROM pets", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[28, 31, "001_table_2"]]}
{"id": 3673, "text": "Find the first name of students who have cat or dog pet.", "meta": {"000_sql": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[23, 31, "001_table_0"], [9, 19, "002_col_3"], [52, 55, "001_table_2"]]}
{"id": 3674, "text": "What are the first names of every student who has a cat or dog as a pet?", "meta": {"000_sql": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[13, 24, "002_col_3"], [34, 41, "001_table_0"], [68, 71, "001_table_2"]]}
{"id": 3675, "text": "Find the name of students who have both cat and dog pets.", "meta": {"000_sql": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[17, 25, "001_table_0"], [9, 13, "002_col_3"], [52, 56, "001_table_2"]]}
{"id": 4136, "text": "How many different degrees are offered?", "meta": {"000_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[19, 26, "002_col_20"]]}
{"id": 3676, "text": "What are the students' first names who have both cats and dogs as pets?", "meta": {"000_sql": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[13, 21, "001_table_0"], [23, 34, "002_col_3"], [66, 70, "001_table_2"]]}
{"id": 3677, "text": "Find the major and age of students who do not have a cat pet.", "meta": {"000_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 14, "002_col_6"], [19, 22, "002_col_4"], [26, 34, "001_table_1"], [57, 60, "001_table_2"]]}
{"id": 3678, "text": "What major is every student who does not own a cat as a pet, and also how old are they?", "meta": {"000_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[5, 10, "002_col_6"], [20, 27, "001_table_0"], [56, 59, "001_table_2"]]}
{"id": 3679, "text": "Find the id of students who do not have a cat pet.", "meta": {"000_sql": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 11, "002_col_1"], [15, 23, "001_table_0"], [46, 49, "001_table_2"]]}
{"id": 3680, "text": "What are the ids of the students who do not own cats as pets?", "meta": {"000_sql": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[13, 16, "002_col_1"], [24, 32, "001_table_0"], [56, 60, "001_table_2"]]}
{"id": 3681, "text": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "meta": {"000_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 19, "002_col_3"], [24, 27, "002_col_4"], [31, 39, "001_table_0"], [82, 85, "001_table_2"]]}
{"id": 3682, "text": "What is the first name of every student who has a dog but does not have a cat?", "meta": {"000_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[12, 22, "002_col_3"], [32, 39, "001_table_0"]]}
{"id": 3683, "text": "Find the type and weight of the youngest pet.", "meta": {"000_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 13, "002_col_12"], [18, 24, "002_col_14"], [41, 44, "001_table_2"]]}
{"id": 4492, "text": "Show the number of high schoolers for each grade.", "meta": {"000_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[19, 33, "001_table_0"], [43, 48, "002_col_3"]]}
{"id": 3685, "text": "Find the id and weight of all pets whose age is older than 1.", "meta": {"000_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 11, "002_col_11"], [16, 22, "002_col_14"], [30, 34, "001_table_2"], [41, 44, "002_col_13"]]}
{"id": 3686, "text": "What is the id and weight of every pet who is older than 1?", "meta": {"000_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[12, 14, "002_col_11"], [19, 25, "002_col_14"], [35, 38, "001_table_2"]]}
{"id": 3687, "text": "Find the average and maximum age for each type of pet.", "meta": {"000_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[29, 32, "002_col_4"], [42, 53, "002_col_12"]]}
{"id": 3688, "text": "What is the average and maximum age for each pet type?", "meta": {"000_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[32, 35, "002_col_4"], [45, 53, "002_col_12"]]}
{"id": 3689, "text": "Find the average weight for each pet type.", "meta": {"000_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[17, 23, "002_col_14"], [33, 41, "002_col_12"]]}
{"id": 3690, "text": "What is the average weight for each type of pet?", "meta": {"000_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[20, 26, "002_col_14"], [36, 47, "002_col_12"]]}
{"id": 3691, "text": "Find the first name and age of students who have a pet.", "meta": {"000_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 19, "002_col_3"], [24, 27, "002_col_4"], [31, 39, "001_table_0"], [44, 54, "001_table_1"]]}
{"id": 3692, "text": "What are the different first names and ages of the students who do have pets?", "meta": {"000_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[23, 34, "002_col_3"], [39, 43, "002_col_4"], [51, 59, "001_table_0"], [67, 76, "001_table_1"]]}
{"id": 3693, "text": "Find the id of the pet owned by student whose last name is ‘Smith’.", "meta": {"000_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 22, "002_col_11"], [32, 39, "001_table_0"], [46, 55, "002_col_2"]]}
{"id": 3694, "text": "What is the id of the pet owned by the student whose last name is 'Smith'?", "meta": {"000_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[12, 25, "002_col_11"], [39, 46, "001_table_0"], [53, 62, "002_col_2"]]}
{"id": 3695, "text": "Find the number of pets for each student who has any pet and student id.", "meta": {"000_sql": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[19, 23, "001_table_1"], [33, 40, "001_table_0"], [45, 56, "001_table_1"], [61, 71, "002_col_1"]]}
{"id": 3696, "text": "For students who have pets, how many pets does each student have?", "meta": {"000_sql": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[4, 12, "001_table_0"], [17, 26, "001_table_1"], [37, 64, "001_table_1"]]}
{"id": 3697, "text": "Find the first name and gender of student who have more than one pet.", "meta": {"000_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 19, "002_col_2"], [24, 30, "002_col_5"], [34, 41, "001_table_0"], [65, 68, "001_table_1"]]}
{"id": 3698, "text": "What is the first name and gender of the all the students who have more than one pet?", "meta": {"000_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[12, 22, "002_col_3"], [27, 33, "002_col_5"], [49, 57, "001_table_0"], [81, 84, "001_table_1"]]}
{"id": 4137, "text": "How many degrees does the engineering department offer?", "meta": {"000_sql": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[38, 48, "002_col_15"], [9, 16, "001_table_3"]]}
{"id": 4138, "text": "How many degrees does the engineering department have?", "meta": {"000_sql": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [38, 48, "002_col_15"]]}
{"id": 4139, "text": "What are the names and descriptions of all the sections?", "meta": {"000_sql": "SELECT section_name ,  section_description FROM Sections", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_25"], [23, 35, "002_col_26"], [47, 55, "001_table_4"]]}
{"id": 4140, "text": "What are the names and descriptions for all the sections?", "meta": {"000_sql": "SELECT section_name ,  section_description FROM Sections", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_25"], [23, 35, "002_col_26"], [48, 56, "001_table_4"]]}
{"id": 4141, "text": "What are the names and id of courses having at most 2 sections?", "meta": {"000_sql": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_11"], [23, 25, "002_col_10"], [29, 36, "001_table_1"], [54, 62, "001_table_4"]]}
{"id": 3810, "text": "Give the airline with abbreviation 'UAL'.", "meta": {"000_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "002_col_2"], [22, 34, "002_col_3"]]}
{"id": 4142, "text": "What are the names and ids of every course with less than 2 sections?", "meta": {"000_sql": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_11"], [23, 26, "002_col_10"], [36, 42, "001_table_1"], [60, 68, "001_table_4"]]}
{"id": 4143, "text": "List the section_name in reversed lexicographical order.", "meta": {"000_sql": "SELECT section_name FROM Sections ORDER BY section_name DESC", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 21, "002_col_25"]]}
{"id": 4144, "text": "What are the names of the sections in reverse alphabetical order?", "meta": {"000_sql": "SELECT section_name FROM Sections ORDER BY section_name DESC", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_25"], [26, 34, "001_table_4"]]}
{"id": 4145, "text": "What is the semester which most student registered in? Show both the name and the id.", "meta": {"000_sql": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[69, 73, "002_col_29"], [82, 84, "002_col_28"], [32, 53, "001_table_7"], [12, 20, "001_table_5"]]}
{"id": 4146, "text": "For each semester, what is the name and id of the one with the most students registered?", "meta": {"000_sql": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 17, "001_table_5"], [31, 35, "002_col_25"], [40, 42, "002_col_24"], [68, 87, "001_table_7"]]}
{"id": 4147, "text": "What is the description of the department whose name has the substring the computer?", "meta": {"000_sql": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 23, "002_col_16"], [31, 41, "001_table_2"], [48, 52, "002_col_16"]]}
{"id": 4148, "text": "What is the department description for the one whose name has the word computer?", "meta": {"000_sql": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 22, "001_table_2"], [23, 34, "002_col_16"], [53, 57, "002_col_16"]]}
{"id": 4310, "text": "What are the contestant numbers and names of the contestants who had at least two votes?", "meta": {"000_sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[13, 23, "001_table_1"], [24, 31, "002_col_3"], [36, 41, "002_col_4"], [49, 60, "001_table_1"], [82, 87, "001_table_2"]]}
{"id": 4149, "text": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "meta": {"000_sql": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[64, 74, "002_col_35"], [76, 87, "002_col_36"], [92, 101, "002_col_37"], [110, 112, "002_col_32"], [8, 16, "001_table_7"]]}
{"id": 4150, "text": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "meta": {"000_sql": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_35"], [20, 26, "002_col_36"], [32, 42, "002_col_37"], [59, 62, "002_col_32"], [71, 79, "001_table_6"], [84, 92, "001_table_7"]]}
{"id": 4151, "text": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[7, 15, "001_table_7"], [55, 65, "002_col_35"], [67, 78, "002_col_36"], [80, 89, "002_col_37"], [30, 44, "002_col_20"]]}
{"id": 4152, "text": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_35"], [20, 26, "002_col_36"], [32, 42, "002_col_37"], [57, 65, "001_table_7"], [81, 88, "002_col_20"]]}
{"id": 4153, "text": "Find the kind of program which most number of students are enrolled in?", "meta": {"000_sql": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[17, 24, "002_col_20"], [46, 70, "001_table_7"]]}
{"id": 4154, "text": "What is the degree summary name that has the most number of students enrolled?", "meta": {"000_sql": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 31, "002_col_20"], [60, 77, "001_table_7"]]}
{"id": 4155, "text": "Find the program which most number of students are enrolled in. List both the id and the summary.", "meta": {"000_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_3"], [78, 80, "002_col_18"], [89, 96, "002_col_20"], [38, 62, "001_table_7"]]}
{"id": 4156, "text": "What is the program id and the summary of the degree that has the most students enrolled?", "meta": {"000_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 19, "001_table_3"], [20, 22, "002_col_18"], [31, 38, "002_col_20"], [46, 52, "001_table_3"], [71, 88, "001_table_7"]]}
{"id": 4157, "text": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "meta": {"000_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[6, 26, "001_table_7"], [71, 73, "002_col_32"], [75, 85, "002_col_35"], [87, 98, "002_col_36"], [100, 109, "002_col_37"], [125, 136, "001_table_7"], [141, 148, "001_table_6"], [149, 151, "002_col_32"]]}
{"id": 4158, "text": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "meta": {"000_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 17, "002_col_35"], [19, 25, "002_col_36"], [31, 40, "002_col_37"], [57, 59, "002_col_32"], [74, 85, "001_table_7"], [95, 115, "001_table_7"]]}
{"id": 4159, "text": "Which semesters do not have any student enrolled? List the semester name.", "meta": {"000_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[59, 67, "001_table_5"], [68, 72, "002_col_29"], [6, 15, "001_table_5"], [32, 48, "001_table_7"]]}
{"id": 4160, "text": "What is the name of the semester with no students enrolled?", "meta": {"000_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_29"], [24, 32, "001_table_5"], [41, 58, "001_table_7"]]}
{"id": 4161, "text": "What are all the course names of the courses which ever have students enrolled in?", "meta": {"000_sql": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[17, 23, "001_table_1"], [24, 29, "002_col_11"], [37, 81, "001_table_8"]]}
{"id": 4162, "text": "What are the names of all courses that have some students enrolled?", "meta": {"000_sql": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_11"], [26, 66, "001_table_8"]]}
{"id": 4493, "text": "How many high schoolers are in each grade?", "meta": {"000_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 23, "001_table_0"], [36, 41, "002_col_3"]]}
{"id": 4163, "text": "What's the name of the course with most number of enrollments?", "meta": {"000_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[11, 15, "002_col_11"], [23, 29, "001_table_1"], [50, 61, "001_table_8"]]}
{"id": 4164, "text": "What is the name of the course with the most students enrolled?", "meta": {"000_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_11"], [24, 30, "001_table_1"], [45, 62, "001_table_8"]]}
{"id": 4165, "text": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "meta": {"000_sql": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 18, "002_col_37"], [26, 34, "001_table_6"], [61, 66, "002_col_7"], [98, 111, "001_table_7"]]}
{"id": 4166, "text": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "meta": {"000_sql": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 22, "002_col_37"], [30, 38, "001_table_6"], [43, 50, "002_col_7"], [79, 92, "001_table_7"]]}
{"id": 4167, "text": "Show the date and id of the transcript with at least 2 course results.", "meta": {"000_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 13, "002_col_53"], [18, 20, "002_col_56"], [28, 38, "001_table_10"]]}
{"id": 4168, "text": "What is the date and id of the transcript with at least 2 courses listed?", "meta": {"000_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_53"], [21, 23, "002_col_56"], [31, 41, "001_table_10"]]}
{"id": 4169, "text": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "meta": {"000_sql": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 24, "002_col_38"], [32, 35, "001_table_6"], [45, 55, "002_col_35"], [73, 82, "002_col_37"]]}
{"id": 4494, "text": "Which grade has the most high schoolers?", "meta": {"000_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[6, 11, "002_col_3"], [25, 39, "001_table_0"]]}
{"id": 4170, "text": "What is the mobile phone number of the student named Timothy Ward?", "meta": {"000_sql": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 31, "002_col_38"], [39, 46, "001_table_6"]]}
{"id": 4171, "text": "Who is the first student to register? List the first name, middle name and last name.", "meta": {"000_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[11, 36, "002_col_41"], [47, 57, "002_col_35"], [59, 70, "002_col_36"], [75, 84, "002_col_37"]]}
{"id": 4172, "text": "What is the first, middle, and last name of the first student to register?", "meta": {"000_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 17, "002_col_35"], [19, 25, "002_col_36"], [31, 40, "002_col_37"], [48, 73, "002_col_41"]]}
{"id": 4173, "text": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "meta": {"000_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[20, 28, "002_col_42"], [53, 63, "002_col_35"], [65, 76, "002_col_36"], [81, 90, "002_col_37"]]}
{"id": 4174, "text": "What is the first, middle, and last name of the earliest school graduate?", "meta": {"000_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 17, "002_col_35"], [19, 25, "002_col_36"], [31, 40, "002_col_37"], [64, 72, "002_col_42"]]}
{"id": 4175, "text": "Whose permanent address is different from his or her current address? List his or her first name.", "meta": {"000_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[6, 23, "002_col_34"], [53, 68, "002_col_33"], [86, 96, "002_col_35"]]}
{"id": 4176, "text": "What is the first name of the student whose permanent address is different from his or her current one?", "meta": {"000_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 22, "002_col_35"], [30, 37, "001_table_6"], [44, 61, "002_col_34"], [91, 102, "002_col_33"]]}
{"id": 4311, "text": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "meta": {"000_sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[11, 22, "001_table_1"], [31, 36, "001_table_2"], [50, 60, "001_table_1"], [61, 67, "002_col_3"], [72, 76, "002_col_4"], [84, 94, "001_table_1"], [109, 114, "001_table_2"]]}
{"id": 4177, "text": "Which address holds the most number of students currently? List the address id and all lines.", "meta": {"000_sql": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[6, 13, "001_table_0"], [39, 47, "001_table_6"], [68, 75, "001_table_0"], [76, 78, "002_col_1"], [48, 57, "002_col_33"]]}
{"id": 4178, "text": "What is the id, line 1, and line 2 of the address with the most students?", "meta": {"000_sql": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 14, "002_col_1"], [16, 22, "002_col_2"], [28, 34, "002_col_3"], [42, 49, "001_table_0"], [64, 72, "001_table_6"]]}
{"id": 4179, "text": "On average, when were the transcripts printed?", "meta": {"000_sql": "SELECT avg(transcript_date) FROM Transcripts", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[26, 37, "001_table_9"], [12, 16, "002_col_53"]]}
{"id": 4180, "text": "What is the average transcript date?", "meta": {"000_sql": "SELECT avg(transcript_date) FROM Transcripts", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[20, 35, "002_col_53"]]}
{"id": 4181, "text": "When is the first transcript released? List the date and details.", "meta": {"000_sql": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[18, 28, "001_table_9"], [48, 52, "002_col_53"], [57, 64, "002_col_54"]]}
{"id": 4182, "text": "What is the earliest date of a transcript release, and what details can you tell me?", "meta": {"000_sql": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[21, 25, "002_col_53"], [31, 41, "001_table_9"], [60, 67, "002_col_54"]]}
{"id": 4183, "text": "How many transcripts are released?", "meta": {"000_sql": "SELECT count(*) FROM Transcripts", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 20, "001_table_9"]]}
{"id": 4184, "text": "How many transcripts are listed?", "meta": {"000_sql": "SELECT count(*) FROM Transcripts", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 20, "001_table_9"]]}
{"id": 4185, "text": "What is the last transcript release date?", "meta": {"000_sql": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[17, 27, "001_table_9"], [36, 40, "002_col_53"]]}
{"id": 4186, "text": "When was the last transcript released?", "meta": {"000_sql": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[18, 28, "001_table_9"], [0, 4, "002_col_53"]]}
{"id": 4187, "text": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "meta": {"000_sql": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[99, 119, "002_col_55"], [72, 83, "001_table_10"]]}
{"id": 4188, "text": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "meta": {"000_sql": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[101, 123, "002_col_55"], [72, 83, "001_table_10"]]}
{"id": 4189, "text": "Show the date of the transcript which shows the least number of results, also list the id.", "meta": {"000_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 13, "002_col_53"], [21, 31, "001_table_9"], [87, 89, "002_col_56"]]}
{"id": 4190, "text": "What is the date and id of the transcript with the least number of results?", "meta": {"000_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_53"], [21, 23, "002_col_56"], [31, 41, "001_table_10"]]}
{"id": 4191, "text": "Find the semester when both Master students and Bachelor students got enrolled in.", "meta": {"000_sql": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 17, "002_col_46"], [35, 43, "002_col_20"], [57, 65, "002_col_20"], [70, 81, "001_table_7"]]}
{"id": 4312, "text": "What are the number of votes from state 'NY' or 'CA'?", "meta": {"000_sql": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[23, 28, "001_table_2"], [34, 39, "002_col_7"]]}
{"id": 4192, "text": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "meta": {"000_sql": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 30, "002_col_46"], [67, 84, "001_table_7"], [36, 39, "002_col_20"]]}
{"id": 4193, "text": "How many different addresses do the students currently live?", "meta": {"000_sql": "SELECT count(DISTINCT current_address_id) FROM Students", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[36, 44, "001_table_6"], [19, 28, "002_col_33"], [45, 54, "002_col_33"]]}
{"id": 4194, "text": "What are the different addresses that have students living there?", "meta": {"000_sql": "SELECT count(DISTINCT current_address_id) FROM Students", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[43, 51, "001_table_6"], [23, 32, "002_col_33"]]}
{"id": 4195, "text": "List all the student details in reversed lexicographical order.", "meta": {"000_sql": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 28, "002_col_43"]]}
{"id": 4196, "text": "What other details can you tell me about students in reverse alphabetical order?", "meta": {"000_sql": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[5, 18, "002_col_43"], [41, 49, "001_table_6"]]}
{"id": 4197, "text": "Describe the section h.", "meta": {"000_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[0, 8, "002_col_26"], [13, 20, "002_col_25"]]}
{"id": 4198, "text": "What is the description for the section named h?", "meta": {"000_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 23, "002_col_26"], [32, 45, "002_col_25"]]}
{"id": 4199, "text": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.", "meta": {"000_sql": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 19, "002_col_35"], [27, 35, "001_table_6"], [40, 56, "002_col_34"], [90, 107, "002_col_38"], [64, 71, "002_col_8"]]}
{"id": 4200, "text": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "meta": {"000_sql": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 24, "002_col_35"], [32, 40, "001_table_6"], [45, 52, "002_col_8"], [59, 70, "002_col_34"], [83, 100, "002_col_38"]]}
{"id": 4201, "text": "List the title of all cartoons in alphabetical order.", "meta": {"000_sql": "SELECT Title FROM Cartoon ORDER BY title", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 14, "002_col_20"], [22, 30, "001_table_2"]]}
{"id": 4202, "text": "What are the titles of the cartoons sorted alphabetically?", "meta": {"000_sql": "SELECT Title FROM Cartoon ORDER BY title", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 19, "002_col_20"], [27, 35, "001_table_2"]]}
{"id": 4203, "text": "List all cartoon directed by \"Ben Jones\".", "meta": {"000_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[17, 28, "002_col_21"], [9, 16, "002_col_20"]]}
{"id": 4204, "text": "What are the names of all cartoons directed by Ben Jones?", "meta": {"000_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 18, "002_col_20"], [26, 34, "001_table_2"], [35, 46, "002_col_21"]]}
{"id": 4205, "text": "How many cartoons were written by \"Joseph Kuhr\"?", "meta": {"000_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 17, "001_table_2"], [23, 33, "002_col_22"]]}
{"id": 4313, "text": "How many contestants did not get voted?", "meta": {"000_sql": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[9, 20, "001_table_1"], [33, 38, "001_table_2"]]}
{"id": 4206, "text": "What is the number of cartoones written by Joseph Kuhr?", "meta": {"000_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[22, 31, "001_table_2"], [32, 42, "002_col_22"]]}
{"id": 4207, "text": "list all cartoon titles and their directors ordered by their air date", "meta": {"000_sql": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [17, 23, "002_col_20"], [34, 43, "002_col_21"], [61, 69, "002_col_23"]]}
{"id": 4208, "text": "What is the name and directors of all the cartoons that are ordered by air date?", "meta": {"000_sql": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 16, "002_col_20"], [21, 30, "002_col_21"], [42, 50, "001_table_2"], [71, 79, "002_col_23"]]}
{"id": 4209, "text": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "meta": {"000_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 14, "002_col_20"], [22, 29, "001_table_2"], [30, 41, "002_col_21"]]}
{"id": 4210, "text": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "meta": {"000_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 19, "002_col_20"], [27, 35, "001_table_2"], [36, 47, "002_col_21"]]}
{"id": 4211, "text": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "meta": {"000_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[6, 13, "002_col_3"], [30, 41, "001_table_0"], [52, 59, "002_col_3"], [74, 85, "001_table_0"]]}
{"id": 4495, "text": "Return the grade that has the greatest number of high schoolers.", "meta": {"000_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[11, 16, "002_col_3"], [49, 63, "001_table_0"]]}
{"id": 4212, "text": "What is the country with the most number of TV Channels and how many does it have?", "meta": {"000_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 19, "002_col_3"], [44, 55, "001_table_0"]]}
{"id": 4213, "text": "List the number of different series names and contents in the TV Channel table.", "meta": {"000_sql": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[29, 41, "002_col_2"], [46, 54, "002_col_5"], [62, 72, "001_table_0"]]}
{"id": 4214, "text": "How many different series and contents are listed in the TV Channel table?", "meta": {"000_sql": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[19, 25, "002_col_2"], [30, 38, "002_col_5"], [57, 67, "001_table_0"]]}
{"id": 4215, "text": "What is the content of TV Channel with serial name \"Sky Radio\"?", "meta": {"000_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 19, "002_col_5"], [23, 33, "001_table_0"], [39, 50, "002_col_2"]]}
{"id": 4216, "text": "What is the content of the series Sky Radio?", "meta": {"000_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 19, "002_col_5"], [27, 33, "002_col_2"]]}
{"id": 3699, "text": "Find the last name of the student who has a cat that is age 3.", "meta": {"000_sql": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[9, 18, "002_col_2"], [26, 33, "001_table_0"], [56, 59, "002_col_13"], [38, 41, "001_table_1"]]}
{"id": 3700, "text": "What is the last name of the student who has a cat that is 3 years old?", "meta": {"000_sql": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[12, 21, "002_col_2"], [29, 36, "001_table_0"], [41, 44, "001_table_1"], [61, 70, "002_col_13"]]}
{"id": 3701, "text": "Find the average age of students who do not have any pet.", "meta": {"000_sql": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[17, 20, "002_col_4"], [24, 32, "001_table_0"], [44, 56, "001_table_1"]]}
{"id": 3702, "text": "What is the average age for all students who do not own any pets?", "meta": {"000_sql": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[20, 23, "002_col_4"], [32, 40, "001_table_0"], [60, 64, "001_table_1"]]}
{"id": 3703, "text": "How many continents are there?", "meta": {"000_sql": "SELECT count(*) FROM CONTINENTS;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 19, "001_table_0"]]}
{"id": 3704, "text": "What is the number of continents?", "meta": {"000_sql": "SELECT count(*) FROM CONTINENTS;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 32, "001_table_0"]]}
{"id": 3705, "text": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "meta": {"000_sql": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 18, "002_col_3"], [54, 66, "002_col_1"], [68, 82, "002_col_2"], [101, 110, "002_col_3"], [29, 38, "001_table_0"]]}
{"id": 3706, "text": "For each continent, list its id, name, and how many countries it has?", "meta": {"000_sql": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 18, "001_table_0"], [29, 31, "002_col_1"], [33, 37, "002_col_2"], [52, 61, "001_table_1"]]}
{"id": 3707, "text": "How many countries are listed?", "meta": {"000_sql": "SELECT count(*) FROM COUNTRIES;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"]]}
{"id": 3811, "text": "How many airlines are from USA?", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "001_table_0"]]}
{"id": 3708, "text": "How many countries exist?", "meta": {"000_sql": "SELECT count(*) FROM COUNTRIES;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"]]}
{"id": 3709, "text": "How many models does each car maker produce? List maker full name, id and the number.", "meta": {"000_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[26, 35, "001_table_2"], [50, 65, "002_col_8"], [67, 69, "002_col_6"], [78, 84, "002_col_10"], [9, 15, "002_col_10"]]}
{"id": 3710, "text": "What is the full name of each car maker, along with its id and how many models it produces?", "meta": {"000_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 21, "002_col_8"], [30, 39, "001_table_2"], [56, 58, "002_col_6"], [72, 78, "002_col_10"]]}
{"id": 3711, "text": "Which model of the car has the minimum horsepower?", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[6, 11, "002_col_14"], [19, 22, "001_table_4"], [39, 49, "002_col_20"]]}
{"id": 3712, "text": "What is the model of the car with the smallest amount of horsepower?", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 17, "002_col_14"], [57, 67, "002_col_20"], [25, 28, "001_table_4"]]}
{"id": 3713, "text": "Find the model of the car whose weight is below the average weight.", "meta": {"000_sql": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 14, "002_col_14"], [22, 25, "001_table_2"], [32, 38, "002_col_21"], [60, 66, "002_col_20"]]}
{"id": 3812, "text": "Return the number of airlines in the USA.", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[21, 29, "001_table_0"]]}
{"id": 3714, "text": "What is the model for the car with a weight smaller than the average?", "meta": {"000_sql": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 17, "002_col_14"], [26, 29, "001_table_2"], [37, 43, "002_col_21"]]}
{"id": 3715, "text": "Find the name of the makers that produced some cars in the year of 1970?", "meta": {"000_sql": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[21, 27, "001_table_2"], [59, 63, "002_col_23"], [47, 51, "001_table_4"], [9, 13, "002_col_7"]]}
{"id": 3716, "text": "What is the name of the different car makers who produced a car in 1970?", "meta": {"000_sql": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 16, "002_col_7"], [34, 44, "001_table_2"], [60, 63, "001_table_4"]]}
{"id": 3717, "text": "Find the make and production time of the cars that were produced in the earliest year?", "meta": {"000_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 13, "002_col_15"], [18, 33, "002_col_23"], [41, 45, "001_table_4"]]}
{"id": 3718, "text": "What is the maker of the carr produced in the earliest year and what year was it?", "meta": {"000_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 29, "001_table_2"], [55, 59, "002_col_23"], [69, 73, "002_col_23"]]}
{"id": 3719, "text": "Which distinct car models are the produced after 1980?", "meta": {"000_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[15, 25, "002_col_12"]]}
{"id": 3720, "text": "What are the different models for the cards produced after 1980?", "meta": {"000_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[23, 29, "002_col_14"], [38, 43, "001_table_4"]]}
{"id": 3721, "text": "How many car makers are there in each continents? List the continent name and the count.", "meta": {"000_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 19, "001_table_2"], [38, 48, "001_table_0"], [59, 73, "002_col_2"]]}
{"id": 3722, "text": "What is the name of each continent and how many car makers are there in each one?", "meta": {"000_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [48, 58, "002_col_6"], [25, 34, "002_col_1"], [63, 68, "001_table_0"], [77, 80, "002_col_1"]]}
{"id": 3723, "text": "Which of the countries has the most car makers? List the country name.", "meta": {"000_sql": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 22, "001_table_1"], [57, 69, "002_col_4"], [36, 46, "001_table_2"]]}
{"id": 3724, "text": "What is the name of the country with the most car makers?", "meta": {"000_sql": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 16, "002_col_4"], [24, 31, "001_table_1"], [46, 56, "001_table_2"]]}
{"id": 3725, "text": "How many car models are produced by each maker? List the count and the maker full name.", "meta": {"000_sql": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 19, "001_table_3"], [41, 46, "001_table_2"], [71, 76, "001_table_2"], [77, 86, "002_col_8"]]}
{"id": 3726, "text": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "meta": {"000_sql": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 32, "001_table_3"], [59, 64, "001_table_2"], [81, 83, "002_col_6"], [88, 97, "002_col_8"], [106, 111, "001_table_2"]]}
{"id": 3727, "text": "What is the accelerate of the car make amc hornet sportabout (sw)?", "meta": {"000_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 22, "002_col_22"], [30, 38, "002_col_15"]]}
{"id": 3728, "text": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "meta": {"000_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 32, "002_col_22"], [18, 21, "001_table_5"], [38, 43, "002_col_15"]]}
{"id": 3729, "text": "How many car makers are there in france?", "meta": {"000_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 19, "001_table_2"]]}
{"id": 3730, "text": "What is the number of makers of care in France?", "meta": {"000_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 36, "001_table_2"]]}
{"id": 3731, "text": "How many car models are produced in the usa?", "meta": {"000_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 19, "001_table_3"]]}
{"id": 4004, "text": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [41, 49, "002_col_7"]]}
{"id": 3732, "text": "What is the count of the car models produced in the United States?", "meta": {"000_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[25, 35, "001_table_3"]]}
{"id": 3733, "text": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "meta": {"000_sql": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 41, "002_col_17"], [49, 53, "001_table_5"], [61, 70, "002_col_18"]]}
{"id": 3734, "text": "What is the average miles per gallon of all the cards with 4 cylinders?", "meta": {"000_sql": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 36, "002_col_17"], [61, 70, "002_col_18"], [48, 53, "001_table_5"]]}
{"id": 3735, "text": "What is the smallest weight of the car produced with 8 cylinders on 1974?", "meta": {"000_sql": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[55, 64, "002_col_18"], [21, 27, "002_col_21"], [35, 38, "001_table_5"]]}
{"id": 3736, "text": "What is the minimu weight of the car with 8 cylinders produced in 1974?", "meta": {"000_sql": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[19, 25, "002_col_21"], [33, 36, "001_table_5"], [44, 53, "002_col_18"]]}
{"id": 3737, "text": "What are all the makers and models?", "meta": {"000_sql": "SELECT Maker ,  Model FROM MODEL_LIST;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[17, 23, "002_col_11"], [28, 34, "002_col_12"]]}
{"id": 3813, "text": "Which city and country is the Alton airport at?", "meta": {"000_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 10, "002_col_5"], [15, 22, "002_col_8"], [36, 43, "002_col_7"]]}
{"id": 3738, "text": "What are the makers and models?", "meta": {"000_sql": "SELECT Maker ,  Model FROM MODEL_LIST;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 19, "002_col_11"], [24, 30, "002_col_12"]]}
{"id": 3739, "text": "What are the countries having at least one car maker? List name and id.", "meta": {"000_sql": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 22, "001_table_1"], [43, 52, "001_table_2"], [59, 63, "002_col_4"], [68, 70, "002_col_3"]]}
{"id": 3740, "text": "What are the names and ids of all countries with at least one car maker?", "meta": {"000_sql": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 18, "002_col_4"], [23, 26, "002_col_3"], [34, 43, "001_table_0"], [62, 71, "001_table_2"]]}
{"id": 3741, "text": "What is the number of the cars with horsepower more than 150?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[26, 30, "001_table_5"], [36, 46, "002_col_20"]]}
{"id": 3742, "text": "What is the number of cars with a horsepower greater than 150?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 26, "001_table_5"], [34, 44, "002_col_20"]]}
{"id": 3743, "text": "What is the average weight of cars each year?", "meta": {"000_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 26, "002_col_21"], [30, 34, "001_table_5"], [40, 44, "002_col_23"]]}
{"id": 3814, "text": "Give the city and country for the Alton airport.", "meta": {"000_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 13, "002_col_5"], [18, 25, "002_col_8"], [40, 47, "002_col_7"]]}
{"id": 3744, "text": "What is the average weight and year for each year?", "meta": {"000_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 26, "002_col_21"], [31, 35, "002_col_23"], [45, 49, "002_col_23"]]}
{"id": 3745, "text": "Which countries in europe have at least 3 car manufacturers?", "meta": {"000_sql": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[6, 15, "002_col_4"], [42, 59, "001_table_2"]]}
{"id": 3746, "text": "What are the names of all European countries with at least 3 manufacturers?", "meta": {"000_sql": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 18, "002_col_4"], [35, 44, "001_table_1"], [61, 74, "001_table_2"]]}
{"id": 3747, "text": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "meta": {"000_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 30, "002_col_20"], [39, 43, "002_col_15"], [69, 78, "002_col_18"], [51, 54, "001_table_4"]]}
{"id": 3748, "text": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "meta": {"000_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[30, 40, "002_col_20"], [63, 72, "002_col_18"], [82, 86, "002_col_15"], [49, 55, "001_table_5"]]}
{"id": 3749, "text": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[70, 86, "002_col_17"], [27, 35, "002_col_17"], [6, 11, "002_col_14"]]}
{"id": 4496, "text": "Show me all grades that have at least 4 students.", "meta": {"000_sql": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[12, 18, "002_col_3"], [40, 48, "001_table_0"]]}
{"id": 3750, "text": "What is the car wmodel with the highest mpg?", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[40, 43, "002_col_17"], [12, 22, "002_col_14"]]}
{"id": 3751, "text": "What is the average horsepower of the cars before 1980?", "meta": {"000_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 30, "002_col_20"], [38, 42, "001_table_5"]]}
{"id": 3752, "text": "What is the average horsepower for all cards produced before 1980?", "meta": {"000_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 30, "002_col_20"], [39, 44, "001_table_5"]]}
{"id": 3753, "text": "What is the average edispl of the cars of model volvo?", "meta": {"000_sql": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 26, "002_col_19"], [34, 38, "001_table_5"], [42, 47, "002_col_14"]]}
{"id": 3754, "text": "What is the average edispl for all volvos?", "meta": {"000_sql": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 26, "002_col_19"]]}
{"id": 3755, "text": "What is the maximum accelerate for different number of cylinders?", "meta": {"000_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 30, "002_col_22"], [55, 64, "002_col_18"]]}
{"id": 3815, "text": "What is the airport name for airport 'AKO'?", "meta": {"000_sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 19, "001_table_1"], [20, 24, "002_col_7"], [29, 36, "002_col_6"]]}
{"id": 4217, "text": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "meta": {"000_sql": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 26, "002_col_9"], [30, 40, "001_table_0"], [46, 57, "002_col_2"]]}
{"id": 4218, "text": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "meta": {"000_sql": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 28, "002_col_9"], [36, 47, "001_table_0"], [54, 66, "002_col_2"]]}
{"id": 4219, "text": "How many TV Channel using language English?", "meta": {"000_sql": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 19, "001_table_0"], [26, 34, "002_col_4"]]}
{"id": 4220, "text": "How many TV Channels use the English language?", "meta": {"000_sql": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 20, "001_table_0"], [37, 45, "002_col_4"]]}
{"id": 4221, "text": "List the language used least number of TV Channel. List language and number of TV Channel.", "meta": {"000_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 17, "002_col_4"], [39, 49, "001_table_0"], [56, 64, "002_col_4"], [79, 89, "001_table_0"]]}
{"id": 4222, "text": "What are the languages used by the least number of TV Channels and how many channels use it?", "meta": {"000_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 22, "002_col_4"], [51, 62, "001_table_0"], [76, 84, "001_table_0"]]}
{"id": 4314, "text": "What is the area code in which the most voters voted?", "meta": {"000_sql": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[12, 21, "002_col_1"], [40, 46, "001_table_2"], [47, 52, "001_table_2"]]}
{"id": 4223, "text": "List each language and the number of TV Channels using it.", "meta": {"000_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[10, 18, "002_col_4"], [37, 48, "001_table_0"]]}
{"id": 4224, "text": "For each language, list the number of TV Channels that use it.", "meta": {"000_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 17, "002_col_4"], [38, 49, "001_table_0"]]}
{"id": 4225, "text": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "meta": {"000_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 22, "001_table_0"], [38, 45, "002_col_20"], [87, 97, "001_table_0"], [100, 111, "002_col_2"]]}
{"id": 4226, "text": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "meta": {"000_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 23, "002_col_2"], [31, 41, "001_table_0"], [57, 64, "002_col_20"]]}
{"id": 4227, "text": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "meta": {"000_sql": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 14, "002_col_20"], [23, 31, "001_table_2"], [42, 52, "001_table_0"], [58, 69, "002_col_2"]]}
{"id": 4228, "text": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "meta": {"000_sql": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 17, "002_col_20"], [29, 37, "001_table_2"], [54, 64, "001_table_0"], [74, 85, "002_col_2"]]}
{"id": 4229, "text": "List the Episode of all TV series sorted by rating.", "meta": {"000_sql": "SELECT Episode FROM TV_series ORDER BY rating", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 16, "002_col_11"], [24, 33, "001_table_1"], [44, 50, "002_col_13"]]}
{"id": 4230, "text": "What are all of the episodes ordered by ratings?", "meta": {"000_sql": "SELECT Episode FROM TV_series ORDER BY rating", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[20, 28, "002_col_11"], [40, 47, "002_col_13"]]}
{"id": 4231, "text": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "meta": {"000_sql": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[19, 25, "002_col_13"], [27, 36, "001_table_1"], [47, 56, "001_table_1"], [59, 66, "002_col_11"], [71, 77, "002_col_13"]]}
{"id": 4232, "text": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "meta": {"000_sql": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[23, 28, "002_col_13"], [29, 37, "002_col_11"], [45, 54, "001_table_1"], [81, 88, "002_col_13"]]}
{"id": 4233, "text": "What is minimum and maximum share of TV series?", "meta": {"000_sql": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[28, 33, "002_col_14"], [37, 46, "001_table_1"]]}
{"id": 4234, "text": "What is the maximum and minimum share for the TV series?", "meta": {"000_sql": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[32, 37, "002_col_14"], [46, 55, "001_table_1"]]}
{"id": 4315, "text": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "meta": {"000_sql": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[13, 19, "002_col_9"], [27, 33, "002_col_7"], [39, 52, "002_col_6"], [60, 65, "001_table_2"], [84, 100, "002_col_4"]]}
{"id": 4235, "text": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "meta": {"000_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 20, "002_col_12"], [24, 33, "001_table_1"], [39, 46, "002_col_11"]]}
{"id": 4236, "text": "When did the episode \"A Love of a Lifetime\" air?", "meta": {"000_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 20, "002_col_11"], [44, 47, "002_col_12"]]}
{"id": 4237, "text": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "meta": {"000_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[8, 19, "002_col_17"], [23, 32, "001_table_1"], [38, 45, "002_col_11"]]}
{"id": 4238, "text": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "meta": {"000_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 23, "002_col_17"], [32, 39, "002_col_11"]]}
{"id": 4239, "text": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "meta": {"000_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 22, "001_table_0"], [26, 35, "001_table_1"], [41, 48, "002_col_11"], [82, 92, "001_table_0"], [95, 106, "002_col_2"]]}
{"id": 4240, "text": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "meta": {"000_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 30, "002_col_2"], [44, 51, "002_col_11"]]}
{"id": 4497, "text": "Which grades have 4 or more high schoolers?", "meta": {"000_sql": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[28, 42, "001_table_0"], [6, 12, "002_col_3"]]}
{"id": 4241, "text": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "meta": {"000_sql": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 16, "002_col_11"], [25, 34, "001_table_1"], [45, 55, "001_table_0"], [61, 72, "002_col_2"]]}
{"id": 4242, "text": "What is the episode for the TV series named \"Sky Radio\"?", "meta": {"000_sql": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 19, "002_col_11"], [31, 43, "002_col_2"], [28, 30, "001_table_0"]]}
{"id": 4243, "text": "Find the number of cartoons directed by each of the listed directors.", "meta": {"000_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[19, 27, "001_table_2"], [28, 39, "002_col_21"], [59, 68, "002_col_21"]]}
{"id": 4244, "text": "How many cartoons did each director create?", "meta": {"000_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 17, "001_table_2"], [27, 35, "002_col_21"]]}
{"id": 4245, "text": "Find the production code and channel of the most recently aired cartoon.", "meta": {"000_sql": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 24, "002_col_24"], [29, 36, "002_col_25"], [64, 71, "001_table_2"], [58, 63, "002_col_23"]]}
{"id": 4246, "text": "What is the produdction code and channel of the most recent cartoon?", "meta": {"000_sql": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 28, "002_col_24"], [60, 67, "001_table_2"], [33, 40, "002_col_25"]]}
{"id": 4498, "text": "Show the student IDs and numbers of friends corresponding to each.", "meta": {"000_sql": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 20, "002_col_4"], [36, 43, "001_table_1"]]}
{"id": 4247, "text": "Find the package choice and series name of the TV channel that has high definition TV.", "meta": {"000_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 23, "002_col_9"], [28, 39, "002_col_2"], [47, 57, "001_table_0"], [67, 85, "002_col_7"]]}
{"id": 4248, "text": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "meta": {"000_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 28, "002_col_9"], [37, 55, "002_col_2"], [64, 74, "001_table_0"], [89, 107, "002_col_7"]]}
{"id": 4249, "text": "which countries' tv channels are playing some cartoon written by Todd Casey?", "meta": {"000_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[6, 15, "002_col_3"], [17, 28, "001_table_0"], [46, 53, "001_table_2"], [54, 64, "002_col_22"]]}
{"id": 4250, "text": "What are the countries that have cartoons on TV that were written by Todd Casey?", "meta": {"000_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 22, "002_col_3"], [33, 41, "001_table_2"], [45, 47, "001_table_0"], [58, 68, "002_col_22"]]}
{"id": 4251, "text": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "meta": {"000_sql": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[6, 15, "002_col_3"], [17, 28, "001_table_0"], [49, 56, "001_table_2"], [57, 67, "002_col_22"]]}
{"id": 4252, "text": "What are the countries that are not playing cartoons written by Todd Casey?", "meta": {"000_sql": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 22, "002_col_3"], [44, 52, "001_table_2"], [53, 63, "002_col_22"]]}
{"id": 4253, "text": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "meta": {"000_sql": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 20, "002_col_2"], [25, 32, "002_col_3"], [40, 50, "001_table_0"], [72, 80, "001_table_2"], [81, 92, "002_col_21"]]}
{"id": 4254, "text": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "meta": {"000_sql": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 23, "002_col_2"], [28, 35, "002_col_3"], [43, 54, "001_table_0"], [72, 80, "001_table_2"], [81, 92, "002_col_21"], [116, 127, "002_col_21"]]}
{"id": 4255, "text": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "meta": {"000_sql": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 27, "002_col_6"], [32, 38, "002_col_3"], [46, 57, "001_table_0"]]}
{"id": 4256, "text": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "meta": {"000_sql": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[12, 30, "002_col_6"], [35, 42, "002_col_3"], [61, 72, "001_table_0"]]}
{"id": 4257, "text": "find id of the tv channels that from the countries where have more than two tv channels.", "meta": {"000_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[5, 7, "002_col_1"], [15, 26, "001_table_0"], [41, 50, "002_col_3"], [76, 87, "001_table_0"]]}
{"id": 4258, "text": "What are the ids of all tv channels that have more than 2 TV channels?", "meta": {"000_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 16, "002_col_1"], [24, 35, "001_table_0"], [58, 69, "001_table_0"]]}
{"id": 4259, "text": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "meta": {"000_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 11, "002_col_1"], [15, 26, "001_table_0"], [48, 55, "001_table_2"], [56, 67, "002_col_21"]]}
{"id": 4260, "text": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "meta": {"000_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 16, "002_col_1"], [24, 35, "001_table_0"], [57, 65, "001_table_2"], [66, 77, "002_col_21"]]}
{"id": 4261, "text": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "meta": {"000_sql": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[9, 23, "002_col_9"], [31, 41, "001_table_0"], [63, 70, "001_table_2"], [71, 82, "002_col_21"]]}
{"id": 4262, "text": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "meta": {"000_sql": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "001_table_0": "TV_Channel", "001_table_1": "TV_series", "001_table_2": "Cartoon", "002_col_1": "TV_Channel.id", "002_col_2": "TV_Channel.series_name", "002_col_3": "TV_Channel.Country", "002_col_4": "TV_Channel.Language", "002_col_5": "TV_Channel.Content", "002_col_6": "TV_Channel.Pixel_aspect_ratio_PAR", "002_col_7": "TV_Channel.Hight_definition_TV", "002_col_8": "TV_Channel.Pay_per_view_PPV", "002_col_9": "TV_Channel.Package_Option", "002_col_10": "TV_series.id", "002_col_11": "TV_series.Episode", "002_col_12": "TV_series.Air_Date", "002_col_13": "TV_series.Rating", "002_col_14": "TV_series.Share", "002_col_15": "TV_series.18_49_Rating_Share", "002_col_16": "TV_series.Viewers_m", "002_col_17": "TV_series.Weekly_Rank", "002_col_18": "TV_series.Channel", "002_col_19": "Cartoon.id", "002_col_20": "Cartoon.Title", "002_col_21": "Cartoon.Directed_by", "002_col_22": "Cartoon.Written_by", "002_col_23": "Cartoon.Original_air_date", "002_col_24": "Cartoon.Production_code", "002_col_25": "Cartoon.Channel"}, "annotation_approver": null, "labels": [[13, 28, "002_col_9"], [36, 47, "001_table_0"], [73, 81, "001_table_2"], [82, 93, "002_col_21"]]}
{"id": 4263, "text": "How many poker players are there?", "meta": {"000_sql": "SELECT count(*) FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 22, "001_table_0"]]}
{"id": 4264, "text": "Count the number of poker players.", "meta": {"000_sql": "SELECT count(*) FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[20, 33, "001_table_0"]]}
{"id": 4265, "text": "List the earnings of poker players in descending order.", "meta": {"000_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[21, 34, "001_table_0"], [9, 17, "002_col_6"]]}
{"id": 4266, "text": "What are the earnings of poker players, ordered descending by value?", "meta": {"000_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 21, "002_col_6"], [25, 38, "001_table_0"], [62, 67, "002_col_6"]]}
{"id": 4267, "text": "List the final tables made and the best finishes of poker players.", "meta": {"000_sql": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 26, "002_col_3"], [35, 48, "002_col_4"], [52, 65, "001_table_0"]]}
{"id": 4268, "text": "What are the final tables made and best finishes for all poker players?", "meta": {"000_sql": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 30, "002_col_3"], [35, 48, "002_col_4"], [57, 70, "001_table_0"]]}
{"id": 4269, "text": "What is the average earnings of poker players?", "meta": {"000_sql": "SELECT avg(Earnings) FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[20, 28, "002_col_6"], [32, 45, "001_table_0"]]}
{"id": 4270, "text": "Return the average earnings across all poker players.", "meta": {"000_sql": "SELECT avg(Earnings) FROM poker_player", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[19, 27, "002_col_6"], [39, 52, "001_table_0"]]}
{"id": 4271, "text": "What is the money rank of the poker player with the highest earnings?", "meta": {"000_sql": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[12, 22, "002_col_5"], [30, 42, "001_table_0"], [60, 68, "002_col_6"]]}
{"id": 4272, "text": "Return the money rank of the player with the greatest earnings.", "meta": {"000_sql": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 21, "002_col_5"], [29, 35, "001_table_0"], [54, 62, "002_col_6"]]}
{"id": 4273, "text": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "meta": {"000_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[30, 47, "002_col_3"], [54, 67, "001_table_0"], [73, 81, "002_col_6"]]}
{"id": 4274, "text": "Return the maximum final tables made across all poker players who have earnings below 200000.", "meta": {"000_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[19, 36, "002_col_3"], [48, 61, "001_table_0"], [71, 79, "002_col_6"]]}
{"id": 4275, "text": "What are the names of poker players?", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[22, 35, "001_table_0"], [13, 18, "002_col_9"]]}
{"id": 4276, "text": "Return the names of all the poker players.", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 16, "002_col_9"], [28, 41, "001_table_0"]]}
{"id": 4277, "text": "What are the names of poker players whose earnings is higher than 300000?", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 35, "001_table_0"], [42, 50, "002_col_6"]]}
{"id": 4499, "text": "How many friends does each student have?", "meta": {"000_sql": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"], [27, 34, "002_col_4"]]}
{"id": 4278, "text": "Give the names of poker players who have earnings above 300000.", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 31, "001_table_0"], [41, 49, "002_col_6"]]}
{"id": 4279, "text": "List the names of poker players ordered by the final tables made in ascending order.", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 31, "001_table_0"], [47, 64, "002_col_3"]]}
{"id": 4280, "text": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 35, "001_table_0"], [72, 84, "002_col_3"]]}
{"id": 4281, "text": "What is the birth date of the poker player with the lowest earnings?", "meta": {"000_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[12, 22, "002_col_10"], [30, 42, "001_table_0"], [59, 67, "002_col_6"]]}
{"id": 4282, "text": "Return the birth date of the poker player with the lowest earnings.", "meta": {"000_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 21, "002_col_10"], [29, 41, "001_table_0"], [58, 66, "002_col_6"]]}
{"id": 4283, "text": "What is the money rank of the tallest poker player?", "meta": {"000_sql": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[12, 22, "002_col_5"], [38, 50, "001_table_0"]]}
{"id": 4284, "text": "Return the money rank of the poker player with the greatest height.", "meta": {"000_sql": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 21, "002_col_5"], [29, 41, "001_table_0"]]}
{"id": 4285, "text": "What is the average earnings of poker players with height higher than 200?", "meta": {"000_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[20, 28, "002_col_6"], [32, 45, "001_table_0"]]}
{"id": 4286, "text": "Give average earnings of poker players who are taller than 200.", "meta": {"000_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 21, "002_col_6"], [25, 38, "001_table_0"]]}
{"id": 4287, "text": "What are the names of poker players in descending order of earnings?", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 35, "001_table_0"], [59, 67, "002_col_6"]]}
{"id": 4288, "text": "Return the names of poker players sorted by their earnings descending.", "meta": {"000_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 16, "002_col_9"], [20, 33, "001_table_0"], [50, 58, "002_col_6"]]}
{"id": 4289, "text": "What are different nationalities of people and the corresponding number of people from each nation?", "meta": {"000_sql": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[19, 32, "002_col_8"], [36, 42, "001_table_1"], [75, 81, "001_table_1"], [92, 98, "002_col_8"]]}
{"id": 4290, "text": "How many people are there of each nationality?", "meta": {"000_sql": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 15, "001_table_1"], [34, 45, "002_col_8"]]}
{"id": 4291, "text": "What is the most common nationality of people?", "meta": {"000_sql": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[24, 35, "002_col_8"], [39, 45, "001_table_1"]]}
{"id": 4292, "text": "Give the nationality that is most common across all people.", "meta": {"000_sql": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 20, "002_col_8"], [52, 58, "001_table_1"]]}
{"id": 4293, "text": "What are the nationalities that are shared by at least two people?", "meta": {"000_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 26, "002_col_8"], [59, 65, "001_table_1"]]}
{"id": 4294, "text": "Return the nationalities for which there are two or more people.", "meta": {"000_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[11, 24, "002_col_8"], [57, 63, "001_table_1"]]}
{"id": 4295, "text": "List the names and birth dates of people in ascending alphabetical order of name.", "meta": {"000_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [19, 30, "002_col_10"], [34, 40, "001_table_1"], [76, 80, "002_col_9"]]}
{"id": 4296, "text": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "meta": {"000_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [23, 34, "002_col_10"], [38, 44, "001_table_1"], [63, 68, "002_col_9"]]}
{"id": 3756, "text": "What is the maximum accelerate for all the different cylinders?", "meta": {"000_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 30, "002_col_22"], [53, 62, "002_col_18"]]}
{"id": 3757, "text": "Which model has the most version(make) of cars?", "meta": {"000_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[6, 11, "002_col_14"], [42, 46, "001_table_4"]]}
{"id": 3758, "text": "What model has the most different versions?", "meta": {"000_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[5, 10, "002_col_14"]]}
{"id": 3759, "text": "How many cars have more than 4 cylinders?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 13, "001_table_5"], [31, 40, "002_col_18"]]}
{"id": 3760, "text": "What is the number of cars with more than 4 cylinders?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 26, "001_table_5"], [44, 53, "002_col_18"]]}
{"id": 3761, "text": "how many cars were produced in 1980?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 13, "001_table_5"]]}
{"id": 3762, "text": "In 1980, how many cars were made?", "meta": {"000_sql": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[18, 22, "001_table_5"]]}
{"id": 3763, "text": "How many car models were produced by the maker with full name American Motor Company?", "meta": {"000_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[52, 61, "002_col_8"], [41, 46, "002_col_11"], [9, 12, "001_table_2"], [13, 19, "001_table_3"]]}
{"id": 3802, "text": "Give the airport code and airport name corresonding to the city Anthony.", "meta": {"000_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 21, "002_col_6"], [26, 38, "002_col_7"], [59, 63, "002_col_5"]]}
{"id": 3764, "text": "What is the number of car models created by the car maker American Motor Company?", "meta": {"000_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 25, "001_table_2"], [26, 32, "001_table_3"], [48, 57, "002_col_8"]]}
{"id": 3765, "text": "Which makers designed more than 3 car models? List full name and the id.", "meta": {"000_sql": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[51, 60, "002_col_8"], [69, 71, "002_col_6"], [6, 12, "001_table_2"], [34, 44, "001_table_3"]]}
{"id": 3766, "text": "What are the names and ids of all makers with more than 3 models?", "meta": {"000_sql": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 18, "002_col_8"], [23, 26, "002_col_6"], [34, 40, "001_table_2"], [58, 64, "001_table_3"]]}
{"id": 3767, "text": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "meta": {"000_sql": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[18, 24, "002_col_12"], [41, 46, "002_col_11"], [56, 65, "002_col_8"], [84, 92, "002_col_21"]]}
{"id": 3768, "text": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "meta": {"000_sql": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[52, 61, "002_col_8"], [80, 87, "002_col_21"], [23, 29, "002_col_12"]]}
{"id": 3769, "text": "In which years cars were produced weighing no less than 3000 and no more than 4000?", "meta": {"000_sql": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 14, "002_col_23"], [34, 42, "002_col_21"]]}
{"id": 3770, "text": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?", "meta": {"000_sql": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[23, 28, "002_col_23"], [68, 75, "002_col_21"], [110, 118, "002_col_21"], [49, 53, "001_table_5"], [100, 104, "001_table_5"]]}
{"id": 3771, "text": "What is the horsepower of the car with the largest accelerate?", "meta": {"000_sql": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 22, "002_col_20"], [30, 33, "001_table_5"], [51, 61, "002_col_22"]]}
{"id": 3772, "text": "What is the horsepower of the car with the greatest accelerate?", "meta": {"000_sql": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 22, "002_col_20"], [30, 33, "001_table_5"], [52, 62, "002_col_22"]]}
{"id": 3773, "text": "For model volvo, how many cylinders does the car with the least accelerate have?", "meta": {"000_sql": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[4, 9, "002_col_14"], [26, 35, "002_col_18"], [64, 74, "002_col_22"], [45, 48, "001_table_5"]]}
{"id": 3774, "text": "For a volvo model, how many cylinders does the version with least accelerate have?", "meta": {"000_sql": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[12, 17, "002_col_14"], [28, 37, "002_col_18"], [66, 76, "002_col_22"]]}
{"id": 3775, "text": "How many cars have a larger accelerate than the car with the largest horsepower?", "meta": {"000_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[28, 38, "002_col_22"], [69, 79, "002_col_20"], [9, 13, "001_table_5"], [48, 51, "001_table_5"]]}
{"id": 3803, "text": "How many airlines do we have?", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"]]}
{"id": 3776, "text": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "meta": {"000_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 26, "001_table_5"], [42, 52, "002_col_22"], [80, 90, "002_col_20"]]}
{"id": 3777, "text": "How many countries has more than 2 car makers?", "meta": {"000_sql": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"], [35, 45, "001_table_2"]]}
{"id": 3778, "text": "What is the number of countries with more than 2 car makers?", "meta": {"000_sql": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 31, "001_table_0"], [49, 59, "001_table_2"]]}
{"id": 3779, "text": "How many cars has over 6 cylinders?", "meta": {"000_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[9, 13, "001_table_5"], [25, 34, "002_col_18"]]}
{"id": 3780, "text": "What is the number of carsw ith over 6 cylinders?", "meta": {"000_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[22, 27, "001_table_5"], [39, 48, "002_col_18"]]}
{"id": 3781, "text": "For the cars with 4 cylinders, which model has the largest horsepower?", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 29, "002_col_18"], [8, 12, "001_table_5"], [37, 42, "002_col_14"], [59, 69, "002_col_20"]]}
{"id": 3804, "text": "What is the total number of airlines?", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[28, 36, "001_table_0"]]}
{"id": 3782, "text": "For all of the 4 cylinder cars, which model has the most horsepower?", "meta": {"000_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[17, 25, "002_col_18"], [26, 30, "001_table_5"], [38, 43, "002_col_14"], [57, 67, "002_col_20"]]}
{"id": 3783, "text": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "meta": {"000_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[37, 47, "002_col_20"], [84, 93, "002_col_18"], [119, 128, "002_col_15"], [108, 114, "002_col_13"], [104, 107, "001_table_4"], [10, 14, "001_table_5"]]}
{"id": 3784, "text": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?", "meta": {"000_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[44, 54, "002_col_20"], [117, 126, "002_col_18"], [10, 14, "001_table_5"], [69, 77, "002_col_13"], [82, 87, "002_col_15"]]}
{"id": 3785, "text": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?", "meta": {"000_sql": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 36, "002_col_17"], [55, 64, "002_col_18"], [44, 47, "001_table_5"]]}
{"id": 3786, "text": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?", "meta": {"000_sql": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[20, 23, "002_col_17"], [31, 35, "001_table_5"], [47, 56, "002_col_18"]]}
{"id": 3787, "text": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "meta": {"000_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[6, 12, "002_col_12"]]}
{"id": 3788, "text": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "meta": {"000_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[23, 29, "002_col_12"]]}
{"id": 3789, "text": "What are the name of the countries where there is not a single car maker?", "meta": {"000_sql": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 17, "002_col_4"], [25, 34, "001_table_1"], [63, 72, "001_table_2"]]}
{"id": 3790, "text": "What are the names of the countries with no car makers?", "meta": {"000_sql": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 18, "002_col_4"], [26, 35, "001_table_1"], [44, 54, "001_table_2"]]}
{"id": 3791, "text": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.", "meta": {"000_sql": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[14, 17, "001_table_2"], [18, 24, "002_col_7"], [104, 109, "002_col_7"], [93, 95, "002_col_6"], [50, 56, "001_table_3"], [73, 76, "001_table_4"], [77, 82, "002_col_14"]]}
{"id": 3792, "text": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "meta": {"000_sql": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 16, "002_col_6"], [21, 27, "002_col_7"], [35, 45, "001_table_2"], [98, 102, "002_col_14"], [70, 76, "001_table_3"]]}
{"id": 3805, "text": "How many airports do we have?", "meta": {"000_sql": "SELECT count(*) FROM AIRPORTS", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"]]}
{"id": 3806, "text": "Return the number of  airports.", "meta": {"000_sql": "SELECT count(*) FROM AIRPORTS", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[22, 30, "001_table_1"]]}
{"id": 3793, "text": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "meta": {"000_sql": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 15, "002_col_3"], [20, 25, "002_col_4"], [33, 42, "001_table_1"], [66, 76, "001_table_2"], [99, 104, "002_col_12"]]}
{"id": 3794, "text": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?", "meta": {"000_sql": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "001_table_0": "continents", "001_table_1": "countries", "001_table_2": "car_makers", "001_table_3": "model_list", "001_table_4": "car_names", "001_table_5": "cars_data", "002_col_1": "continents.ContId", "002_col_2": "continents.Continent", "002_col_3": "countries.CountryId", "002_col_4": "countries.CountryName", "002_col_5": "countries.Continent", "002_col_6": "car_makers.Id", "002_col_7": "car_makers.Maker", "002_col_8": "car_makers.FullName", "002_col_9": "car_makers.Country", "002_col_10": "model_list.ModelId", "002_col_11": "model_list.Maker", "002_col_12": "model_list.Model", "002_col_13": "car_names.MakeId", "002_col_14": "car_names.Model", "002_col_15": "car_names.Make", "002_col_16": "cars_data.Id", "002_col_17": "cars_data.MPG", "002_col_18": "cars_data.Cylinders", "002_col_19": "cars_data.Edispl", "002_col_20": "cars_data.Horsepower", "002_col_21": "cars_data.Weight", "002_col_22": "cars_data.Accelerate", "002_col_23": "cars_data.Year"}, "annotation_approver": null, "labels": [[13, 16, "002_col_3"], [21, 26, "002_col_4"], [34, 43, "001_table_0"], [73, 83, "001_table_3"]]}
{"id": 3795, "text": "Which country does Airline \"JetBlue Airways\" belong to?", "meta": {"000_sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 13, "002_col_4"], [19, 26, "002_col_2"]]}
{"id": 3796, "text": "What country is Jetblue Airways affiliated with?", "meta": {"000_sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[5, 12, "002_col_4"]]}
{"id": 3797, "text": "What is the abbreviation of Airline \"JetBlue Airways\"?", "meta": {"000_sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 24, "002_col_3"], [28, 35, "002_col_2"]]}
{"id": 3798, "text": "Which abbreviation corresponds to Jetblue Airways?", "meta": {"000_sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 18, "002_col_3"]]}
{"id": 3799, "text": "List all airline names and their abbreviations in \"USA\".", "meta": {"000_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[33, 46, "002_col_3"], [9, 16, "002_col_2"]]}
{"id": 3800, "text": "What are the airline names and abbreviations for airlines in the USA?", "meta": {"000_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[13, 20, "002_col_2"], [31, 44, "002_col_3"], [49, 57, "001_table_0"]]}
{"id": 3801, "text": "List the airport code and name in the city of Anthony.", "meta": {"000_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 21, "002_col_6"], [26, 30, "002_col_7"], [38, 42, "002_col_5"]]}
{"id": 3816, "text": "Return the name of the airport with code 'AKO'.", "meta": {"000_sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[11, 15, "002_col_7"], [23, 30, "001_table_1"], [36, 40, "002_col_6"]]}
{"id": 3817, "text": "What are airport names at City 'Aberdeen'?", "meta": {"000_sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"], [17, 22, "002_col_7"], [26, 30, "002_col_5"]]}
{"id": 3818, "text": "What are the names of airports in Aberdeen?", "meta": {"000_sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[13, 18, "002_col_7"], [22, 30, "001_table_1"]]}
{"id": 3819, "text": "How many flights depart from 'APG'?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [17, 28, "002_col_12"]]}
{"id": 3820, "text": "Count the number of flights departing from 'APG'.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[20, 27, "001_table_2"], [28, 42, "002_col_12"]]}
{"id": 3821, "text": "How many flights have destination ATO?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [22, 33, "002_col_13"]]}
{"id": 3822, "text": "Count the number of flights into ATO.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[20, 27, "001_table_2"]]}
{"id": 3823, "text": "How many flights depart from City Aberdeen?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [29, 33, "002_col_5"]]}
{"id": 3824, "text": "Return the number of flights departing from Aberdeen.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[21, 28, "001_table_2"]]}
{"id": 3825, "text": "How many flights arriving in Aberdeen city?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [38, 42, "002_col_5"]]}
{"id": 3826, "text": "Return the number of flights arriving in Aberdeen.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[21, 28, "001_table_2"]]}
{"id": 3827, "text": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [29, 33, "002_col_5"], [66, 70, "002_col_5"]]}
{"id": 3828, "text": "How many flights fly from Aberdeen to Ashley?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"]]}
{"id": 3829, "text": "How many flights does airline 'JetBlue Airways' have?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [22, 29, "002_col_2"]]}
{"id": 3830, "text": "Give the number of Jetblue Airways flights.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[35, 42, "001_table_2"]]}
{"id": 3831, "text": "How many 'United Airlines' flights go to Airport 'ASY'?", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[27, 34, "001_table_2"], [41, 48, "002_col_13"]]}
{"id": 3832, "text": "Count the number of United Airlines flights arriving in ASY Airport.", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[36, 43, "001_table_2"], [60, 67, "002_col_13"]]}
{"id": 3833, "text": "How many 'United Airlines' flights depart from Airport 'AHD'?", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[27, 34, "001_table_2"], [47, 54, "002_col_12"]]}
{"id": 3834, "text": "Return the number of United Airlines flights leaving from AHD Airport.", "meta": {"000_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[37, 44, "001_table_2"], [62, 69, "002_col_12"]]}
{"id": 3835, "text": "How many United Airlines flights go to City 'Aberdeen'?", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[25, 32, "001_table_2"], [39, 43, "002_col_5"]]}
{"id": 4005, "text": "Show the name of teachers aged either 32 or 33?", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 13, "002_col_5"], [17, 25, "001_table_1"], [26, 30, "002_col_6"]]}
{"id": 3836, "text": "Count the number of United Airlines flights that arrive in Aberdeen.", "meta": {"000_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[36, 43, "001_table_2"]]}
{"id": 3837, "text": "Which city has most number of arriving flights?", "meta": {"000_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 10, "002_col_5"], [39, 46, "001_table_2"]]}
{"id": 3838, "text": "Which city has the most frequent destination airport?", "meta": {"000_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 10, "002_col_5"], [33, 52, "002_col_13"]]}
{"id": 3839, "text": "Which city has most number of departing flights?", "meta": {"000_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 10, "002_col_5"], [30, 47, "002_col_12"]]}
{"id": 3840, "text": "Which city is the most frequent source airport?", "meta": {"000_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 10, "002_col_5"], [32, 46, "002_col_12"]]}
{"id": 3841, "text": "What is the code of airport that has the highest number of flights?", "meta": {"000_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 27, "002_col_6"], [59, 66, "001_table_2"]]}
{"id": 3842, "text": "What is the airport code of the airport with the most flights?", "meta": {"000_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 19, "001_table_1"], [20, 24, "002_col_6"], [32, 39, "001_table_1"], [54, 61, "001_table_2"]]}
{"id": 3843, "text": "What is the code of airport that has fewest number of flights?", "meta": {"000_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 16, "002_col_6"], [20, 27, "001_table_1"], [54, 61, "001_table_2"]]}
{"id": 3844, "text": "Give the code of the airport with the least flights.", "meta": {"000_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 13, "002_col_6"], [21, 28, "001_table_1"], [44, 51, "001_table_2"]]}
{"id": 4500, "text": "Show the names of high school students and their corresponding number of friends.", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 29, "001_table_0"], [30, 38, "002_col_4"], [73, 80, "001_table_1"]]}
{"id": 3845, "text": "Which airline has most number of flights?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[33, 40, "001_table_2"], [6, 13, "002_col_2"]]}
{"id": 3846, "text": "What airline serves the most flights?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[5, 12, "002_col_2"], [29, 36, "001_table_2"]]}
{"id": 3847, "text": "Find the abbreviation and country of the airline that has fewest number of flights?", "meta": {"000_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 21, "002_col_3"], [26, 33, "002_col_4"], [41, 48, "001_table_0"], [75, 82, "001_table_2"]]}
{"id": 3848, "text": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "meta": {"000_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[12, 24, "002_col_3"], [32, 39, "002_col_2"], [55, 62, "001_table_2"], [72, 79, "002_col_4"]]}
{"id": 3849, "text": "What are airlines that have some flight departing from airport 'AHD'?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "002_col_2"], [33, 39, "001_table_2"], [55, 62, "002_col_12"]]}
{"id": 3850, "text": "Which airlines have a flight with source airport AHD?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [22, 28, "001_table_2"], [34, 48, "002_col_12"]]}
{"id": 3851, "text": "What are airlines that have flights arriving at airport 'AHD'?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "002_col_2"], [28, 35, "001_table_2"], [48, 55, "002_col_13"]]}
{"id": 3852, "text": "Which airlines have a flight with destination airport AHD?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [22, 28, "001_table_2"], [34, 53, "002_col_13"]]}
{"id": 3853, "text": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "002_col_2"]]}
{"id": 3863, "text": "What are flight numbers of flights departing from Airport \"APG\"?", "meta": {"000_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [50, 57, "002_col_12"]]}
{"id": 3854, "text": "Which airlines have departing flights from both APG and CVO airports?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [30, 37, "001_table_2"], [60, 68, "002_col_12"]]}
{"id": 3855, "text": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[41, 48, "002_col_12"], [28, 35, "001_table_2"], [9, 17, "002_col_2"]]}
{"id": 3856, "text": "Which airlines have departures from CVO but not from APG airports?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [57, 65, "002_col_12"]]}
{"id": 3857, "text": "Find all airlines that have at least 10 flights.", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "002_col_2"], [40, 47, "001_table_2"]]}
{"id": 3858, "text": "Which airlines have at least 10 flights?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [32, 39, "001_table_2"]]}
{"id": 3859, "text": "Find all airlines that have fewer than 200 flights.", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 17, "002_col_2"], [43, 50, "001_table_2"]]}
{"id": 3860, "text": "Which airlines have less than 200 flights?", "meta": {"000_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [34, 41, "001_table_2"]]}
{"id": 3861, "text": "What are flight numbers of Airline \"United Airlines\"?", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "002_col_2"]]}
{"id": 3862, "text": "Which flight numbers correspond to United Airlines flights?", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 20, "002_col_11"], [51, 58, "001_table_2"]]}
{"id": 4006, "text": "What are the names of the teachers who are aged either 32 or 33?", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [43, 47, "002_col_6"]]}
{"id": 3864, "text": "Give the flight numbers of flights leaving from APG.", "meta": {"000_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 47, "002_col_12"]]}
{"id": 3865, "text": "What are flight numbers of flights arriving at Airport \"APG\"?", "meta": {"000_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [47, 54, "002_col_13"]]}
{"id": 3866, "text": "Give the flight numbers of flights landing at APG.", "meta": {"000_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 45, "002_col_13"]]}
{"id": 3867, "text": "What are flight numbers of flights departing from City \"Aberdeen \"?", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 49, "002_col_12"], [50, 54, "002_col_5"]]}
{"id": 3868, "text": "Give the flight numbers of flights leaving from Aberdeen.", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 47, "002_col_12"]]}
{"id": 3869, "text": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 46, "002_col_13"], [47, 51, "002_col_5"]]}
{"id": 3870, "text": "Give the flight numbers of flights arriving in Aberdeen.", "meta": {"000_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 23, "002_col_11"], [27, 34, "001_table_2"], [35, 46, "002_col_13"]]}
{"id": 3871, "text": "Find the number of flights landing in the city of Aberdeen or Abilene.", "meta": {"000_sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 15, "002_col_11"], [19, 26, "001_table_2"], [27, 37, "002_col_13"], [42, 46, "002_col_5"]]}
{"id": 3872, "text": "How many flights land in Aberdeen or Abilene?", "meta": {"000_sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 16, "001_table_2"], [17, 24, "002_col_13"]]}
{"id": 3873, "text": "Find the name of airports which do not have any flight in and out.", "meta": {"000_sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[9, 13, "002_col_7"], [17, 25, "001_table_1"], [48, 54, "001_table_2"]]}
{"id": 3874, "text": "Which airports do not have departing or arriving flights?", "meta": {"000_sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "001_table_0": "airlines", "001_table_1": "airports", "001_table_2": "flights", "002_col_1": "airlines.uid", "002_col_2": "airlines.Airline", "002_col_3": "airlines.Abbreviation", "002_col_4": "airlines.Country", "002_col_5": "airports.City", "002_col_6": "airports.AirportCode", "002_col_7": "airports.AirportName", "002_col_8": "airports.Country", "002_col_9": "airports.CountryAbbrev", "002_col_10": "flights.Airline", "002_col_11": "flights.FlightNo", "002_col_12": "flights.SourceAirport", "002_col_13": "flights.DestAirport"}, "annotation_approver": null, "labels": [[6, 14, "002_col_7"], [49, 56, "001_table_2"]]}
{"id": 3875, "text": "How many employees are there?", "meta": {"000_sql": "SELECT count(*) FROM employee", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 18, "001_table_0"]]}
{"id": 3876, "text": "Count the number of employees", "meta": {"000_sql": "SELECT count(*) FROM employee", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[20, 29, "001_table_0"]]}
{"id": 3877, "text": "Sort employee names by their age in ascending order.", "meta": {"000_sql": "SELECT name FROM employee ORDER BY age", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[5, 13, "001_table_0"], [14, 19, "002_col_2"], [29, 32, "002_col_3"]]}
{"id": 3878, "text": "List the names of employees and sort in ascending order of age.", "meta": {"000_sql": "SELECT name FROM employee ORDER BY age", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 27, "001_table_0"], [59, 62, "002_col_3"]]}
{"id": 3879, "text": "What is the number of employees from each city?", "meta": {"000_sql": "SELECT count(*) ,  city FROM employee GROUP BY city", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[22, 31, "001_table_0"], [42, 46, "002_col_4"]]}
{"id": 3880, "text": "Count the number of employees for each city.", "meta": {"000_sql": "SELECT count(*) ,  city FROM employee GROUP BY city", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[20, 29, "001_table_0"], [39, 43, "002_col_4"]]}
{"id": 3881, "text": "Which cities do more than one employee under age 30 come from?", "meta": {"000_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 12, "002_col_4"], [30, 38, "001_table_0"], [45, 48, "002_col_3"]]}
{"id": 3882, "text": "Find the cities that have more than one employee under age 30.", "meta": {"000_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 15, "002_col_4"], [40, 48, "001_table_0"], [58, 59, "002_col_3"]]}
{"id": 4509, "text": "Count the number of friends Kyle has.", "meta": {"000_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[20, 27, "001_table_1"]]}
{"id": 3883, "text": "Find the number of shops in each location.", "meta": {"000_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[19, 24, "001_table_1"], [33, 41, "002_col_7"]]}
{"id": 3884, "text": "How many shops are there in each location?", "meta": {"000_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 14, "001_table_1"], [33, 41, "002_col_7"]]}
{"id": 3885, "text": "Find the manager name and district of the shop whose number of products is the largest.", "meta": {"000_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 21, "002_col_10"], [42, 46, "001_table_1"], [53, 71, "002_col_9"]]}
{"id": 3886, "text": "What are the manager name and district of the shop that sells the largest number of products?", "meta": {"000_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[13, 25, "002_col_10"], [46, 50, "001_table_1"], [74, 92, "002_col_9"]]}
{"id": 3887, "text": "find the minimum and maximum number of products of all stores.", "meta": {"000_sql": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[29, 47, "002_col_9"], [55, 61, "001_table_1"]]}
{"id": 3888, "text": "What are the minimum and maximum number of products across all the shops?", "meta": {"000_sql": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[33, 51, "002_col_9"], [67, 72, "001_table_1"]]}
{"id": 3889, "text": "Return the name, location and district of all shops in descending order of number of products.", "meta": {"000_sql": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[11, 15, "002_col_6"], [17, 25, "002_col_7"], [46, 51, "001_table_0"], [75, 93, "002_col_9"]]}
{"id": 3890, "text": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "meta": {"000_sql": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[13, 18, "001_table_1"], [22, 37, "002_col_9"], [74, 78, "002_col_6"], [80, 88, "002_col_7"], [110, 114, "001_table_1"]]}
{"id": 3891, "text": "Find the names of stores whose number products is more than the average number of products.", "meta": {"000_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 14, "002_col_6"], [18, 24, "001_table_1"], [31, 46, "002_col_9"], [72, 90, "002_col_9"]]}
{"id": 3892, "text": "Which shops' number products is above the average? Give me the shop names.", "meta": {"000_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 12, "001_table_1"], [13, 28, "002_col_9"], [63, 67, "001_table_1"], [68, 73, "002_col_6"]]}
{"id": 3893, "text": "find the name of employee who was awarded the most times in the evaluation.", "meta": {"000_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [17, 25, "001_table_0"], [64, 74, "001_table_3"]]}
{"id": 3894, "text": "Which employee received the most awards in evaluations? Give me the employee name.", "meta": {"000_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 14, "002_col_2"], [43, 54, "001_table_3"], [68, 76, "001_table_0"], [77, 81, "002_col_2"]]}
{"id": 3895, "text": "Find the name of the employee who got the highest one time bonus.", "meta": {"000_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [21, 29, "001_table_0"], [59, 64, "002_col_17"]]}
{"id": 3896, "text": "Which employee received the biggest bonus? Give me the employee name.", "meta": {"000_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 14, "001_table_0"], [55, 63, "001_table_0"], [64, 68, "002_col_2"], [36, 41, "002_col_17"]]}
{"id": 3897, "text": "Find the names of employees who never won any award in the evaluation.", "meta": {"000_sql": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 27, "001_table_0"], [59, 69, "001_table_3"]]}
{"id": 3898, "text": "What are the names of the employees who never received any evaluation?", "meta": {"000_sql": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 35, "001_table_0"], [59, 69, "001_table_3"]]}
{"id": 3899, "text": "What is the name of the shop that is hiring the largest number of employees?", "meta": {"000_sql": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[12, 16, "002_col_6"], [24, 28, "001_table_1"], [37, 43, "001_table_2"], [66, 75, "001_table_2"]]}
{"id": 4007, "text": "What is the hometown of the youngest teacher?", "meta": {"000_sql": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[12, 20, "002_col_7"], [37, 44, "001_table_1"]]}
{"id": 3900, "text": "Which shop has the most employees? Give me the shop name.", "meta": {"000_sql": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 10, "002_col_6"], [47, 51, "001_table_1"], [52, 56, "002_col_6"], [24, 33, "001_table_2"]]}
{"id": 3901, "text": "Find the name of the shops that do not hire any employee.", "meta": {"000_sql": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 13, "002_col_6"], [21, 26, "001_table_1"], [39, 43, "001_table_2"], [48, 56, "001_table_2"]]}
{"id": 3902, "text": "Which shops run with no employees? Find the shop names", "meta": {"000_sql": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[6, 11, "001_table_1"], [44, 48, "001_table_1"], [49, 54, "002_col_6"], [24, 33, "001_table_2"]]}
{"id": 3903, "text": "Find the number of employees hired in each shop; show the shop name as well.", "meta": {"000_sql": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[29, 34, "001_table_2"], [43, 47, "001_table_1"], [58, 62, "001_table_1"], [63, 67, "002_col_2"]]}
{"id": 3904, "text": "For each shop, return the number of employees working there and the name of the shop.", "meta": {"000_sql": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[9, 13, "001_table_1"], [68, 72, "002_col_6"], [80, 84, "001_table_1"]]}
{"id": 3905, "text": "What is total bonus given in all evaluations?", "meta": {"000_sql": "SELECT sum(bonus) FROM evaluation", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[14, 19, "002_col_17"], [33, 44, "001_table_3"]]}
{"id": 3906, "text": "Find the total amount of bonus given in all the evaluations.", "meta": {"000_sql": "SELECT sum(bonus) FROM evaluation", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[25, 30, "002_col_17"], [48, 59, "001_table_3"]]}
{"id": 3907, "text": "Give me all the information about hiring.", "meta": {"000_sql": "SELECT * FROM hiring", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[34, 40, "001_table_2"]]}
{"id": 3908, "text": "What is all the information about hiring?", "meta": {"000_sql": "SELECT * FROM hiring", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[34, 40, "001_table_2"]]}
{"id": 3909, "text": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "meta": {"000_sql": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[24, 30, "001_table_1"], [64, 70, "001_table_1"], [51, 59, "002_col_9"], [92, 100, "002_col_9"]]}
{"id": 3910, "text": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "meta": {"000_sql": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[43, 48, "001_table_1"], [85, 90, "001_table_1"], [72, 80, "002_col_9"], [115, 123, "002_col_9"]]}
{"id": 3911, "text": "How many different store locations are there?", "meta": {"000_sql": "SELECT count(DISTINCT LOCATION) FROM shop", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[19, 24, "001_table_1"], [25, 34, "002_col_7"]]}
{"id": 3912, "text": "Count the number of distinct store locations.", "meta": {"000_sql": "SELECT count(DISTINCT LOCATION) FROM shop", "001_table_0": "employee", "001_table_1": "shop", "001_table_2": "hiring", "001_table_3": "evaluation", "002_col_1": "employee.Employee_ID", "002_col_2": "employee.Name", "002_col_3": "employee.Age", "002_col_4": "employee.City", "002_col_5": "shop.Shop_ID", "002_col_6": "shop.Name", "002_col_7": "shop.Location", "002_col_8": "shop.District", "002_col_9": "shop.Number_products", "002_col_10": "shop.Manager_name", "002_col_11": "hiring.Shop_ID", "002_col_12": "hiring.Employee_ID", "002_col_13": "hiring.Start_from", "002_col_14": "hiring.Is_full_time", "002_col_15": "evaluation.Employee_ID", "002_col_16": "evaluation.Year_awarded", "002_col_17": "evaluation.Bonus"}, "annotation_approver": null, "labels": [[29, 34, "001_table_1"], [35, 44, "002_col_7"]]}
{"id": 3913, "text": "How many documents do we have?", "meta": {"000_sql": "SELECT count(*) FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "001_table_2"]]}
{"id": 3914, "text": "Count the number of documents.", "meta": {"000_sql": "SELECT count(*) FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 29, "001_table_2"]]}
{"id": 3915, "text": "List document IDs, document names, and document descriptions for all documents.", "meta": {"000_sql": "SELECT document_id ,  document_name ,  document_description FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[5, 13, "001_table_2"], [14, 17, "002_col_9"], [19, 27, "001_table_2"], [28, 33, "002_col_11"], [39, 47, "001_table_2"], [48, 60, "002_col_12"], [69, 78, "001_table_2"]]}
{"id": 3916, "text": "What are the ids, names, and descriptions for all documents?", "meta": {"000_sql": "SELECT document_id ,  document_name ,  document_description FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_9"], [18, 23, "002_col_11"], [29, 41, "002_col_12"], [50, 59, "001_table_2"]]}
{"id": 3917, "text": "What is the document name and template id for document with description with the letter 'w' in it?", "meta": {"000_sql": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 20, "001_table_2"], [21, 25, "002_col_11"], [46, 54, "001_table_2"], [60, 71, "002_col_12"], [30, 41, "002_col_10"]]}
{"id": 3918, "text": "Return the names and template ids for documents that contain the letter w in their description.", "meta": {"000_sql": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 16, "002_col_11"], [38, 47, "001_table_2"], [83, 94, "002_col_12"], [21, 33, "002_col_10"]]}
{"id": 3919, "text": "What is the document id, template id and description for document named \"Robbin CV\"?", "meta": {"000_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 20, "001_table_2"], [21, 23, "002_col_9"], [25, 36, "002_col_10"], [41, 52, "002_col_12"], [57, 65, "001_table_2"], [66, 71, "002_col_11"]]}
{"id": 3920, "text": "Return the document id, template id, and description for the document with the name Robbin CV.", "meta": {"000_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 19, "001_table_2"], [20, 22, "002_col_9"], [24, 35, "002_col_10"], [41, 52, "002_col_12"], [61, 69, "001_table_2"], [79, 83, "002_col_11"]]}
{"id": 3921, "text": "How many different templates do all document use?", "meta": {"000_sql": "SELECT count(DISTINCT template_id) FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[36, 44, "001_table_2"], [19, 28, "002_col_10"]]}
{"id": 3922, "text": "Count the number of different templates used for documents.", "meta": {"000_sql": "SELECT count(DISTINCT template_id) FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[30, 39, "002_col_10"], [49, 58, "001_table_2"]]}
{"id": 3923, "text": "How many documents are using the template with type code 'PPT'?", "meta": {"000_sql": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"], [33, 41, "001_table_1"], [47, 56, "002_col_5"]]}
{"id": 3924, "text": "Count the number of documents that use the PPT template type.", "meta": {"000_sql": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 29, "001_table_2"], [47, 60, "002_col_5"]]}
{"id": 3925, "text": "Show all template ids and number of documents using each template.", "meta": {"000_sql": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [18, 21, "002_col_3"], [36, 45, "001_table_2"], [57, 65, "001_table_1"]]}
{"id": 3926, "text": "What are all different template ids used for documents, and how many times were each of them used?", "meta": {"000_sql": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[23, 31, "001_table_1"], [32, 35, "002_col_3"], [45, 54, "001_table_2"]]}
{"id": 3927, "text": "What is the id and type code for the template used by the most documents?", "meta": {"000_sql": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 14, "002_col_3"], [19, 28, "002_col_5"], [37, 45, "001_table_1"], [63, 72, "001_table_2"]]}
{"id": 3928, "text": "Return the id and type code of the template that is used for the greatest number of documents.", "meta": {"000_sql": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 13, "002_col_3"], [18, 27, "002_col_5"], [35, 43, "001_table_1"], [84, 93, "001_table_2"]]}
{"id": 3929, "text": "Show ids for all templates that are used by more than one document.", "meta": {"000_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[5, 8, "002_col_3"], [17, 26, "001_table_1"], [58, 66, "001_table_2"]]}
{"id": 3930, "text": "What are the template ids of any templates used in more than a single document?", "meta": {"000_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 21, "001_table_1"], [22, 25, "002_col_3"], [33, 42, "001_table_1"], [70, 78, "001_table_2"]]}
{"id": 3931, "text": "Show ids for all templates not used by any document.", "meta": {"000_sql": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[5, 8, "002_col_3"], [17, 26, "001_table_1"], [43, 51, "001_table_2"]]}
{"id": 3932, "text": "What are the ids for templates that are not used in any documents?", "meta": {"000_sql": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_3"], [21, 30, "001_table_1"], [56, 65, "001_table_2"]]}
{"id": 3933, "text": "How many templates do we have?", "meta": {"000_sql": "SELECT count(*) FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"]]}
{"id": 3934, "text": "Count the number of templates.", "meta": {"000_sql": "SELECT count(*) FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 29, "001_table_1"]]}
{"id": 3935, "text": "Show template ids, version numbers, and template type codes for all templates.", "meta": {"000_sql": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[5, 13, "001_table_1"], [14, 17, "002_col_3"], [19, 34, "002_col_4"], [40, 48, "001_table_1"], [49, 59, "002_col_5"], [68, 77, "001_table_1"]]}
{"id": 3936, "text": "What are the ids, version numbers, and type codes for each template?", "meta": {"000_sql": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_3"], [18, 33, "002_col_4"], [39, 49, "002_col_5"], [59, 67, "001_table_1"]]}
{"id": 3937, "text": "Show all distinct template type codes for all templates.", "meta": {"000_sql": "SELECT DISTINCT template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[46, 55, "001_table_1"], [18, 26, "001_table_1"], [27, 37, "002_col_5"]]}
{"id": 4008, "text": "Where is the youngest teacher from?", "meta": {"000_sql": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[22, 29, "001_table_1"]]}
{"id": 3938, "text": "What are the different template type codes?", "meta": {"000_sql": "SELECT DISTINCT template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[23, 31, "001_table_1"], [32, 42, "002_col_5"]]}
{"id": 3939, "text": "What are the ids of templates with template type code PP or PPT?", "meta": {"000_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_3"], [20, 29, "001_table_1"], [35, 43, "001_table_1"], [44, 53, "002_col_5"]]}
{"id": 3940, "text": "Return the ids of templates that have the code PP or PPT.", "meta": {"000_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 14, "002_col_3"], [18, 27, "001_table_1"], [42, 46, "002_col_5"]]}
{"id": 3941, "text": "How many templates have template type code CV?", "meta": {"000_sql": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "001_table_1"], [24, 32, "001_table_1"], [33, 42, "002_col_5"]]}
{"id": 3942, "text": "Count the number of templates of the type CV.", "meta": {"000_sql": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 29, "001_table_1"], [37, 41, "002_col_5"]]}
{"id": 3943, "text": "What is the version number and template type code for the template with version number later than 5?", "meta": {"000_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 26, "002_col_4"], [31, 39, "001_table_1"], [40, 49, "002_col_5"], [58, 66, "001_table_1"], [72, 86, "002_col_4"]]}
{"id": 3944, "text": "Return the version numbers and template type codes of templates with a version number greater than 5.", "meta": {"000_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 26, "002_col_4"], [31, 39, "001_table_1"], [40, 50, "002_col_5"], [54, 63, "001_table_1"], [71, 85, "002_col_4"]]}
{"id": 4510, "text": "Show ids of all students who do not have any friends.", "meta": {"000_sql": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[5, 8, "002_col_1"], [16, 24, "001_table_0"], [45, 52, "002_col_6"]]}
{"id": 3945, "text": "Show all template type codes and number of templates for each.", "meta": {"000_sql": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [18, 28, "002_col_5"], [33, 39, "002_col_4"], [43, 52, "001_table_1"]]}
{"id": 3946, "text": "What are the different template type codes, and how many templates correspond to each?", "meta": {"000_sql": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[23, 31, "001_table_1"], [32, 42, "002_col_1"], [57, 66, "001_table_1"]]}
{"id": 3947, "text": "Which template type code has most number of templates?", "meta": {"000_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[6, 14, "001_table_1"], [15, 24, "002_col_5"], [44, 53, "001_table_1"]]}
{"id": 3948, "text": "Return the type code of the template type that the most templates belong to.", "meta": {"000_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 20, "002_col_5"], [28, 36, "001_table_1"], [37, 41, "002_col_5"], [56, 65, "001_table_1"]]}
{"id": 3949, "text": "Show all template type codes with less than three templates.", "meta": {"000_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [18, 28, "002_col_5"], [50, 59, "001_table_1"]]}
{"id": 3950, "text": "What are the codes of template types that have fewer than 3 templates?", "meta": {"000_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [22, 30, "001_table_1"], [31, 36, "002_col_5"], [60, 69, "001_table_1"]]}
{"id": 3951, "text": "What the smallest version number and its template type code?", "meta": {"000_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[18, 32, "002_col_4"], [41, 49, "001_table_1"], [50, 59, "002_col_5"]]}
{"id": 3952, "text": "Return the lowest version number, along with its corresponding template type code.", "meta": {"000_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[18, 32, "002_col_4"], [63, 71, "001_table_1"], [72, 81, "002_col_5"]]}
{"id": 3953, "text": "What is the template type code of the template used by document with the name \"Data base\"?", "meta": {"000_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 20, "001_table_1"], [21, 30, "002_col_5"], [38, 46, "001_table_1"], [55, 63, "001_table_2"], [73, 77, "002_col_11"]]}
{"id": 3954, "text": "Return the template type code of the template that is used by a document named Data base.", "meta": {"000_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 19, "001_table_1"], [20, 29, "002_col_5"], [37, 45, "001_table_1"], [64, 72, "001_table_2"], [73, 78, "002_col_11"]]}
{"id": 3955, "text": "Show all document names using templates with template type code BK.", "meta": {"000_sql": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_2"], [18, 23, "002_col_11"], [30, 39, "001_table_1"], [45, 53, "001_table_1"], [54, 63, "002_col_5"]]}
{"id": 3956, "text": "What are the names of documents that use templates with the code BK?", "meta": {"000_sql": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 18, "002_col_11"], [22, 31, "001_table_2"], [41, 50, "001_table_1"], [60, 64, "002_col_5"]]}
{"id": 3957, "text": "Show all template type codes and the number of documents using each type.", "meta": {"000_sql": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [18, 28, "002_col_5"], [47, 56, "001_table_2"], [68, 72, "002_col_5"]]}
{"id": 3958, "text": "What are the different template type codes, and how many documents use each type?", "meta": {"000_sql": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[23, 31, "001_table_1"], [32, 42, "002_col_5"], [57, 66, "001_table_2"], [76, 80, "002_col_5"]]}
{"id": 3959, "text": "Which template type code is used by most number of documents?", "meta": {"000_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[6, 14, "001_table_1"], [15, 24, "002_col_5"], [51, 60, "001_table_1"]]}
{"id": 3960, "text": "Return the code of the template type that is most commonly used in documents.", "meta": {"000_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 15, "002_col_5"], [23, 31, "001_table_1"], [32, 36, "002_col_5"], [67, 76, "001_table_2"]]}
{"id": 3961, "text": "Show all template type codes that are not used by any document.", "meta": {"000_sql": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [18, 28, "002_col_5"], [54, 62, "001_table_2"]]}
{"id": 3962, "text": "What are the codes of template types that are not used for any document?", "meta": {"000_sql": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [22, 30, "001_table_1"], [31, 36, "002_col_5"], [63, 71, "001_table_2"]]}
{"id": 3963, "text": "Show all template type codes and descriptions.", "meta": {"000_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 17, "001_table_0"], [18, 28, "002_col_1"], [33, 45, "002_col_2"]]}
{"id": 3964, "text": "What are the type codes and descriptions for all template types?", "meta": {"000_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[49, 63, "001_table_0"], [13, 23, "002_col_1"], [28, 40, "002_col_2"]]}
{"id": 3965, "text": "What is the template type descriptions for template type code \"AD\".", "meta": {"000_sql": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 20, "001_table_0"], [43, 51, "001_table_0"], [21, 38, "002_col_2"], [52, 61, "002_col_1"]]}
{"id": 3966, "text": "Return the template type description of the template type with the code AD.", "meta": {"000_sql": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 19, "001_table_0"], [20, 36, "002_col_2"], [44, 57, "001_table_0"], [67, 71, "002_col_1"]]}
{"id": 3967, "text": "What is the template type code for template type description \"Book\".", "meta": {"000_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 20, "001_table_0"], [21, 30, "002_col_1"], [35, 43, "001_table_0"], [44, 60, "002_col_2"]]}
{"id": 3968, "text": "Return the type code of the template type with the description \"Book\".", "meta": {"000_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 20, "002_col_1"], [28, 41, "001_table_0"], [51, 62, "002_col_2"]]}
{"id": 3969, "text": "What are the distinct template type descriptions for the templates ever used by any document?", "meta": {"000_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[22, 30, "001_table_1"], [31, 48, "002_col_2"], [84, 92, "001_table_2"], [57, 66, "001_table_1"]]}
{"id": 3970, "text": "Return the different descriptions for templates that have been used in a document.", "meta": {"000_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[21, 33, "002_col_2"], [38, 47, "001_table_1"], [73, 81, "001_table_2"]]}
{"id": 3971, "text": "What are the template ids with template type description \"Presentation\".", "meta": {"000_sql": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 21, "001_table_1"], [22, 25, "002_col_3"], [31, 39, "001_table_0"], [40, 56, "002_col_2"]]}
{"id": 3992, "text": "Return the id of the document with the fewest paragraphs.", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 29, "002_col_15"], [46, 56, "001_table_3"]]}
{"id": 3972, "text": "Return the ids corresponding to templates with the description 'Presentation'.", "meta": {"000_sql": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[11, 14, "002_col_3"], [32, 41, "001_table_1"], [51, 62, "002_col_2"]]}
{"id": 3973, "text": "How many paragraphs in total?", "meta": {"000_sql": "SELECT count(*) FROM Paragraphs", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 19, "001_table_3"]]}
{"id": 3974, "text": "Count the number of paragraphs.", "meta": {"000_sql": "SELECT count(*) FROM Paragraphs", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 30, "001_table_3"]]}
{"id": 3975, "text": "How many paragraphs for the document with name 'Summer Show'?", "meta": {"000_sql": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 19, "001_table_3"], [28, 36, "001_table_2"], [42, 46, "002_col_11"]]}
{"id": 3976, "text": "Count the number of paragraphs in the document named 'Summer Show'.", "meta": {"000_sql": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[20, 30, "001_table_3"], [38, 46, "001_table_2"], [47, 52, "002_col_11"]]}
{"id": 3977, "text": "Show paragraph details for paragraph with text 'Korea'.", "meta": {"000_sql": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[5, 14, "001_table_3"], [27, 36, "001_table_3"], [42, 46, "002_col_16"], [15, 22, "002_col_13"]]}
{"id": 3978, "text": "What are the details for the paragraph that includes the text 'Korea'?", "meta": {"000_sql": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 20, "002_col_13"], [29, 38, "001_table_3"], [57, 61, "002_col_16"]]}
{"id": 3979, "text": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "meta": {"000_sql": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "001_table_3"], [19, 22, "002_col_14"], [27, 32, "002_col_16"], [41, 49, "001_table_2"], [55, 59, "002_col_11"]]}
{"id": 3980, "text": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "meta": {"000_sql": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_14"], [21, 26, "002_col_16"], [30, 40, "001_table_3"], [48, 56, "001_table_2"], [57, 63, "002_col_11"]]}
{"id": 3981, "text": "Show all paragraph texts for the document \"Customer reviews\".", "meta": {"000_sql": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 18, "002_col_3"], [19, 24, "002_col_16"], [33, 41, "002_col_11"]]}
{"id": 3982, "text": "What are the paragraph texts for the document with the name 'Customer reviews'?", "meta": {"000_sql": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 22, "001_table_3"], [23, 28, "002_col_16"], [37, 45, "001_table_2"], [55, 59, "002_col_11"]]}
{"id": 3983, "text": "Show all document ids and the number of paragraphs in each document. Order by document id.", "meta": {"000_sql": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 21, "002_col_15"], [40, 50, "001_table_3"], [59, 67, "002_col_15"], [78, 89, "002_col_15"]]}
{"id": 3984, "text": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "meta": {"000_sql": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[21, 33, "002_col_15"], [59, 69, "001_table_3"], [104, 106, "002_col_15"]]}
{"id": 3993, "text": "What is the document id with 1 to 2 paragraphs?", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[36, 46, "001_table_3"], [12, 23, "002_col_15"]]}
{"id": 3985, "text": "Show all document ids, names and the number of paragraphs in each document.", "meta": {"000_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 21, "002_col_15"], [23, 28, "002_col_11"], [47, 57, "001_table_3"], [66, 74, "001_table_2"]]}
{"id": 3986, "text": "What are the ids and names of each document, as well as the number of paragraphs in each?", "meta": {"000_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 16, "002_col_15"], [21, 26, "002_col_11"], [35, 43, "001_table_2"], [70, 80, "001_table_3"]]}
{"id": 3987, "text": "List all document ids with at least two paragraphs.", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[9, 21, "002_col_15"], [40, 50, "001_table_3"]]}
{"id": 3988, "text": "What are the ids of documents that have 2 or more paragraphs?", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 29, "002_col_15"], [50, 60, "001_table_3"]]}
{"id": 3989, "text": "What is the document id and name with greatest number of paragraphs?", "meta": {"000_sql": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[12, 23, "002_col_15"], [28, 32, "002_col_11"], [57, 67, "001_table_3"]]}
{"id": 3990, "text": "Return the id and name of the document with the most paragraphs.", "meta": {"000_sql": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[53, 63, "001_table_3"], [11, 13, "002_col_15"], [18, 38, "002_col_11"]]}
{"id": 3991, "text": "What is the document id with least number of paragraphs?", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[45, 55, "001_table_3"], [12, 23, "002_col_15"]]}
{"id": 3994, "text": "Give the ids of documents that have between one and two paragraphs.", "meta": {"000_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[56, 66, "001_table_3"], [9, 25, "002_col_15"]]}
{"id": 3995, "text": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "meta": {"000_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[26, 35, "001_table_3"], [36, 40, "002_col_16"], [9, 20, "002_col_15"]]}
{"id": 3996, "text": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "meta": {"000_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "001_table_0": "Ref_Template_Types", "001_table_1": "Templates", "001_table_2": "Documents", "001_table_3": "Paragraphs", "002_col_1": "Ref_Template_Types.Template_Type_Code", "002_col_2": "Ref_Template_Types.Template_Type_Description", "002_col_3": "Templates.Template_ID", "002_col_4": "Templates.Version_Number", "002_col_5": "Templates.Template_Type_Code", "002_col_6": "Templates.Date_Effective_From", "002_col_7": "Templates.Date_Effective_To", "002_col_8": "Templates.Template_Details", "002_col_9": "Documents.Document_ID", "002_col_10": "Documents.Template_ID", "002_col_11": "Documents.Document_Name", "002_col_12": "Documents.Document_Description", "002_col_13": "Documents.Other_Details", "002_col_14": "Paragraphs.Paragraph_ID", "002_col_15": "Paragraphs.Document_ID", "002_col_16": "Paragraphs.Paragraph_Text", "002_col_17": "Paragraphs.Other_Details"}, "annotation_approver": null, "labels": [[13, 29, "002_col_15"], [47, 56, "001_table_3"], [57, 61, "002_col_16"]]}
{"id": 3997, "text": "How many teachers are there?", "meta": {"000_sql": "SELECT count(*) FROM teacher", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"]]}
{"id": 3998, "text": "What is the total count of teachers?", "meta": {"000_sql": "SELECT count(*) FROM teacher", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[27, 35, "001_table_1"]]}
{"id": 3999, "text": "List the names of teachers in ascending order of age.", "meta": {"000_sql": "SELECT Name FROM teacher ORDER BY Age ASC", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[18, 26, "001_table_1"], [9, 14, "002_col_5"], [49, 52, "002_col_6"]]}
{"id": 4000, "text": "What are the names of the teachers ordered by ascending age?", "meta": {"000_sql": "SELECT Name FROM teacher ORDER BY Age ASC", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [56, 59, "002_col_6"]]}
{"id": 4001, "text": "What are the age and hometown of teachers?", "meta": {"000_sql": "SELECT Age ,  Hometown FROM teacher", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 16, "002_col_6"], [21, 29, "002_col_7"], [33, 41, "001_table_1"]]}
{"id": 4002, "text": "What is the age and hometown of every teacher?", "meta": {"000_sql": "SELECT Age ,  Hometown FROM teacher", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[12, 15, "002_col_6"], [20, 28, "002_col_7"], [38, 45, "001_table_1"]]}
{"id": 4003, "text": "List the name of teachers whose hometown is not \"Little Lever Urban District\".", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 13, "002_col_5"], [17, 25, "001_table_1"], [32, 40, "002_col_7"]]}
{"id": 4009, "text": "Show different hometown of teachers and the number of teachers from each hometown.", "meta": {"000_sql": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[15, 23, "002_col_7"], [27, 35, "001_table_1"], [54, 62, "001_table_1"], [73, 81, "002_col_7"]]}
{"id": 4010, "text": "For each hometown, how many teachers are there?", "meta": {"000_sql": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 17, "002_col_7"], [28, 36, "001_table_1"]]}
{"id": 4011, "text": "List the most common hometown of teachers.", "meta": {"000_sql": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[21, 29, "002_col_7"], [33, 41, "001_table_1"]]}
{"id": 4012, "text": "What is the most commmon hometowns for teachers?", "meta": {"000_sql": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[25, 34, "002_col_7"], [39, 47, "001_table_1"]]}
{"id": 4013, "text": "Show the hometowns shared by at least two teachers.", "meta": {"000_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 18, "002_col_7"], [42, 50, "001_table_1"]]}
{"id": 4014, "text": "What are the towns from which at least two teachers come from?", "meta": {"000_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_7"], [43, 51, "001_table_1"]]}
{"id": 4015, "text": "Show names of teachers and the courses they are arranged to teach.", "meta": {"000_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[5, 10, "002_col_5"], [14, 22, "001_table_1"], [31, 38, "002_col_3"], [48, 56, "001_table_2"]]}
{"id": 4016, "text": "What is the name of each teacher and what course they teach?", "meta": {"000_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[12, 16, "002_col_5"], [25, 32, "001_table_1"], [42, 48, "002_col_3"]]}
{"id": 4017, "text": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "meta": {"000_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[5, 10, "002_col_5"], [14, 22, "001_table_1"], [31, 38, "001_table_0"], [48, 56, "001_table_2"], [105, 114, "001_table_1"], [115, 119, "002_col_5"]]}
{"id": 4018, "text": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "meta": {"000_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [43, 50, "001_table_0"], [113, 120, "001_table_1"], [101, 105, "002_col_5"]]}
{"id": 4019, "text": "Show the name of the teacher for the math course.", "meta": {"000_sql": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 13, "002_col_5"], [21, 28, "001_table_1"], [42, 48, "002_col_3"]]}
{"id": 4511, "text": "What are the ids of high school students who do not have friends?", "meta": {"000_sql": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 16, "002_col_1"], [20, 40, "001_table_0"], [57, 64, "002_col_4"]]}
{"id": 4020, "text": "What are the names of the people who teach math courses?", "meta": {"000_sql": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 42, "001_table_1"], [48, 55, "002_col_3"]]}
{"id": 4021, "text": "Show names of teachers and the number of courses they teach.", "meta": {"000_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[5, 10, "002_col_5"], [14, 22, "001_table_1"], [41, 59, "001_table_2"]]}
{"id": 4022, "text": "What are the names of the teachers and how many courses do they teach?", "meta": {"000_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [48, 69, "001_table_2"]]}
{"id": 4023, "text": "Show names of teachers that teach at least two courses.", "meta": {"000_sql": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[5, 10, "002_col_5"], [14, 22, "002_col_5"], [47, 54, "001_table_2"]]}
{"id": 4024, "text": "What are the names of the teachers who teach at least two courses?", "meta": {"000_sql": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [58, 65, "001_table_2"]]}
{"id": 4025, "text": "List the names of teachers who have not been arranged to teach courses.", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[9, 14, "002_col_5"], [18, 26, "001_table_1"], [45, 70, "001_table_2"]]}
{"id": 4026, "text": "What are the names of the teachers whose courses have not been arranged?", "meta": {"000_sql": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "001_table_0": "course", "001_table_1": "teacher", "001_table_2": "course_arrange", "002_col_1": "course.Course_ID", "002_col_2": "course.Staring_Date", "002_col_3": "course.Course", "002_col_4": "teacher.Teacher_ID", "002_col_5": "teacher.Name", "002_col_6": "teacher.Age", "002_col_7": "teacher.Hometown", "002_col_8": "course_arrange.Course_ID", "002_col_9": "course_arrange.Teacher_ID", "002_col_10": "course_arrange.Grade"}, "annotation_approver": null, "labels": [[13, 18, "002_col_5"], [26, 34, "001_table_1"], [41, 71, "001_table_2"]]}
{"id": 4027, "text": "How many visitors below age 30 are there?", "meta": {"000_sql": "SELECT count(*) FROM visitor WHERE age  <  30", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 17, "001_table_1"], [24, 27, "002_col_8"]]}
{"id": 4028, "text": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "meta": {"000_sql": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 14, "002_col_6"], [22, 30, "001_table_1"], [37, 53, "002_col_7"]]}
{"id": 4029, "text": "What is the average age of the visitors whose membership level is not higher than 4?", "meta": {"000_sql": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[20, 23, "002_col_8"], [46, 62, "002_col_7"], [31, 39, "001_table_1"]]}
{"id": 4030, "text": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "meta": {"000_sql": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 13, "002_col_6"], [18, 34, "002_col_7"], [42, 50, "001_table_1"], [57, 73, "002_col_7"], [110, 113, "002_col_8"]]}
{"id": 4031, "text": "Find the id and name of the museum that has the most staff members?", "meta": {"000_sql": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 11, "002_col_1"], [16, 20, "002_col_2"], [28, 34, "001_table_0"], [53, 66, "002_col_3"]]}
{"id": 4032, "text": "Find the average number of staff working for the museums that were open before 2009.", "meta": {"000_sql": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[17, 32, "002_col_3"], [49, 56, "001_table_0"], [67, 71, "002_col_4"]]}
{"id": 4033, "text": "What are the opening year and staff number of the museum named Plaza Museum?", "meta": {"000_sql": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[13, 25, "002_col_4"], [30, 42, "002_col_3"], [50, 56, "001_table_0"], [57, 62, "002_col_2"]]}
{"id": 4034, "text": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "meta": {"000_sql": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 25, "001_table_0"], [65, 77, "002_col_3"], [85, 92, "001_table_0"], [93, 99, "002_col_4"]]}
{"id": 4035, "text": "find the id, name and age for visitors who visited some museums more than once.", "meta": {"000_sql": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 11, "002_col_5"], [13, 17, "002_col_6"], [22, 25, "002_col_8"], [30, 38, "001_table_1"], [43, 50, "001_table_2"]]}
{"id": 4036, "text": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "meta": {"000_sql": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[13, 15, "002_col_10"], [17, 21, "002_col_6"], [26, 42, "002_col_7"], [46, 54, "001_table_1"], [98, 106, "002_col_12"]]}
{"id": 4037, "text": "What are the id and name of the museum visited most times?", "meta": {"000_sql": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[20, 24, "002_col_2"], [13, 15, "002_col_9"], [32, 38, "001_table_0"], [39, 46, "001_table_2"]]}
{"id": 4038, "text": "What is the name of the museum that had no visitor yet?", "meta": {"000_sql": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 30, "001_table_0"], [43, 50, "001_table_2"]]}
{"id": 4039, "text": "Find the name and age of the visitor who bought the most tickets at once.", "meta": {"000_sql": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 13, "002_col_6"], [18, 21, "002_col_8"], [29, 36, "001_table_1"], [57, 64, "002_col_11"]]}
{"id": 4040, "text": "What are the average and maximum number of tickets bought in all visits?", "meta": {"000_sql": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[33, 50, "002_col_11"], [65, 71, "001_table_2"]]}
{"id": 4041, "text": "What is the total ticket expense of the visitors whose membership level is 1?", "meta": {"000_sql": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[12, 32, "002_col_12"], [40, 48, "001_table_1"], [55, 71, "002_col_7"]]}
{"id": 4042, "text": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "meta": {"000_sql": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[12, 16, "002_col_6"], [24, 31, "001_table_1"], [36, 43, "001_table_2"], [58, 64, "002_col_4"], [90, 96, "002_col_4"], [51, 57, "001_table_0"], [83, 89, "001_table_0"]]}
{"id": 4043, "text": "Find the number of visitors who did not visit any museum opened after 2010.", "meta": {"000_sql": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[19, 27, "001_table_1"], [40, 45, "001_table_2"], [57, 63, "002_col_4"], [50, 56, "001_table_0"]]}
{"id": 4044, "text": "How many museums were opened after 2013 or before 2008?", "meta": {"000_sql": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "001_table_0": "museum", "001_table_1": "visitor", "001_table_2": "visit", "002_col_1": "museum.Museum_ID", "002_col_2": "museum.Name", "002_col_3": "museum.Num_of_Staff", "002_col_4": "museum.Open_Year", "002_col_5": "visitor.ID", "002_col_6": "visitor.Name", "002_col_7": "visitor.Level_of_membership", "002_col_8": "visitor.Age", "002_col_9": "visit.Museum_ID", "002_col_10": "visit.visitor_ID", "002_col_11": "visit.Num_of_Ticket", "002_col_12": "visit.Total_spent"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"], [22, 28, "002_col_4"]]}
{"id": 4045, "text": "Find the total number of players.", "meta": {"000_sql": "SELECT count(*) FROM players", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[25, 32, "001_table_0"]]}
{"id": 4046, "text": "How many players are there?", "meta": {"000_sql": "SELECT count(*) FROM players", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"]]}
{"id": 4047, "text": "Find the total number of matches.", "meta": {"000_sql": "SELECT count(*) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[25, 32, "001_table_1"]]}
{"id": 4048, "text": "Count the number of matches.", "meta": {"000_sql": "SELECT count(*) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[20, 27, "001_table_1"]]}
{"id": 4049, "text": "List the first name and birth date of all players from the country with code USA.", "meta": {"000_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 19, "002_col_2"], [24, 34, "002_col_5"], [42, 49, "001_table_0"], [72, 76, "002_col_6"]]}
{"id": 4050, "text": "What are the first names and birth dates of players from the USA?", "meta": {"000_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 24, "002_col_2"], [29, 40, "002_col_5"], [44, 51, "001_table_0"], [52, 56, "002_col_6"]]}
{"id": 4051, "text": "Find the average age of losers and winners of all matches.", "meta": {"000_sql": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[17, 30, "002_col_9"], [35, 42, "002_col_28"], [50, 57, "001_table_1"]]}
{"id": 4112, "text": "What are the death and injury situations caused by the ship with tonnage 't'?", "meta": {"000_sql": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[13, 18, "002_col_17"], [23, 29, "002_col_18"], [55, 59, "001_table_1"], [65, 72, "002_col_10"]]}
{"id": 4052, "text": "What are the average ages of losers and winners across matches?", "meta": {"000_sql": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[21, 35, "002_col_9"], [40, 47, "002_col_28"], [55, 62, "001_table_1"]]}
{"id": 4053, "text": "Find the average rank of winners in all matches.", "meta": {"000_sql": "SELECT avg(winner_rank) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[17, 32, "002_col_35"], [40, 47, "001_table_1"]]}
{"id": 4054, "text": "What is the average rank for winners in all matches?", "meta": {"000_sql": "SELECT avg(winner_rank) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[20, 36, "002_col_35"], [44, 51, "001_table_1"]]}
{"id": 4055, "text": "Find the highest rank of losers in all matches.", "meta": {"000_sql": "SELECT min(loser_rank) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[39, 46, "001_table_1"], [17, 31, "002_col_16"]]}
{"id": 4113, "text": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "meta": {"000_sql": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[13, 17, "002_col_2"], [37, 44, "001_table_0"], [22, 29, "002_col_6"], [54, 73, "002_col_4"]]}
{"id": 4056, "text": "What is the best rank of losers across all matches?", "meta": {"000_sql": "SELECT min(loser_rank) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[17, 31, "002_col_16"], [43, 50, "001_table_1"]]}
{"id": 4057, "text": "find the number of distinct country codes of all players.", "meta": {"000_sql": "SELECT count(DISTINCT country_code) FROM players", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[28, 41, "002_col_6"], [49, 56, "001_table_0"]]}
{"id": 4058, "text": "How many distinct countries do players come from?", "meta": {"000_sql": "SELECT count(DISTINCT country_code) FROM players", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[18, 27, "002_col_6"], [31, 38, "001_table_0"]]}
{"id": 4059, "text": "Find the number of distinct name of losers.", "meta": {"000_sql": "SELECT count(DISTINCT loser_name) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[28, 42, "002_col_15"]]}
{"id": 4114, "text": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "meta": {"000_sql": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[23, 26, "002_col_1"], [31, 36, "002_col_2"], [44, 51, "001_table_0"], [57, 61, "002_col_7"], [73, 77, "002_col_11"], [78, 84, "001_table_1"]]}
{"id": 4060, "text": "How many different loser names are there?", "meta": {"000_sql": "SELECT count(DISTINCT loser_name) FROM matches", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[19, 30, "002_col_15"]]}
{"id": 4061, "text": "Find the name of tourney that has more than 10 matches.", "meta": {"000_sql": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[47, 54, "001_table_1"], [9, 24, "002_col_27"]]}
{"id": 4062, "text": "What are the names of tournaments that have more than 10 matches?", "meta": {"000_sql": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 33, "002_col_15"], [57, 64, "001_table_1"]]}
{"id": 4063, "text": "List the names of all winners who played in both 2013 and 2016.", "meta": {"000_sql": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 29, "002_col_34"]]}
{"id": 4297, "text": "Show names of people whose nationality is not \"Russia\".", "meta": {"000_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[5, 10, "002_col_9"], [14, 20, "001_table_1"], [27, 38, "002_col_8"]]}
{"id": 4064, "text": "What are the names of players who won in both 2013 and 2016?", "meta": {"000_sql": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 37, "002_col_34"]]}
{"id": 4065, "text": "List the number of all matches who played in years of 2013 or 2016.", "meta": {"000_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[23, 30, "001_table_1"], [45, 50, "002_col_38"]]}
{"id": 4066, "text": "How many matches were played in 2013 or 2016?", "meta": {"000_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"]]}
{"id": 4067, "text": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "meta": {"000_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 25, "002_col_6"], [30, 40, "002_col_2"], [48, 55, "001_table_0"], [72, 79, "002_col_27"]]}
{"id": 4068, "text": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "meta": {"000_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 24, "002_col_2"], [29, 42, "002_col_6"], [47, 54, "001_table_0"], [59, 62, "002_col_32"]]}
{"id": 4115, "text": "What are the ids and names of the battles that led to more than 10 people killed in total.", "meta": {"000_sql": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[13, 16, "002_col_1"], [21, 26, "002_col_2"], [34, 41, "001_table_0"], [74, 80, "002_col_17"]]}
{"id": 4069, "text": "Find the first name and country code of the oldest player.", "meta": {"000_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 19, "002_col_2"], [24, 36, "002_col_6"], [51, 57, "001_table_0"]]}
{"id": 4070, "text": "What is the first name and country code of the oldest player?", "meta": {"000_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 22, "002_col_2"], [27, 39, "002_col_6"], [54, 60, "001_table_0"]]}
{"id": 4071, "text": "List the first and last name of all players in the order of birth date.", "meta": {"000_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [19, 28, "002_col_3"], [36, 43, "001_table_0"], [60, 70, "002_col_5"]]}
{"id": 4072, "text": "What are the full names of all players, sorted by birth date?", "meta": {"000_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[31, 38, "001_table_0"], [50, 60, "002_col_5"]]}
{"id": 4298, "text": "What are the names of people who are not from Russia?", "meta": {"000_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 28, "001_table_1"]]}
{"id": 4073, "text": "List the first and last name of all players who are left / L hand in the order of birth date.", "meta": {"000_sql": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [19, 28, "002_col_3"], [36, 43, "001_table_0"], [61, 65, "002_col_4"], [82, 92, "002_col_5"]]}
{"id": 4074, "text": "What are the full names of all left handed players, in order of birth date?", "meta": {"000_sql": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[36, 42, "002_col_4"], [43, 50, "001_table_0"], [64, 74, "002_col_5"]]}
{"id": 4075, "text": "Find the first name and country code of the player who did the most number of tours.", "meta": {"000_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 19, "002_col_2"], [24, 36, "002_col_6"], [44, 50, "001_table_0"], [78, 83, "002_col_43"]]}
{"id": 4076, "text": "What is the first name and country code of the player with the most tours?", "meta": {"000_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 22, "002_col_2"], [27, 39, "002_col_6"], [47, 53, "001_table_0"], [68, 73, "002_col_43"]]}
{"id": 4501, "text": "What are the names of the high schoolers and how many friends does each have?", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 40, "001_table_0"], [54, 61, "001_table_1"]]}
{"id": 4077, "text": "Find the year that has the most number of matches.", "meta": {"000_sql": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 13, "002_col_38"], [42, 49, "001_table_1"]]}
{"id": 4078, "text": "Which year had the most matches?", "meta": {"000_sql": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[24, 31, "001_table_1"], [6, 10, "002_col_38"]]}
{"id": 4079, "text": "Find the name and rank points of the winner who won the most times.", "meta": {"000_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 13, "002_col_34"], [18, 43, "002_col_36"]]}
{"id": 4080, "text": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "meta": {"000_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 30, "002_col_34"], [52, 59, "001_table_1"], [74, 85, "002_col_36"]]}
{"id": 4299, "text": "List the names of people that are not poker players.", "meta": {"000_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 24, "001_table_1"], [38, 51, "001_table_0"]]}
{"id": 4081, "text": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "meta": {"000_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 27, "002_col_34"], [48, 59, "002_col_36"], [100, 107, "002_col_27"]]}
{"id": 4082, "text": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "meta": {"000_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 30, "002_col_34"], [45, 56, "002_col_36"], [97, 107, "002_col_27"]]}
{"id": 4083, "text": "find the names of loser and winner who played in the match with greatest number of minutes.", "meta": {"000_sql": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 23, "002_col_15"], [28, 34, "002_col_27"], [53, 58, "001_table_1"], [83, 90, "002_col_20"]]}
{"id": 4084, "text": "What are the names of the winner and loser who played in the longest match?", "meta": {"000_sql": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 32, "002_col_34"], [37, 42, "002_col_15"], [69, 74, "001_table_1"]]}
{"id": 4502, "text": "What is the name of the high schooler who has the greatest number of friends?", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 37, "001_table_0"], [69, 76, "002_col_4"]]}
{"id": 4085, "text": "Find the average ranking for each player and their first name.", "meta": {"000_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[17, 24, "002_col_40"], [51, 61, "002_col_2"]]}
{"id": 4086, "text": "What are the first names of all players, and their average rankings?", "meta": {"000_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 24, "002_col_2"], [32, 39, "001_table_0"], [59, 67, "002_col_40"]]}
{"id": 4087, "text": "Find the total ranking points for each player and their first name.", "meta": {"000_sql": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[15, 29, "002_col_42"], [39, 45, "001_table_0"], [56, 66, "002_col_2"]]}
{"id": 4088, "text": "What are the first names of all players, and their total ranking points?", "meta": {"000_sql": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 24, "002_col_2"], [32, 39, "001_table_0"], [57, 71, "002_col_42"]]}
{"id": 4508, "text": "How many friends does the high school student Kyle have?", "meta": {"000_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"], [26, 45, "002_col_2"]]}
{"id": 4089, "text": "find the number of players for each country.", "meta": {"000_sql": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[19, 26, "001_table_0"], [36, 43, "002_col_6"]]}
{"id": 4090, "text": "How many players are from each country?", "meta": {"000_sql": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"], [31, 38, "002_col_6"]]}
{"id": 4091, "text": "find the code of the country where has the greatest number of players.", "meta": {"000_sql": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 28, "002_col_6"], [62, 69, "001_table_0"]]}
{"id": 4092, "text": "What is the code of the country with the most players?", "meta": {"000_sql": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 31, "002_col_6"], [46, 53, "001_table_0"]]}
{"id": 4300, "text": "What are the names of people who do not play poker?", "meta": {"000_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 28, "001_table_1"], [40, 50, "001_table_0"]]}
{"id": 4093, "text": "Find the codes of countries that have more than 50 players.", "meta": {"000_sql": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 27, "002_col_6"], [51, 58, "001_table_0"]]}
{"id": 4094, "text": "What are the codes of countries with more than 50 players?", "meta": {"000_sql": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[13, 31, "002_col_6"], [50, 57, "001_table_0"]]}
{"id": 4095, "text": "Find the total number of tours for each ranking date.", "meta": {"000_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[25, 30, "002_col_43"], [40, 52, "002_col_39"]]}
{"id": 4096, "text": "How many total tours were there for each ranking date?", "meta": {"000_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[15, 20, "002_col_43"], [41, 53, "002_col_39"]]}
{"id": 4301, "text": "How many distinct nationalities are there?", "meta": {"000_sql": "SELECT count(DISTINCT Nationality) FROM people", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[18, 31, "002_col_8"]]}
{"id": 4097, "text": "Find the number of matches happened in each year.", "meta": {"000_sql": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[19, 26, "001_table_1"], [44, 48, "002_col_38"]]}
{"id": 4098, "text": "How many matches were played in each year?", "meta": {"000_sql": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"], [37, 41, "002_col_38"]]}
{"id": 4099, "text": "Find the name and rank of the 3 youngest winners across all matches.", "meta": {"000_sql": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 13, "002_col_34"], [18, 22, "002_col_35"], [60, 67, "001_table_1"]]}
{"id": 4100, "text": "What are the names and ranks of the three youngest winners across all matches?", "meta": {"000_sql": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[70, 77, "001_table_1"], [13, 18, "002_col_34"], [23, 28, "002_col_35"]]}
{"id": 4302, "text": "Count the number of different nationalities.", "meta": {"000_sql": "SELECT count(DISTINCT Nationality) FROM people", "001_table_0": "poker_player", "001_table_1": "people", "002_col_1": "poker_player.Poker_Player_ID", "002_col_2": "poker_player.People_ID", "002_col_3": "poker_player.Final_Table_Made", "002_col_4": "poker_player.Best_Finish", "002_col_5": "poker_player.Money_Rank", "002_col_6": "poker_player.Earnings", "002_col_7": "people.People_ID", "002_col_8": "people.Nationality", "002_col_9": "people.Name", "002_col_10": "people.Birth_Date", "002_col_11": "people.Height"}, "annotation_approver": null, "labels": [[30, 43, "002_col_8"]]}
{"id": 4101, "text": "How many different winners both participated in the WTA Championships and were left handed?", "meta": {"000_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[19, 26, "002_col_34"], [84, 90, "002_col_30"]]}
{"id": 4102, "text": "Find the number of left handed winners who participated in the WTA Championships.", "meta": {"000_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[24, 30, "002_col_30"], [31, 38, "002_col_34"]]}
{"id": 4103, "text": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "meta": {"000_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 19, "002_col_2"], [21, 33, "002_col_6"], [38, 48, "002_col_5"], [102, 109, "001_table_1"], [83, 94, "002_col_36"], [56, 62, "002_col_32"]]}
{"id": 4104, "text": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "meta": {"000_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[12, 22, "002_col_2"], [24, 36, "002_col_6"], [42, 52, "002_col_5"], [111, 118, "001_table_1"], [88, 99, "002_col_36"], [81, 87, "002_col_32"], [60, 66, "001_table_0"]]}
{"id": 4105, "text": "Find the number of players for each hand type.", "meta": {"000_sql": "SELECT count(*) ,  hand FROM players GROUP BY hand", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[19, 26, "001_table_0"], [36, 40, "002_col_4"]]}
{"id": 4106, "text": "How many players are there for each hand type?", "meta": {"000_sql": "SELECT count(*) ,  hand FROM players GROUP BY hand", "001_table_0": "players", "001_table_1": "matches", "001_table_2": "rankings", "002_col_1": "players.player_id", "002_col_2": "players.first_name", "002_col_3": "players.last_name", "002_col_4": "players.hand", "002_col_5": "players.birth_date", "002_col_6": "players.country_code", "002_col_7": "matches.best_of", "002_col_8": "matches.draw_size", "002_col_9": "matches.loser_age", "002_col_10": "matches.loser_entry", "002_col_11": "matches.loser_hand", "002_col_12": "matches.loser_ht", "002_col_13": "matches.loser_id", "002_col_14": "matches.loser_ioc", "002_col_15": "matches.loser_name", "002_col_16": "matches.loser_rank", "002_col_17": "matches.loser_rank_points", "002_col_18": "matches.loser_seed", "002_col_19": "matches.match_num", "002_col_20": "matches.minutes", "002_col_21": "matches.round", "002_col_22": "matches.score", "002_col_23": "matches.surface", "002_col_24": "matches.tourney_date", "002_col_25": "matches.tourney_id", "002_col_26": "matches.tourney_level", "002_col_27": "matches.tourney_name", "002_col_28": "matches.winner_age", "002_col_29": "matches.winner_entry", "002_col_30": "matches.winner_hand", "002_col_31": "matches.winner_ht", "002_col_32": "matches.winner_id", "002_col_33": "matches.winner_ioc", "002_col_34": "matches.winner_name", "002_col_35": "matches.winner_rank", "002_col_36": "matches.winner_rank_points", "002_col_37": "matches.winner_seed", "002_col_38": "matches.year", "002_col_39": "rankings.ranking_date", "002_col_40": "rankings.ranking", "002_col_41": "rankings.player_id", "002_col_42": "rankings.ranking_points", "002_col_43": "rankings.tours"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"], [36, 40, "002_col_4"]]}
{"id": 4107, "text": "How many ships ended up being 'Captured'?", "meta": {"000_sql": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[9, 14, "001_table_1"], [15, 29, "002_col_13"]]}
{"id": 4108, "text": "List the name and tonnage ordered by in descending alphaetical order for the names.", "meta": {"000_sql": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [18, 25, "002_col_10"], [77, 82, "002_col_9"]]}
{"id": 4109, "text": "List the name, date and result of each battle.", "meta": {"000_sql": "SELECT name ,  date FROM battle", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [15, 19, "002_col_3"], [39, 45, "001_table_0"]]}
{"id": 4110, "text": "What is maximum and minimum death toll caused each time?", "meta": {"000_sql": "SELECT max(killed) ,  min(killed) FROM death", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[28, 33, "002_col_17"]]}
{"id": 4111, "text": "What is the average number of injuries caused each time?", "meta": {"000_sql": "SELECT avg(injured) FROM death", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[30, 38, "002_col_18"]]}
{"id": 4116, "text": "What is the ship id and name that caused most total injuries?", "meta": {"000_sql": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[12, 16, "001_table_1"], [17, 19, "002_col_8"], [24, 28, "002_col_9"], [34, 40, "002_col_14"], [52, 60, "001_table_2"]]}
{"id": 4117, "text": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "meta": {"000_sql": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[22, 28, "001_table_0"], [29, 34, "002_col_2"], [53, 72, "002_col_4"], [87, 102, "002_col_5"]]}
{"id": 4118, "text": "How many different results are there for the battles?", "meta": {"000_sql": "SELECT count(DISTINCT RESULT) FROM battle", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[19, 26, "002_col_6"], [45, 52, "001_table_0"]]}
{"id": 4119, "text": "How many battles did not lose any ship with tonnage '225'?", "meta": {"000_sql": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"], [25, 29, "002_col_7"], [34, 38, "001_table_1"], [44, 51, "002_col_10"]]}
{"id": 4120, "text": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "meta": {"000_sql": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [18, 22, "002_col_3"], [27, 33, "001_table_0"], [43, 47, "002_col_7"], [52, 56, "001_table_1"], [57, 62, "002_col_9"], [81, 85, "001_table_1"], [86, 91, "002_col_9"]]}
{"id": 4121, "text": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "meta": {"000_sql": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[5, 10, "002_col_2"], [12, 19, "002_col_6"], [24, 44, "002_col_4"], [52, 59, "001_table_0"], [68, 73, "001_table_1"], [74, 78, "002_col_7"], [79, 81, "002_col_12"]]}
{"id": 4122, "text": "What are the notes of the death events which has substring 'East'?", "meta": {"000_sql": "SELECT note FROM death WHERE note LIKE '%East%'", "001_table_0": "battle", "001_table_1": "ship", "001_table_2": "death", "002_col_1": "battle.id", "002_col_2": "battle.name", "002_col_3": "battle.date", "002_col_4": "battle.bulgarian_commander", "002_col_5": "battle.latin_commander", "002_col_6": "battle.result", "002_col_7": "ship.lost_in_battle", "002_col_8": "ship.id", "002_col_9": "ship.name", "002_col_10": "ship.tonnage", "002_col_11": "ship.ship_type", "002_col_12": "ship.location", "002_col_13": "ship.disposition_of_ship", "002_col_14": "death.caused_by_ship_id", "002_col_15": "death.id", "002_col_16": "death.note", "002_col_17": "death.killed", "002_col_18": "death.injured"}, "annotation_approver": null, "labels": [[13, 18, "002_col_16"], [26, 31, "001_table_2"]]}
{"id": 4123, "text": "what are all the addresses including line 1 and line 2?", "meta": {"000_sql": "SELECT line_1 ,  line_2 FROM addresses", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[17, 26, "001_table_0"], [37, 43, "002_col_2"], [48, 54, "002_col_3"]]}
{"id": 4303, "text": "How many states are there?", "meta": {"000_sql": "SELECT count(*) FROM area_code_state", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[9, 15, "001_table_0"]]}
{"id": 4124, "text": "What is the first and second line for all addresses?", "meta": {"000_sql": "SELECT line_1 ,  line_2 FROM addresses", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[42, 51, "001_table_0"], [12, 17, "002_col_2"], [22, 33, "002_col_3"]]}
{"id": 4125, "text": "How many courses in total are listed?", "meta": {"000_sql": "SELECT count(*) FROM Courses", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"]]}
{"id": 4126, "text": "How many courses are there?", "meta": {"000_sql": "SELECT count(*) FROM Courses", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 16, "001_table_1"]]}
{"id": 4127, "text": "How is the math course described?", "meta": {"000_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[16, 22, "002_col_11"], [23, 32, "002_col_12"]]}
{"id": 4128, "text": "What are the descriptions for all the math courses?", "meta": {"000_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[13, 25, "002_col_12"], [43, 50, "002_col_11"]]}
{"id": 4129, "text": "What is the zip code of the address in the city Port Chelsea?", "meta": {"000_sql": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 20, "002_col_6"], [28, 35, "001_table_0"], [43, 47, "002_col_5"]]}
{"id": 4130, "text": "What is the zip code for Port Chelsea?", "meta": {"000_sql": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[12, 20, "002_col_6"]]}
{"id": 4131, "text": "Which department offers the most number of degrees? List department name and id.", "meta": {"000_sql": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[57, 67, "001_table_2"], [68, 72, "002_col_15"], [77, 79, "002_col_14"], [43, 50, "001_table_3"], [6, 16, "001_table_2"]]}
{"id": 4132, "text": "For each department id, what is the name of the department with the most number of degrees?", "meta": {"000_sql": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[9, 19, "001_table_2"], [20, 22, "002_col_14"], [36, 40, "002_col_15"], [48, 58, "001_table_2"], [83, 90, "001_table_3"]]}
{"id": 4133, "text": "How many departments offer any degree?", "meta": {"000_sql": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[31, 37, "001_table_3"], [9, 20, "002_col_19"]]}
{"id": 4134, "text": "How many different departments offer degrees?", "meta": {"000_sql": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[19, 30, "002_col_19"], [37, 44, "001_table_3"]]}
{"id": 4135, "text": "How many different degree names are offered?", "meta": {"000_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "001_table_0": "Addresses", "001_table_1": "Courses", "001_table_2": "Departments", "001_table_3": "Degree_Programs", "001_table_4": "Sections", "001_table_5": "Semesters", "001_table_6": "Students", "001_table_7": "Student_Enrolment", "001_table_8": "Student_Enrolment_Courses", "001_table_9": "Transcripts", "001_table_10": "Transcript_Contents", "002_col_1": "Addresses.address_id", "002_col_2": "Addresses.line_1", "002_col_3": "Addresses.line_2", "002_col_4": "Addresses.line_3", "002_col_5": "Addresses.city", "002_col_6": "Addresses.zip_postcode", "002_col_7": "Addresses.state_province_county", "002_col_8": "Addresses.country", "002_col_9": "Addresses.other_address_details", "002_col_10": "Courses.course_id", "002_col_11": "Courses.course_name", "002_col_12": "Courses.course_description", "002_col_13": "Courses.other_details", "002_col_14": "Departments.department_id", "002_col_15": "Departments.department_name", "002_col_16": "Departments.department_description", "002_col_17": "Departments.other_details", "002_col_18": "Degree_Programs.degree_program_id", "002_col_19": "Degree_Programs.department_id", "002_col_20": "Degree_Programs.degree_summary_name", "002_col_21": "Degree_Programs.degree_summary_description", "002_col_22": "Degree_Programs.other_details", "002_col_23": "Sections.section_id", "002_col_24": "Sections.course_id", "002_col_25": "Sections.section_name", "002_col_26": "Sections.section_description", "002_col_27": "Sections.other_details", "002_col_28": "Semesters.semester_id", "002_col_29": "Semesters.semester_name", "002_col_30": "Semesters.semester_description", "002_col_31": "Semesters.other_details", "002_col_32": "Students.student_id", "002_col_33": "Students.current_address_id", "002_col_34": "Students.permanent_address_id", "002_col_35": "Students.first_name", "002_col_36": "Students.middle_name", "002_col_37": "Students.last_name", "002_col_38": "Students.cell_mobile_number", "002_col_39": "Students.email_address", "002_col_40": "Students.ssn", "002_col_41": "Students.date_first_registered", "002_col_42": "Students.date_left", "002_col_43": "Students.other_student_details", "002_col_44": "Student_Enrolment.student_enrolment_id", "002_col_45": "Student_Enrolment.degree_program_id", "002_col_46": "Student_Enrolment.semester_id", "002_col_47": "Student_Enrolment.student_id", "002_col_48": "Student_Enrolment.other_details", "002_col_49": "Student_Enrolment_Courses.student_course_id", "002_col_50": "Student_Enrolment_Courses.course_id", "002_col_51": "Student_Enrolment_Courses.student_enrolment_id", "002_col_52": "Transcripts.transcript_id", "002_col_53": "Transcripts.transcript_date", "002_col_54": "Transcripts.other_details", "002_col_55": "Transcript_Contents.student_course_id", "002_col_56": "Transcript_Contents.transcript_id"}, "annotation_approver": null, "labels": [[19, 31, "002_col_20"]]}
{"id": 4304, "text": "List the contestant numbers and names, ordered by contestant name descending.", "meta": {"000_sql": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[9, 19, "001_table_1"], [20, 27, "002_col_3"], [32, 37, "002_col_4"], [50, 60, "001_table_1"], [61, 65, "002_col_4"]]}
{"id": 4305, "text": "List the vote ids, phone numbers and states of all votes.", "meta": {"000_sql": "SELECT vote_id ,  phone_number ,  state FROM votes", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[9, 13, "001_table_2"], [14, 17, "002_col_5"], [19, 32, "002_col_6"], [37, 43, "002_col_7"], [51, 56, "001_table_2"]]}
{"id": 4306, "text": "What are the maximum and minimum values of area codes?", "meta": {"000_sql": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[33, 39, "002_col_1"], [43, 53, "001_table_0"]]}
{"id": 4307, "text": "What is last date created of votes from the state 'CA'?", "meta": {"000_sql": "SELECT max(created) FROM votes WHERE state  =  'CA'", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[18, 25, "002_col_9"], [29, 34, "001_table_2"], [44, 49, "002_col_7"]]}
{"id": 4308, "text": "What are the names of the contestants whose names are not 'Jessie Alloway'", "meta": {"000_sql": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[13, 18, "002_col_4"], [26, 37, "001_table_1"], [44, 49, "002_col_4"]]}
{"id": 4309, "text": "What are the distinct states and create time of all votes?", "meta": {"000_sql": "SELECT DISTINCT state ,  created FROM votes", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[22, 28, "002_col_7"], [33, 39, "002_col_9"], [52, 57, "001_table_2"]]}
{"id": 4316, "text": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "meta": {"000_sql": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[9, 19, "002_col_1"], [36, 41, "001_table_2"], [29, 35, "001_table_2"], [55, 65, "002_col_4"], [92, 102, "002_col_4"]]}
{"id": 4317, "text": "Return the names the contestants whose names contain the substring 'Al'.", "meta": {"000_sql": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"", "001_table_0": "AREA_CODE_STATE", "001_table_1": "CONTESTANTS", "001_table_2": "VOTES", "002_col_1": "AREA_CODE_STATE.area_code", "002_col_2": "AREA_CODE_STATE.state", "002_col_3": "CONTESTANTS.contestant_number", "002_col_4": "CONTESTANTS.contestant_name", "002_col_5": "VOTES.vote_id", "002_col_6": "VOTES.phone_number", "002_col_7": "VOTES.state", "002_col_8": "VOTES.contestant_number", "002_col_9": "VOTES.created"}, "annotation_approver": null, "labels": [[11, 16, "002_col_4"], [21, 32, "001_table_1"], [39, 44, "002_col_4"]]}
{"id": 4318, "text": "What are the names of all the countries that became independent after 1950?", "meta": {"000_sql": "SELECT Name FROM country WHERE IndepYear  >  1950", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [30, 39, "001_table_2"], [52, 63, "002_col_13"]]}
{"id": 4319, "text": "Give the names of the nations that were founded after 1950.", "meta": {"000_sql": "SELECT Name FROM country WHERE IndepYear  >  1950", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [22, 29, "001_table_2"], [40, 47, "002_col_13"]]}
{"id": 4320, "text": "How many countries have a republic as their form of government?", "meta": {"000_sql": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 18, "001_table_2"], [44, 62, "002_col_19"]]}
{"id": 4321, "text": "How many countries have governments that are republics?", "meta": {"000_sql": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 18, "001_table_2"], [24, 35, "002_col_19"]]}
{"id": 4322, "text": "What is the total surface area of the countries in the Caribbean region?", "meta": {"000_sql": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 30, "002_col_12"], [38, 47, "001_table_2"], [65, 71, "002_col_11"]]}
{"id": 4323, "text": "How much surface area do the countires in the Carribean cover together?", "meta": {"000_sql": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 21, "002_col_12"], [29, 38, "001_table_2"], [56, 70, "002_col_11"]]}
{"id": 4324, "text": "Which continent is Anguilla in?", "meta": {"000_sql": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "002_col_10"]]}
{"id": 4325, "text": "What is the continent name which Anguilla belongs to?", "meta": {"000_sql": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 21, "002_col_10"], [22, 26, "002_col_9"]]}
{"id": 4326, "text": "Which region is the city Kabul located in?", "meta": {"000_sql": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 12, "002_col_11"], [20, 24, "002_col_2"]]}
{"id": 4327, "text": "What region is Kabul in?", "meta": {"000_sql": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[5, 11, "002_col_11"]]}
{"id": 4328, "text": "Which language is the most popular in Aruba?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 14, "002_col_24"]]}
{"id": 4503, "text": "Return the name of the high school student with the most friends.", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[11, 15, "002_col_2"], [23, 42, "001_table_0"], [57, 64, "002_col_4"]]}
{"id": 4329, "text": "What language is predominantly spoken in Aruba?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[5, 13, "002_col_24"]]}
{"id": 4330, "text": "What are the population and life expectancies in Brazil?", "meta": {"000_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 23, "002_col_14"], [28, 45, "002_col_15"]]}
{"id": 4331, "text": "Give me Brazil’s population and life expectancies.", "meta": {"000_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[17, 27, "002_col_14"], [32, 49, "002_col_15"]]}
{"id": 4332, "text": "What are the region and population of Angola?", "meta": {"000_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[24, 34, "002_col_14"], [13, 19, "002_col_11"]]}
{"id": 4333, "text": "What region does Angola belong to and what is its population?", "meta": {"000_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[5, 11, "002_col_11"], [50, 60, "002_col_14"]]}
{"id": 4334, "text": "What is the average expected life expectancy for countries in the region of Central Africa?", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[29, 44, "002_col_15"], [49, 58, "001_table_2"], [66, 72, "002_col_11"]]}
{"id": 4504, "text": "Show the names of high schoolers who have at least 3 friends.", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 32, "001_table_0"], [53, 60, "002_col_4"]]}
{"id": 4335, "text": "How long is the people’s average life expectancy in Central Africa?", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[33, 48, "002_col_15"]]}
{"id": 4336, "text": "What is the name of country that has the shortest life expectancy in Asia?", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 16, "002_col_9"], [20, 27, "001_table_2"], [50, 65, "002_col_15"]]}
{"id": 4337, "text": "Give the name of the country in Asia with the lowest life expectancy.", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [21, 28, "001_table_2"], [53, 68, "002_col_15"]]}
{"id": 4338, "text": "What is the total population and maximum GNP in Asia?", "meta": {"000_sql": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 28, "002_col_14"], [41, 44, "002_col_16"]]}
{"id": 4339, "text": "How many people live in Asia, and what is the largest GNP among them?", "meta": {"000_sql": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 20, "002_col_14"], [54, 57, "002_col_16"]]}
{"id": 4340, "text": "What is the average life expectancy in African countries that are republics?", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[20, 35, "002_col_15"], [47, 56, "001_table_2"]]}
{"id": 4505, "text": "What are the names of high schoolers who have 3 or more friends?", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 36, "001_table_0"], [56, 63, "002_col_4"]]}
{"id": 4341, "text": "Give the average life expectancy for countries in Africa which are republics?", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[17, 32, "002_col_15"], [37, 46, "001_table_2"]]}
{"id": 4342, "text": "What is the total surface area of the continents Asia and Europe?", "meta": {"000_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 30, "002_col_12"], [38, 48, "002_col_10"]]}
{"id": 4343, "text": "Give the total surface area covered by countries in Asia or Europe.", "meta": {"000_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[15, 27, "002_col_12"], [39, 48, "001_table_2"]]}
{"id": 4344, "text": "How many people live in Gelderland district?", "meta": {"000_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 20, "002_col_5"], [35, 43, "002_col_4"]]}
{"id": 4345, "text": "What is the total population of Gelderland district?", "meta": {"000_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 28, "002_col_5"], [43, 51, "002_col_4"]]}
{"id": 4346, "text": "What is the average GNP and total population in all nations whose government is US territory?", "meta": {"000_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[20, 23, "002_col_16"], [34, 44, "002_col_14"], [52, 59, "001_table_2"], [66, 76, "002_col_19"]]}
{"id": 4506, "text": "Show the names of all of the high schooler Kyle's friends.", "meta": {"000_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [29, 42, "002_col_2"], [50, 57, "002_col_5"]]}
{"id": 4347, "text": "Give the mean GNP and total population of nations which are considered US territory.", "meta": {"000_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[14, 17, "002_col_16"], [28, 38, "002_col_14"], [42, 49, "001_table_2"]]}
{"id": 4348, "text": "How many unique languages are spoken in the world?", "meta": {"000_sql": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[16, 25, "002_col_24"], [30, 49, "001_table_3"]]}
{"id": 4349, "text": "What is the number of distinct languages used around the world?", "meta": {"000_sql": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[31, 40, "002_col_24"], [41, 62, "001_table_3"]]}
{"id": 4350, "text": "How many type of governments are in Africa?", "meta": {"000_sql": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 28, "002_col_19"]]}
{"id": 4351, "text": "How many different forms of governments are there in Africa?", "meta": {"000_sql": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[19, 39, "002_col_19"]]}
{"id": 4352, "text": "What is the total number of languages used in Aruba?", "meta": {"000_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[28, 37, "002_col_24"]]}
{"id": 4507, "text": "Return the names of friends of the high school student Kyle.", "meta": {"000_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[11, 16, "002_col_2"], [20, 27, "001_table_1"], [35, 54, "002_col_2"]]}
{"id": 4353, "text": "How many languages are spoken in Aruba?", "meta": {"000_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 18, "002_col_19"]]}
{"id": 4354, "text": "How many official languages does Afghanistan have?", "meta": {"000_sql": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 27, "002_col_19"], [9, 17, "002_col_25"]]}
{"id": 4355, "text": "How many official languages are spoken in Afghanistan?", "meta": {"000_sql": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 17, "002_col_25"], [18, 27, "002_col_24"]]}
{"id": 4356, "text": "What is name of the country that speaks the largest number of languages?", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[8, 12, "002_col_9"], [20, 27, "001_table_2"], [62, 71, "001_table_3"]]}
{"id": 4357, "text": "Give the name of the nation that uses the greatest amount of languages.", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [21, 27, "001_table_2"], [61, 70, "001_table_3"]]}
{"id": 4358, "text": "Which continent has the most diverse languages?", "meta": {"000_sql": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "002_col_10"], [37, 46, "001_table_3"]]}
{"id": 4359, "text": "Which continent speaks the most languages?", "meta": {"000_sql": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "002_col_10"], [32, 41, "001_table_3"], [16, 22, "001_table_3"]]}
{"id": 4360, "text": "How many countries speak both English and Dutch?", "meta": {"000_sql": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 18, "002_col_9"], [19, 24, "002_col_24"]]}
{"id": 4361, "text": "What is the number of nations that use English and Dutch?", "meta": {"000_sql": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[22, 29, "002_col_9"], [35, 38, "002_col_24"]]}
{"id": 4362, "text": "What are the names of nations speak both English and French?", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 29, "001_table_2"], [30, 35, "002_col_24"]]}
{"id": 4363, "text": "Give the names of nations that speak both English and French.", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 25, "001_table_2"], [31, 36, "002_col_24"]]}
{"id": 4441, "text": "What are the names of conductors, ordered by age?", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Age ASC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [45, 48, "002_col_3"]]}
{"id": 4364, "text": "What are the names of nations where both English and French are official languages?", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [22, 29, "001_table_2"], [73, 82, "002_col_24"], [64, 72, "002_col_25"]]}
{"id": 4365, "text": "Give the names of countries with English and French as official languages.", "meta": {"000_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 27, "001_table_2"], [64, 73, "002_col_24"], [55, 63, "002_col_25"]]}
{"id": 4366, "text": "What is the number of distinct continents where Chinese is spoken?", "meta": {"000_sql": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[31, 41, "002_col_10"], [59, 65, "002_col_24"]]}
{"id": 4367, "text": "How many continents speak Chinese?", "meta": {"000_sql": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 19, "002_col_10"], [20, 25, "002_col_24"]]}
{"id": 4368, "text": "What are the regions that use English or Dutch?", "meta": {"000_sql": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 20, "002_col_11"], [26, 29, "002_col_24"]]}
{"id": 4397, "text": "Give the country codes for countries in which people speak langauges that are not English.", "meta": {"000_sql": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 16, "001_table_3"], [17, 22, "002_col_23"], [27, 36, "001_table_3"], [59, 68, "002_col_24"]]}
{"id": 4369, "text": "Which regions speak Dutch or English?", "meta": {"000_sql": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 13, "002_col_11"], [14, 19, "002_col_24"]]}
{"id": 4370, "text": "What are the countries where either English or Dutch is the official language?", "meta": {"000_sql": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[60, 68, "002_col_25"], [69, 77, "002_col_24"], [13, 22, "001_table_2"]]}
{"id": 4371, "text": "Which countries have either English or Dutch as an official language?", "meta": {"000_sql": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "001_table_2"], [51, 59, "002_col_25"], [60, 68, "002_col_24"]]}
{"id": 4372, "text": "Which language is the most popular on the Asian continent?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 14, "002_col_24"], [48, 57, "002_col_10"]]}
{"id": 4373, "text": "What is the language that is used by the largest number of Asian nations?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 20, "002_col_24"], [65, 72, "002_col_10"]]}
{"id": 4421, "text": "Return the names of the 3 countries with the fewest people.", "meta": {"000_sql": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_9"], [26, 35, "001_table_2"], [52, 58, "002_col_14"]]}
{"id": 4374, "text": "Which languages are spoken by only one country in republic governments?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "002_col_24"], [39, 46, "001_table_2"], [59, 70, "002_col_19"]]}
{"id": 4375, "text": "What languages are only used by a single country with a republic government?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[5, 14, "002_col_24"], [65, 75, "002_col_19"], [41, 48, "001_table_2"]]}
{"id": 4376, "text": "Find the city with the largest population that uses English.", "meta": {"000_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[31, 41, "002_col_5"], [9, 13, "002_col_2"], [47, 51, "002_col_24"]]}
{"id": 4377, "text": "What is the most populace city that speaks English?", "meta": {"000_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[17, 25, "002_col_14"], [26, 30, "002_col_2"], [36, 42, "002_col_24"]]}
{"id": 4378, "text": "Find the name, population and expected life length of asian country with the largest area?", "meta": {"000_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [15, 25, "002_col_14"], [30, 50, "002_col_15"], [60, 67, "002_col_10"], [85, 89, "002_col_12"]]}
{"id": 4379, "text": "What are the name, population, and life expectancy of the largest Asian country by land?", "meta": {"000_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 17, "002_col_9"], [19, 29, "002_col_14"], [35, 50, "002_col_15"], [72, 79, "002_col_10"], [83, 87, "002_col_12"]]}
{"id": 4380, "text": "What is average life expectancy in the countries where English is not the official language?", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[16, 31, "002_col_15"], [39, 48, "001_table_2"], [74, 82, "002_col_25"], [83, 91, "002_col_24"]]}
{"id": 4381, "text": "Give the mean life expectancy of countries in which English is not the official language.", "meta": {"000_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[14, 29, "002_col_15"], [33, 42, "001_table_2"], [71, 79, "002_col_25"], [80, 88, "002_col_24"]]}
{"id": 4382, "text": "What is the total number of people living in the nations that do not use English?", "meta": {"000_sql": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[28, 41, "002_col_14"], [49, 56, "001_table_2"], [69, 72, "002_col_24"]]}
{"id": 4383, "text": "How many people live in countries that do not speak English?", "meta": {"000_sql": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 20, "002_col_14"], [24, 33, "001_table_2"], [46, 51, "002_col_24"]]}
{"id": 4384, "text": "What is the official language spoken in the country whose head of state is Beatrix?", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 20, "002_col_25"], [44, 51, "001_table_2"], [58, 71, "002_col_20"], [21, 29, "002_col_24"]]}
{"id": 4422, "text": "how many countries are in Asia?", "meta": {"000_sql": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 18, "002_col_10"]]}
{"id": 4385, "text": "What is the official language used in the country the name of whose head of state is Beatrix.", "meta": {"000_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 20, "002_col_25"], [21, 29, "002_col_24"], [42, 49, "001_table_2"], [68, 81, "002_col_20"]]}
{"id": 4386, "text": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "meta": {"000_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[35, 43, "002_col_25"], [44, 53, "002_col_24"], [68, 77, "001_table_2"], [87, 94, "002_col_13"]]}
{"id": 4387, "text": "For the countries founded before 1930, what is the total number of distinct official languages?", "meta": {"000_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[8, 17, "002_col_8"], [18, 25, "002_col_13"], [76, 84, "002_col_25"], [85, 94, "002_col_24"]]}
{"id": 4388, "text": "What are the countries that have greater surface area than any country in Europe?", "meta": {"000_sql": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[41, 53, "002_col_12"], [63, 70, "002_col_10"], [13, 22, "002_col_9"]]}
{"id": 4389, "text": "Which countries have greater area than that of any country in Europe?", "meta": {"000_sql": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 15, "002_col_9"], [29, 33, "002_col_12"], [51, 58, "002_col_10"]]}
{"id": 4390, "text": "What are the African countries that have a  population less than any country in Asia?", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[44, 54, "002_col_14"], [69, 76, "002_col_10"], [21, 30, "002_col_9"]]}
{"id": 4391, "text": "Which African countries have a smaller population than that of any country in Asia?", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[14, 23, "002_col_9"], [39, 49, "002_col_14"], [67, 74, "002_col_10"]]}
{"id": 4392, "text": "Which Asian countries have a population that is larger than any country in Africa?", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 21, "002_col_9"], [29, 39, "002_col_14"], [64, 71, "002_col_10"]]}
{"id": 4393, "text": "What are the Asian countries which have a population larger than that of any country in Africa?", "meta": {"000_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[19, 28, "002_col_9"], [42, 52, "002_col_14"], [77, 84, "002_col_10"]]}
{"id": 4394, "text": "What are the country codes for countries that do not speak English?", "meta": {"000_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[21, 26, "002_col_8"], [53, 58, "002_col_24"], [13, 20, "001_table_3"], [31, 40, "001_table_3"]]}
{"id": 4395, "text": "Return the country codes for countries that do not speak English.", "meta": {"000_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 18, "001_table_3"], [29, 38, "001_table_3"], [19, 24, "002_col_3"], [51, 56, "002_col_24"]]}
{"id": 4396, "text": "What are the country codes of countries where people use languages other than English?", "meta": {"000_sql": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 20, "001_table_3"], [21, 26, "002_col_23"], [30, 39, "001_table_3"], [57, 66, "002_col_24"]]}
{"id": 4398, "text": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "meta": {"000_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_8"], [26, 35, "001_table_2"], [48, 53, "002_col_24"], [72, 88, "002_col_19"]]}
{"id": 4399, "text": "Return the codes of countries that do not speak English and do not have Republics for governments.", "meta": {"000_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_8"], [20, 29, "001_table_2"], [42, 47, "002_col_24"], [86, 97, "002_col_19"]]}
{"id": 4400, "text": "Which cities are in European countries where English is not the official language?", "meta": {"000_sql": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 12, "002_col_2"], [29, 38, "002_col_10"], [64, 72, "002_col_25"], [73, 81, "002_col_24"]]}
{"id": 4401, "text": "What are the names of cities in Europe for which English is not the official language?", "meta": {"000_sql": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 28, "001_table_0"], [68, 76, "002_col_25"], [77, 85, "002_col_24"]]}
{"id": 4402, "text": "Whic`h unique cities are in  Asian countries where Chinese is the official language?", "meta": {"000_sql": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[14, 20, "002_col_2"], [35, 44, "002_col_10"], [66, 74, "002_col_25"], [75, 83, "002_col_24"]]}
{"id": 4479, "text": "Count the number of high schoolers.", "meta": {"000_sql": "SELECT count(*) FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[20, 34, "001_table_0"]]}
{"id": 4480, "text": "Show the names and grades of each high schooler.", "meta": {"000_sql": "SELECT name ,  grade FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [19, 25, "002_col_3"], [34, 47, "001_table_0"]]}
{"id": 4403, "text": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "meta": {"000_sql": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[21, 26, "002_col_2"], [30, 36, "001_table_0"], [83, 91, "002_col_25"], [92, 100, "002_col_24"]]}
{"id": 4404, "text": "What are the name, independence year, and surface area of the country with the smallest population?", "meta": {"000_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 17, "002_col_9"], [19, 36, "002_col_13"], [42, 54, "002_col_12"], [62, 69, "001_table_2"], [88, 98, "002_col_5"]]}
{"id": 4405, "text": "Give the name, year of independence, and surface area of the country that has the lowest population.", "meta": {"000_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [15, 35, "002_col_13"], [41, 53, "002_col_12"], [61, 68, "001_table_2"], [89, 99, "002_col_14"]]}
{"id": 4406, "text": "What are the population, name and leader of the country with the largest area?", "meta": {"000_sql": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 23, "002_col_14"], [25, 29, "002_col_9"], [34, 55, "002_col_20"], [73, 77, "002_col_12"]]}
{"id": 4407, "text": "Give the name, population, and head of state for the country that has the largest area.", "meta": {"000_sql": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 13, "002_col_9"], [15, 25, "002_col_14"], [31, 44, "002_col_20"], [53, 60, "001_table_2"], [82, 86, "002_col_12"]]}
{"id": 4408, "text": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "meta": {"000_sql": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 18, "001_table_2"], [19, 23, "002_col_9"], [43, 52, "002_col_24"], [69, 76, "002_col_8"], [100, 109, "002_col_24"]]}
{"id": 4409, "text": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "meta": {"000_sql": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [55, 64, "002_col_24"], [86, 95, "002_col_24"], [22, 31, "001_table_2"]]}
{"id": 4410, "text": "Find the number of cities in each district whose population is greater than the average population of cities?", "meta": {"000_sql": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[19, 25, "001_table_0"], [49, 59, "002_col_5"], [88, 98, "002_col_5"], [102, 108, "001_table_0"]]}
{"id": 4411, "text": "How many cities in each district have a population that is above the average population across all cities?", "meta": {"000_sql": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 15, "001_table_0"], [40, 50, "002_col_5"], [77, 87, "002_col_5"], [99, 105, "001_table_0"]]}
{"id": 4412, "text": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "meta": {"000_sql": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 29, "002_col_19"], [40, 50, "002_col_14"], [60, 75, "002_col_19"], [90, 105, "002_col_15"]]}
{"id": 4413, "text": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "meta": {"000_sql": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[23, 39, "002_col_19"], [62, 72, "002_col_14"], [85, 101, "002_col_19"], [123, 138, "002_col_15"]]}
{"id": 4414, "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "meta": {"000_sql": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[17, 32, "002_col_15"], [43, 53, "002_col_14"], [63, 72, "002_col_10"], [91, 106, "002_col_15"]]}
{"id": 4415, "text": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "meta": {"000_sql": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[23, 33, "002_col_10"], [48, 57, "002_col_14"], [70, 85, "002_col_15"], [113, 123, "002_col_10"], [145, 160, "002_col_15"]]}
{"id": 4416, "text": "What are the names and areas of countries with the top 5 largest area?", "meta": {"000_sql": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [23, 28, "002_col_12"], [32, 41, "001_table_2"], [65, 69, "002_col_12"]]}
{"id": 4417, "text": "Return the names and surface areas of the 5 largest countries.", "meta": {"000_sql": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_9"], [21, 34, "002_col_12"], [52, 61, "001_table_2"]]}
{"id": 4418, "text": "What are names of countries with the top 3 largest population?", "meta": {"000_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 27, "001_table_2"], [51, 61, "002_col_14"]]}
{"id": 4419, "text": "Return the names of the 3 most populated countries.", "meta": {"000_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_9"], [31, 40, "002_col_14"], [41, 50, "001_table_2"]]}
{"id": 4420, "text": "What are the names of the nations with the 3 lowest populations?", "meta": {"000_sql": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [26, 33, "001_table_2"], [52, 63, "002_col_14"]]}
{"id": 4481, "text": "What are the names and grades for each high schooler?", "meta": {"000_sql": "SELECT name ,  grade FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [23, 29, "002_col_3"], [39, 52, "001_table_0"]]}
{"id": 4423, "text": "Count the number of countries in Asia.", "meta": {"000_sql": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[20, 29, "002_col_10"]]}
{"id": 4424, "text": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "meta": {"000_sql": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_9"], [26, 35, "001_table_2"], [52, 61, "002_col_10"], [83, 93, "002_col_14"]]}
{"id": 4425, "text": "Give the names of countries that are in Europe and have a population equal to 80000.", "meta": {"000_sql": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 14, "002_col_9"], [18, 27, "001_table_2"], [58, 68, "002_col_14"]]}
{"id": 4426, "text": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000？", "meta": {"000_sql": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[18, 28, "002_col_14"], [41, 45, "002_col_12"], [49, 58, "001_table_2"], [66, 75, "002_col_10"], [99, 103, "002_col_12"]]}
{"id": 4427, "text": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000.", "meta": {"000_sql": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[15, 25, "002_col_14"], [38, 50, "002_col_12"], [68, 77, "001_table_2"], [106, 118, "002_col_12"]]}
{"id": 4428, "text": "What are the cities whose population is between 160000 and 900000?", "meta": {"000_sql": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 19, "002_col_2"], [26, 36, "002_col_5"]]}
{"id": 4429, "text": "Return the names of cities that have a population between 160000 and 900000.", "meta": {"000_sql": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_2"], [20, 26, "001_table_0"], [39, 49, "002_col_5"]]}
{"id": 4430, "text": "Which language is spoken by the largest number of countries?", "meta": {"000_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[6, 14, "002_col_24"], [50, 59, "001_table_3"]]}
{"id": 4431, "text": "Give the language that is spoken in the most countries.", "meta": {"000_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[9, 17, "002_col_24"], [45, 54, "001_table_3"]]}
{"id": 4432, "text": "What is the language spoken by the largest percentage of people in each country?", "meta": {"000_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[12, 20, "002_col_24"], [72, 79, "002_col_23"], [43, 53, "002_col_26"]]}
{"id": 4433, "text": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "meta": {"000_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 26, "002_col_23"], [72, 81, "002_col_24"], [105, 115, "002_col_26"], [44, 53, "002_col_23"]]}
{"id": 4434, "text": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "meta": {"000_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[55, 61, "002_col_24"], [77, 87, "002_col_26"], [28, 37, "002_col_23"]]}
{"id": 4482, "text": "Show all the grades of the high schoolers.", "meta": {"000_sql": "SELECT grade FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 19, "002_col_3"], [27, 41, "001_table_0"]]}
{"id": 4435, "text": "Count the number of countries for which Spanish is the predominantly spoken language.", "meta": {"000_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[20, 29, "002_col_23"], [76, 84, "002_col_24"]]}
{"id": 4436, "text": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "meta": {"000_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[13, 18, "002_col_23"], [22, 31, "001_table_3"], [71, 81, "002_col_26"], [49, 55, "002_col_24"]]}
{"id": 4437, "text": "Return the codes of countries for which Spanish is the predominantly spoken language.", "meta": {"000_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "001_table_0": "city", "001_table_1": "sqlite_sequence", "001_table_2": "country", "001_table_3": "countrylanguage", "002_col_1": "city.ID", "002_col_2": "city.Name", "002_col_3": "city.CountryCode", "002_col_4": "city.District", "002_col_5": "city.Population", "002_col_6": "sqlite_sequence.name", "002_col_7": "sqlite_sequence.seq", "002_col_8": "country.Code", "002_col_9": "country.Name", "002_col_10": "country.Continent", "002_col_11": "country.Region", "002_col_12": "country.SurfaceArea", "002_col_13": "country.IndepYear", "002_col_14": "country.Population", "002_col_15": "country.LifeExpectancy", "002_col_16": "country.GNP", "002_col_17": "country.GNPOld", "002_col_18": "country.LocalName", "002_col_19": "country.GovernmentForm", "002_col_20": "country.HeadOfState", "002_col_21": "country.Capital", "002_col_22": "country.Code2", "002_col_23": "countrylanguage.CountryCode", "002_col_24": "countrylanguage.Language", "002_col_25": "countrylanguage.IsOfficial", "002_col_26": "countrylanguage.Percentage"}, "annotation_approver": null, "labels": [[11, 16, "002_col_23"], [20, 29, "001_table_3"], [76, 84, "002_col_24"]]}
{"id": 4438, "text": "How many conductors are there?", "meta": {"000_sql": "SELECT count(*) FROM conductor", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 19, "001_table_0"]]}
{"id": 4439, "text": "Count the number of conductors.", "meta": {"000_sql": "SELECT count(*) FROM conductor", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[20, 30, "001_table_0"]]}
{"id": 4440, "text": "List the names of conductors in ascending order of age.", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Age ASC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[18, 28, "001_table_0"], [9, 14, "002_col_2"], [51, 54, "002_col_3"]]}
{"id": 4483, "text": "What is the grade of each high schooler?", "meta": {"000_sql": "SELECT grade FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[12, 17, "002_col_3"], [26, 39, "001_table_0"]]}
{"id": 4442, "text": "What are the names of conductors whose nationalities are not \"USA\"?", "meta": {"000_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [39, 52, "002_col_4"]]}
{"id": 4443, "text": "Return the names of conductors that do not have the nationality \"USA\".", "meta": {"000_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[11, 16, "002_col_2"], [20, 30, "001_table_0"], [52, 63, "002_col_4"]]}
{"id": 4444, "text": "What are the record companies of orchestras in descending order of years in which they were founded?", "meta": {"000_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 29, "002_col_9"], [33, 43, "001_table_1"], [67, 99, "002_col_10"]]}
{"id": 4445, "text": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "meta": {"000_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[11, 27, "002_col_9"], [31, 41, "001_table_1"], [68, 100, "002_col_10"]]}
{"id": 4446, "text": "What is the average attendance of shows?", "meta": {"000_sql": "SELECT avg(Attendance) FROM SHOW", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[34, 39, "001_table_3"], [20, 30, "002_col_23"]]}
{"id": 4447, "text": "Return the average attendance across all shows.", "meta": {"000_sql": "SELECT avg(Attendance) FROM SHOW", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[19, 29, "002_col_23"], [41, 46, "001_table_3"]]}
{"id": 4484, "text": "What grade is Kyle in?", "meta": {"000_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[5, 10, "002_col_3"]]}
{"id": 4485, "text": "Return the grade for the high schooler named Kyle.", "meta": {"000_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[11, 16, "002_col_3"], [25, 38, "001_table_0"], [39, 44, "002_col_2"]]}
{"id": 4448, "text": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "meta": {"000_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[33, 38, "002_col_18"], [42, 54, "001_table_2"], [61, 65, "002_col_14"]]}
{"id": 4449, "text": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "meta": {"000_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[31, 37, "002_col_18"], [42, 54, "001_table_2"], [76, 80, "002_col_14"]]}
{"id": 4450, "text": "How many different nationalities do conductors have?", "meta": {"000_sql": "SELECT count(DISTINCT Nationality) FROM conductor", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[19, 32, "002_col_4"], [36, 46, "001_table_0"]]}
{"id": 4451, "text": "Count the number of different nationalities of conductors.", "meta": {"000_sql": "SELECT count(DISTINCT Nationality) FROM conductor", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[47, 57, "001_table_0"], [30, 43, "002_col_4"]]}
{"id": 4452, "text": "List names of conductors in descending order of years of work.", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[14, 24, "001_table_0"], [5, 10, "002_col_2"], [48, 61, "002_col_5"]]}
{"id": 4453, "text": "What are the names of conductors, sorted descending by the number of years they have worked?", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [69, 91, "002_col_5"]]}
{"id": 4486, "text": "Show the names of all high schoolers in grade 10.", "meta": {"000_sql": "SELECT name FROM Highschooler WHERE grade  =  10", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [22, 36, "001_table_0"], [40, 45, "002_col_3"]]}
{"id": 4454, "text": "List the name of the conductor with the most years of work.", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [21, 30, "001_table_0"], [45, 58, "002_col_5"]]}
{"id": 4455, "text": "What is the name of the conductor who has worked the greatest number of years?", "meta": {"000_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 33, "001_table_0"], [72, 77, "002_col_5"]]}
{"id": 4456, "text": "Show the names of conductors and the orchestras they have conducted.", "meta": {"000_sql": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 28, "001_table_0"], [37, 47, "002_col_7"]]}
{"id": 4457, "text": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "meta": {"000_sql": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [61, 71, "002_col_7"]]}
{"id": 4458, "text": "Show the names of conductors that have conducted more than one orchestras.", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 28, "001_table_0"], [63, 73, "002_col_7"]]}
{"id": 4459, "text": "What are the names of conductors who have conducted at more than one orchestra?", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [69, 78, "002_col_7"]]}
{"id": 4487, "text": "What are the names of all high schoolers in grade 10?", "meta": {"000_sql": "SELECT name FROM Highschooler WHERE grade  =  10", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 40, "001_table_0"], [44, 49, "002_col_3"]]}
{"id": 4460, "text": "Show the name of the conductor that has conducted the most number of orchestras.", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [21, 30, "001_table_0"], [69, 79, "002_col_7"]]}
{"id": 4461, "text": "What is the name of the conductor who has conducted the most orchestras?", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 33, "001_table_0"], [61, 71, "002_col_7"]]}
{"id": 4462, "text": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[16, 20, "002_col_2"], [28, 37, "001_table_0"], [57, 67, "002_col_7"]]}
{"id": 4463, "text": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "meta": {"000_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 32, "001_table_0"], [52, 62, "002_col_7"], [81, 85, "002_col_10"]]}
{"id": 4464, "text": "Please show the different record companies and the corresponding number of orchestras.", "meta": {"000_sql": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[26, 42, "002_col_9"], [75, 85, "001_table_1"]]}
{"id": 4465, "text": "How many orchestras does each record company manage?", "meta": {"000_sql": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 19, "001_table_1"], [30, 44, "002_col_9"]]}
{"id": 4488, "text": "Show the ID of the high schooler named Kyle.", "meta": {"000_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 11, "002_col_1"], [19, 32, "001_table_0"], [33, 38, "002_col_2"]]}
{"id": 4466, "text": "Please show the record formats of orchestras in ascending order of count.", "meta": {"000_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[16, 30, "002_col_11"], [34, 44, "001_table_1"]]}
{"id": 4467, "text": "What are the major record formats of orchestras, sorted by their frequency?", "meta": {"000_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 33, "002_col_11"], [37, 47, "001_table_1"]]}
{"id": 4468, "text": "List the record company shared by the most number of orchestras.", "meta": {"000_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 23, "002_col_9"], [53, 63, "001_table_1"]]}
{"id": 4469, "text": "What is the record company used by the greatest number of orchestras?", "meta": {"000_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[12, 26, "002_col_9"], [58, 68, "001_table_1"]]}
{"id": 4470, "text": "List the names of orchestras that have no performance.", "meta": {"000_sql": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[18, 28, "002_col_7"], [42, 53, "002_col_13"]]}
{"id": 4471, "text": "What are the orchestras that do not have any performances?", "meta": {"000_sql": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 23, "002_col_7"], [45, 57, "002_col_13"]]}
{"id": 4489, "text": "What is Kyle's id?", "meta": {"000_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[15, 17, "002_col_1"]]}
{"id": 4472, "text": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "meta": {"000_sql": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 25, "002_col_9"], [36, 46, "001_table_1"], [47, 54, "002_col_10"]]}
{"id": 4473, "text": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "meta": {"000_sql": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[13, 29, "002_col_9"], [52, 62, "001_table_1"], [63, 70, "002_col_10"], [93, 100, "002_col_10"]]}
{"id": 4474, "text": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "meta": {"000_sql": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[19, 29, "001_table_1"], [36, 49, "002_col_11"]]}
{"id": 4475, "text": "Count the number of orchestras that have CD or DVD as their record format.", "meta": {"000_sql": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[60, 73, "002_col_11"], [20, 30, "001_table_1"]]}
{"id": 4476, "text": "Show the years in which orchestras that have given more than one performance are founded.", "meta": {"000_sql": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 14, "002_col_10"], [65, 76, "002_col_13"], [81, 88, "002_col_10"], [24, 34, "001_table_1"]]}
{"id": 4477, "text": "What are years of founding for orchestras that have had more than a single performance?", "meta": {"000_sql": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "001_table_0": "conductor", "001_table_1": "orchestra", "001_table_2": "performance", "001_table_3": "show", "002_col_1": "conductor.Conductor_ID", "002_col_2": "conductor.Name", "002_col_3": "conductor.Age", "002_col_4": "conductor.Nationality", "002_col_5": "conductor.Year_of_Work", "002_col_6": "orchestra.Orchestra_ID", "002_col_7": "orchestra.Orchestra", "002_col_8": "orchestra.Conductor_ID", "002_col_9": "orchestra.Record_Company", "002_col_10": "orchestra.Year_of_Founded", "002_col_11": "orchestra.Major_Record_Format", "002_col_12": "performance.Performance_ID", "002_col_13": "performance.Orchestra_ID", "002_col_14": "performance.Type", "002_col_15": "performance.Date", "002_col_16": "performance.Official_ratings_(millions)", "002_col_17": "performance.Weekly_rank", "002_col_18": "performance.Share", "002_col_19": "show.Show_ID", "002_col_20": "show.Performance_ID", "002_col_21": "show.If_first_show", "002_col_22": "show.Result", "002_col_23": "show.Attendance"}, "annotation_approver": null, "labels": [[9, 26, "002_col_10"], [31, 41, "001_table_1"], [75, 86, "002_col_12"]]}
{"id": 4478, "text": "How many high schoolers are there?", "meta": {"000_sql": "SELECT count(*) FROM Highschooler", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 23, "001_table_0"]]}
{"id": 4512, "text": "Show names of all high school students who do not have any friends.", "meta": {"000_sql": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[5, 10, "002_col_2"], [18, 38, "001_table_0"], [59, 66, "002_col_6"]]}
{"id": 4513, "text": "What are the names of students who have no friends?", "meta": {"000_sql": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 30, "001_table_0"], [43, 50, "002_col_4"]]}
{"id": 4514, "text": "Show the ids of high schoolers who have friends and are also liked by someone else.", "meta": {"000_sql": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 12, "002_col_4"], [40, 47, "001_table_1"], [61, 66, "002_col_7"]]}
{"id": 4515, "text": "What are the ids of students who both have friends and are liked?", "meta": {"000_sql": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 16, "002_col_4"], [43, 50, "001_table_1"], [59, 64, "002_col_7"]]}
{"id": 4516, "text": "Show name of all students who have some friends and also are liked by someone else.", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[5, 9, "002_col_2"], [17, 25, "001_table_0"], [61, 66, "002_col_7"], [40, 47, "002_col_4"]]}
{"id": 4517, "text": "What are the names of high schoolers who both have friends and are liked?", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 36, "001_table_0"], [67, 72, "002_col_7"], [51, 58, "002_col_4"]]}
{"id": 4518, "text": "Count the number of likes for each student id.", "meta": {"000_sql": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[20, 25, "001_table_2"], [35, 45, "002_col_6"]]}
{"id": 4519, "text": "How many likes correspond to each student id?", "meta": {"000_sql": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "001_table_2"], [34, 44, "002_col_6"]]}
{"id": 4520, "text": "Show the names of high schoolers who have likes, and numbers of likes for each.", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 32, "001_table_0"], [42, 47, "001_table_2"], [64, 69, "001_table_2"]]}
{"id": 4521, "text": "What are the names of high schoolers who have likes, and how many likes does each have?", "meta": {"000_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 36, "001_table_0"], [46, 51, "001_table_2"], [66, 71, "001_table_2"]]}
{"id": 4522, "text": "What is the name of the high schooler who has the greatest number of likes?", "meta": {"000_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 37, "001_table_0"], [69, 74, "001_table_2"]]}
{"id": 4523, "text": "Give the name of the student with the most likes.", "meta": {"000_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [21, 28, "001_table_0"], [43, 48, "001_table_2"]]}
{"id": 4524, "text": "Show the names of students who have at least 2 likes.", "meta": {"000_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 26, "001_table_0"], [47, 52, "001_table_2"]]}
{"id": 4525, "text": "What are the names of students who have 2 or more likes?", "meta": {"000_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 30, "001_table_0"], [50, 55, "001_table_2"]]}
{"id": 4526, "text": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 26, "001_table_1"], [78, 85, "001_table_1"], [38, 43, "002_col_3"]]}
{"id": 4527, "text": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "meta": {"000_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 36, "001_table_0"], [48, 53, "002_col_3"], [83, 90, "001_table_1"]]}
{"id": 4528, "text": "How many likes does Kyle have?", "meta": {"000_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[9, 14, "001_table_2"]]}
{"id": 4529, "text": "Return the number of likes that the high schooler named Kyle has.", "meta": {"000_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[21, 26, "001_table_2"], [36, 49, "001_table_0"], [50, 55, "002_col_2"]]}
{"id": 4530, "text": "Find the average grade of all students who have some friends.", "meta": {"000_sql": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[17, 22, "002_col_3"], [30, 38, "002_col_1"], [53, 60, "001_table_1"]]}
{"id": 4531, "text": "What is the average grade of students who have friends?", "meta": {"000_sql": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[20, 25, "002_col_3"], [29, 37, "002_col_1"], [55, 57, "001_table_1"]]}
{"id": 4532, "text": "Find the minimum grade of students who have no friends.", "meta": {"000_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[17, 22, "002_col_3"], [26, 34, "002_col_2"], [47, 54, "001_table_1"]]}
{"id": 4533, "text": "What is the lowest grade of students who do not have any friends?", "meta": {"000_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "001_table_0": "Highschooler", "001_table_1": "Friend", "001_table_2": "Likes", "002_col_1": "Highschooler.ID", "002_col_2": "Highschooler.name", "002_col_3": "Highschooler.grade", "002_col_4": "Friend.student_id", "002_col_5": "Friend.friend_id", "002_col_6": "Likes.student_id", "002_col_7": "Likes.liked_id"}, "annotation_approver": null, "labels": [[19, 24, "002_col_3"], [28, 36, "002_col_1"], [57, 64, "001_table_1"]]}
{"id": 4534, "text": "Which states have both owners and professionals living there?", "meta": {"000_sql": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 12, "002_col_15"], [23, 29, "001_table_4"], [34, 47, "001_table_6"]]}
{"id": 4535, "text": "Find the states where both owners and professionals live.", "meta": {"000_sql": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 15, "002_col_15"], [27, 33, "001_table_4"], [38, 51, "001_table_6"]]}
{"id": 4536, "text": "What is the average age of the dogs who have gone through any treatments?", "meta": {"000_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[20, 23, "002_col_26"], [31, 35, "001_table_5"], [62, 72, "001_table_7"]]}
{"id": 4605, "text": "Tell me the age of the oldest dog.", "meta": {"000_sql": "SELECT max(age) FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 15, "002_col_26"], [30, 33, "001_table_5"]]}
{"id": 4537, "text": "Find the average age of the dogs who went through treatments.", "meta": {"000_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[17, 20, "002_col_26"], [28, 32, "001_table_5"], [50, 60, "001_table_7"]]}
{"id": 4538, "text": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "meta": {"000_sql": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 19, "001_table_6"], [115, 117, "002_col_33"], [119, 128, "002_col_40"], [133, 143, "002_col_43"], [32, 37, "002_col_38"], [62, 71, "001_table_7"]]}
{"id": 4539, "text": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "meta": {"000_sql": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 11, "002_col_33"], [13, 22, "002_col_40"], [27, 37, "002_col_43"], [45, 58, "001_table_6"], [75, 80, "002_col_38"], [124, 134, "001_table_7"]]}
{"id": 4540, "text": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.", "meta": {"000_sql": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 10, "001_table_5"], [76, 79, "001_table_5"], [80, 85, "002_col_25"], [56, 65, "002_col_49"]]}
{"id": 4541, "text": "What are the names of the dogs for which the owner spent more than 1000 for treatment?", "meta": {"000_sql": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[26, 30, "001_table_5"], [13, 18, "002_col_25"], [76, 85, "002_col_49"]]}
{"id": 4542, "text": "Which first names are used for professionals or owners but are not used as dog names?", "meta": {"000_sql": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 17, "002_col_35"], [31, 44, "001_table_6"], [48, 54, "001_table_4"], [75, 78, "001_table_5"], [79, 84, "002_col_25"]]}
{"id": 4543, "text": "Find the first names that are used for professionals or owners but are not used as dog names.", "meta": {"000_sql": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 20, "002_col_35"], [39, 52, "001_table_6"], [83, 86, "001_table_5"], [87, 92, "002_col_25"], [56, 62, "001_table_4"]]}
{"id": 4544, "text": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "meta": {"000_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[67, 81, "001_table_6"], [82, 84, "002_col_33"], [86, 90, "002_col_34"], [95, 100, "002_col_41"], [6, 18, "002_col_33"], [39, 48, "001_table_7"], [52, 56, "001_table_5"]]}
{"id": 4628, "text": "Show different citizenship of singers and the number of singers of each citizenship.", "meta": {"000_sql": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[15, 26, "002_col_5"], [30, 37, "001_table_0"], [56, 63, "001_table_0"], [72, 83, "002_col_5"]]}
{"id": 4545, "text": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "meta": {"000_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 14, "002_col_33"], [16, 20, "002_col_34"], [25, 30, "002_col_41"], [38, 51, "001_table_6"], [76, 85, "001_table_7"], [89, 93, "001_table_5"]]}
{"id": 4546, "text": "Which owner owns the most dogs? List the owner id, first name and last name.", "meta": {"000_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 11, "001_table_4"], [26, 30, "001_table_5"], [41, 46, "001_table_4"], [47, 49, "002_col_10"], [51, 61, "002_col_35"], [66, 75, "002_col_40"]]}
{"id": 4547, "text": "Return the owner id, first name and last name of the owner who has the most dogs.", "meta": {"000_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[11, 16, "001_table_4"], [17, 19, "002_col_10"], [21, 31, "002_col_35"], [36, 45, "002_col_40"], [53, 58, "001_table_4"], [76, 80, "001_table_5"]]}
{"id": 4548, "text": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "meta": {"000_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 19, "001_table_6"], [43, 53, "001_table_7"], [64, 78, "001_table_6"], [79, 81, "002_col_33"], [83, 87, "002_col_34"], [93, 103, "002_col_35"]]}
{"id": 4549, "text": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "meta": {"000_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 15, "002_col_33"], [17, 21, "002_col_34"], [27, 37, "002_col_35"], [45, 58, "001_table_6"], [90, 100, "001_table_7"]]}
{"id": 4550, "text": "What is the name of the breed with the most dogs?", "meta": {"000_sql": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[24, 29, "001_table_0"], [12, 16, "002_col_2"], [44, 48, "001_table_5"]]}
{"id": 4551, "text": "Which breed do the most dogs have? Give me the breed name.", "meta": {"000_sql": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 11, "002_col_2"], [24, 28, "001_table_5"], [47, 52, "001_table_0"], [53, 57, "002_col_2"]]}
{"id": 4552, "text": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "meta": {"000_sql": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 11, "001_table_4"], [74, 79, "001_table_4"], [80, 82, "002_col_10"], [87, 96, "002_col_12"], [34, 44, "001_table_7"], [59, 63, "001_table_5"]]}
{"id": 4629, "text": "For each citizenship, how many singers are from that country?", "meta": {"000_sql": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 20, "002_col_5"], [31, 38, "001_table_0"], [53, 60, "002_col_5"]]}
{"id": 4553, "text": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "meta": {"000_sql": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 17, "001_table_4"], [18, 20, "002_col_10"], [25, 34, "002_col_12"], [42, 47, "001_table_4"], [70, 80, "001_table_7"], [95, 99, "001_table_5"]]}
{"id": 4554, "text": "What is the description of the treatment type that costs the least money in total?", "meta": {"000_sql": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 23, "002_col_9"], [31, 45, "001_table_3"], [67, 72, "002_col_49"]]}
{"id": 4555, "text": "Give me the description of the treatment type whose total cost is the lowest.", "meta": {"000_sql": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 23, "002_col_9"], [31, 45, "001_table_3"], [58, 62, "002_col_49"]]}
{"id": 4556, "text": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "meta": {"000_sql": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 11, "001_table_4"], [83, 88, "001_table_4"], [89, 91, "002_col_10"], [96, 104, "002_col_16"], [43, 48, "002_col_49"], [68, 72, "001_table_5"]]}
{"id": 4557, "text": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "meta": {"000_sql": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 14, "001_table_4"], [15, 17, "002_col_10"], [22, 30, "002_col_16"], [38, 43, "001_table_4"], [63, 68, "002_col_49"], [93, 97, "001_table_5"]]}
{"id": 4558, "text": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "meta": {"000_sql": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 19, "001_table_6"], [52, 62, "001_table_7"], [73, 85, "001_table_6"], [86, 88, "002_col_33"], [93, 103, "002_col_43"]]}
{"id": 4559, "text": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "meta": {"000_sql": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 11, "002_col_33"], [16, 26, "002_col_43"], [34, 47, "001_table_6"], [81, 91, "001_table_7"]]}
{"id": 4560, "text": "What are the first name and last name of the professionals who have done treatment with cost below average?", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 23, "002_col_35"], [28, 37, "002_col_40"], [45, 58, "001_table_6"], [73, 82, "001_table_7"], [88, 92, "002_col_49"]]}
{"id": 4561, "text": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 19, "001_table_6"], [36, 45, "001_table_7"], [51, 56, "002_col_49"], [94, 105, "002_col_35"], [110, 120, "002_col_40"]]}
{"id": 4562, "text": "List the date of each treatment, together with the first name of the professional who operated it.", "meta": {"000_sql": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 31, "002_col_48"], [51, 61, "002_col_35"], [69, 81, "001_table_6"]]}
{"id": 4563, "text": "What are the date and the operating professional's first name of each treatment?", "meta": {"000_sql": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 17, "002_col_48"], [36, 50, "001_table_6"], [51, 61, "002_col_35"], [70, 79, "001_table_7"]]}
{"id": 4564, "text": "List the cost of each treatment and the corresponding treatment type description.", "meta": {"000_sql": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 31, "002_col_49"], [54, 80, "002_col_9"]]}
{"id": 4565, "text": "What are the cost and treatment type description of each treatment?", "meta": {"000_sql": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 17, "002_col_49"], [22, 48, "002_col_9"], [57, 66, "001_table_7"]]}
{"id": 4566, "text": "List each owner's first name, last name, and the size of his for her dog.", "meta": {"000_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[10, 17, "001_table_4"], [18, 28, "002_col_11"], [30, 39, "002_col_12"], [49, 53, "002_col_24"], [69, 72, "001_table_5"]]}
{"id": 4567, "text": "What are each owner's first name, last name, and the size of their dog?", "meta": {"000_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[14, 21, "001_table_4"], [22, 32, "002_col_11"], [34, 42, "002_col_12"], [53, 57, "002_col_24"], [67, 70, "001_table_5"]]}
{"id": 4568, "text": "List pairs of the owner's first name and the dogs's name.", "meta": {"000_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[18, 25, "001_table_4"], [26, 36, "002_col_11"], [45, 51, "001_table_5"], [52, 56, "002_col_25"]]}
{"id": 4569, "text": "What are each owner's first name and their dogs's name?", "meta": {"000_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[14, 21, "001_table_4"], [22, 32, "002_col_11"], [43, 49, "001_table_5"], [50, 54, "002_col_25"]]}
{"id": 4570, "text": "List the names of the dogs of the rarest breed and the treatment dates of them.", "meta": {"000_sql": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 14, "002_col_25"], [22, 26, "001_table_5"], [41, 46, "002_col_23"], [55, 70, "002_col_48"]]}
{"id": 4571, "text": "Which dogs are of the rarest breed? Show their names and treatment dates.", "meta": {"000_sql": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 10, "001_table_5"], [29, 34, "002_col_23"], [47, 52, "002_col_25"], [57, 72, "002_col_48"]]}
{"id": 4572, "text": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "meta": {"000_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 10, "001_table_5"], [36, 41, "002_col_15"], [64, 71, "001_table_4"], [72, 82, "002_col_11"], [91, 96, "001_table_5"], [97, 101, "002_col_25"]]}
{"id": 4573, "text": "Find the first names of owners living in Virginia and the names of dogs they own.", "meta": {"000_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 20, "002_col_11"], [24, 30, "001_table_4"], [31, 37, "002_col_15"], [58, 63, "002_col_25"], [67, 71, "001_table_5"]]}
{"id": 4574, "text": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "meta": {"000_sql": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 26, "002_col_30"], [35, 49, "002_col_32"], [57, 61, "001_table_5"], [86, 95, "001_table_7"]]}
{"id": 4575, "text": "Find the arriving date and the departing date of the dogs that received a treatment.", "meta": {"000_sql": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 22, "002_col_30"], [31, 45, "002_col_32"], [53, 57, "001_table_5"], [74, 83, "001_table_7"]]}
{"id": 4576, "text": "List the last name of the owner owning the youngest dog.", "meta": {"000_sql": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 18, "002_col_12"], [26, 31, "001_table_4"], [52, 55, "001_table_5"]]}
{"id": 4577, "text": "Who owns the youngest dog? Give me his or her last name.", "meta": {"000_sql": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[22, 25, "001_table_5"], [46, 55, "002_col_12"]]}
{"id": 4630, "text": "Please show the most common citizenship of singers.", "meta": {"000_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[28, 39, "002_col_5"], [43, 50, "001_table_0"]]}
{"id": 4578, "text": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "meta": {"000_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 15, "002_col_41"], [23, 36, "001_table_6"], [53, 58, "002_col_38"], [76, 81, "002_col_38"]]}
{"id": 4579, "text": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "meta": {"000_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 19, "002_col_41"], [27, 40, "001_table_6"], [62, 67, "002_col_38"], [85, 90, "002_col_38"]]}
{"id": 4580, "text": "What are the arriving date and the departing date of all the dogs?", "meta": {"000_sql": "SELECT date_arrived ,  date_departed FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 26, "002_col_30"], [35, 49, "002_col_32"], [61, 65, "001_table_5"]]}
{"id": 4581, "text": "List the arrival date and the departure date for all the dogs.", "meta": {"000_sql": "SELECT date_arrived ,  date_departed FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 21, "002_col_30"], [30, 44, "002_col_32"], [57, 61, "001_table_5"]]}
{"id": 4582, "text": "How many dogs went through any treatments?", "meta": {"000_sql": "SELECT count(DISTINCT dog_id) FROM Treatments", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[31, 41, "001_table_7"], [9, 13, "002_col_45"]]}
{"id": 4583, "text": "Count the number of dogs that went through a treatment.", "meta": {"000_sql": "SELECT count(DISTINCT dog_id) FROM Treatments", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[45, 54, "001_table_7"], [20, 24, "002_col_45"]]}
{"id": 4584, "text": "How many professionals have performed any treatment to dogs?", "meta": {"000_sql": "SELECT count(DISTINCT professional_id) FROM Treatments", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 22, "002_col_46"], [42, 51, "001_table_7"]]}
{"id": 4585, "text": "Find the number of professionals who have ever treated dogs.", "meta": {"000_sql": "SELECT count(DISTINCT professional_id) FROM Treatments", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[19, 32, "002_col_46"], [47, 54, "001_table_7"]]}
{"id": 4586, "text": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "meta": {"000_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 19, "001_table_6"], [30, 34, "002_col_37"], [84, 88, "002_col_34"], [90, 96, "002_col_36"], [98, 102, "002_col_37"], [107, 112, "002_col_38"]]}
{"id": 4587, "text": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "meta": {"000_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 13, "002_col_34"], [15, 21, "002_col_38"], [23, 27, "002_col_37"], [32, 37, "002_col_38"], [45, 58, "001_table_6"], [71, 75, "002_col_37"]]}
{"id": 4588, "text": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "meta": {"000_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[6, 12, "001_table_4"], [25, 41, "002_col_15"], [83, 93, "002_col_11"], [95, 104, "002_col_12"], [109, 114, "002_col_17"]]}
{"id": 4589, "text": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "meta": {"000_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[11, 21, "002_col_11"], [23, 32, "002_col_12"], [37, 42, "002_col_17"], [50, 56, "001_table_4"], [69, 85, "002_col_15"]]}
{"id": 4590, "text": "How many dogs have an age below the average?", "meta": {"000_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 13, "001_table_5"], [22, 25, "002_col_26"]]}
{"id": 4591, "text": "Count the number of dogs of an age below the average.", "meta": {"000_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[20, 24, "001_table_5"], [31, 34, "002_col_26"]]}
{"id": 4592, "text": "How much does the most recent treatment cost?", "meta": {"000_sql": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[30, 44, "002_col_49"]]}
{"id": 4593, "text": "Show me the cost of the most recently performed treatment.", "meta": {"000_sql": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 16, "002_col_49"], [48, 57, "002_col_48"]]}
{"id": 4594, "text": "How many dogs have not gone through any treatment?", "meta": {"000_sql": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 13, "001_table_5"], [40, 49, "002_col_45"]]}
{"id": 4595, "text": "Tell me the number of dogs that have received any treatment.", "meta": {"000_sql": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[22, 26, "001_table_5"], [50, 59, "002_col_45"]]}
{"id": 4596, "text": "How many owners temporarily do not have any dogs?", "meta": {"000_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[44, 48, "001_table_5"], [9, 15, "001_table_4"]]}
{"id": 4597, "text": "Find the number of owners who do not own any dogs at this moment.", "meta": {"000_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[19, 25, "001_table_4"], [45, 49, "001_table_5"]]}
{"id": 4598, "text": "How many professionals did not operate any treatment on dogs?", "meta": {"000_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 22, "001_table_6"], [43, 52, "001_table_7"]]}
{"id": 4599, "text": "Find the number of professionals who have not treated any dogs.", "meta": {"000_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[19, 32, "001_table_6"], [46, 53, "001_table_7"]]}
{"id": 4600, "text": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "meta": {"000_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 12, "001_table_5"], [13, 17, "002_col_25"], [19, 22, "002_col_26"], [27, 33, "002_col_29"], [41, 45, "001_table_5"], [60, 69, "002_col_22"]]}
{"id": 4601, "text": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "meta": {"000_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 16, "001_table_5"], [17, 21, "002_col_25"], [23, 26, "002_col_26"], [31, 37, "002_col_29"], [45, 49, "001_table_5"], [60, 69, "002_col_22"]]}
{"id": 4602, "text": "What is the average age of all the dogs?", "meta": {"000_sql": "SELECT avg(age) FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[20, 23, "002_col_26"], [35, 39, "001_table_5"]]}
{"id": 4603, "text": "Compute the average age of all the dogs.", "meta": {"000_sql": "SELECT avg(age) FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[20, 23, "002_col_26"], [35, 39, "001_table_5"]]}
{"id": 4604, "text": "What is the age of the oldest dog?", "meta": {"000_sql": "SELECT max(age) FROM Dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 15, "002_col_26"], [30, 33, "001_table_5"]]}
{"id": 4606, "text": "How much does each charge type costs? List both charge type and amount.", "meta": {"000_sql": "SELECT charge_type ,  charge_amount FROM Charges", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[19, 25, "001_table_1"], [26, 30, "002_col_4"], [31, 36, "002_col_5"], [48, 54, "001_table_1"], [55, 59, "002_col_4"], [64, 70, "002_col_5"]]}
{"id": 4607, "text": "List each charge type and its amount.", "meta": {"000_sql": "SELECT charge_type ,  charge_amount FROM Charges", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[10, 16, "001_table_1"], [17, 21, "002_col_4"], [30, 36, "002_col_5"]]}
{"id": 4608, "text": "How much does the most expensive charge type costs?", "meta": {"000_sql": "SELECT max(charge_amount) FROM Charges", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[33, 50, "002_col_5"]]}
{"id": 4609, "text": "What is the charge amount of the most expensive charge type?", "meta": {"000_sql": "SELECT max(charge_amount) FROM Charges", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[12, 25, "002_col_5"], [48, 59, "001_table_1"]]}
{"id": 4610, "text": "List the email, cell phone and home phone of all the professionals.", "meta": {"000_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 14, "002_col_41"], [16, 26, "002_col_43"], [31, 41, "002_col_42"], [53, 66, "001_table_6"]]}
{"id": 4611, "text": "What are the email, cell phone and home phone of each professional?", "meta": {"000_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[13, 18, "002_col_41"], [20, 30, "002_col_43"], [35, 45, "002_col_42"], [54, 66, "001_table_6"]]}
{"id": 4612, "text": "What are all the possible breed type and size type combinations?", "meta": {"000_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[26, 36, "002_col_23"], [41, 50, "002_col_24"]]}
{"id": 4613, "text": "Find the distinct breed type and size type combinations for dogs.", "meta": {"000_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[18, 28, "002_col_23"], [33, 42, "002_col_24"], [60, 64, "001_table_5"]]}
{"id": 4614, "text": "List the first name of all the professionals along with the description of the treatment they have done.", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[9, 19, "002_col_35"], [31, 44, "001_table_6"], [60, 88, "002_col_9"]]}
{"id": 4615, "text": "What are each professional's first name and description of the treatment they have performed?", "meta": {"000_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "001_table_0": "Breeds", "001_table_1": "Charges", "001_table_2": "Sizes", "001_table_3": "Treatment_Types", "001_table_4": "Owners", "001_table_5": "Dogs", "001_table_6": "Professionals", "001_table_7": "Treatments", "002_col_1": "Breeds.breed_code", "002_col_2": "Breeds.breed_name", "002_col_3": "Charges.charge_id", "002_col_4": "Charges.charge_type", "002_col_5": "Charges.charge_amount", "002_col_6": "Sizes.size_code", "002_col_7": "Sizes.size_description", "002_col_8": "Treatment_Types.treatment_type_code", "002_col_9": "Treatment_Types.treatment_type_description", "002_col_10": "Owners.owner_id", "002_col_11": "Owners.first_name", "002_col_12": "Owners.last_name", "002_col_13": "Owners.street", "002_col_14": "Owners.city", "002_col_15": "Owners.state", "002_col_16": "Owners.zip_code", "002_col_17": "Owners.email_address", "002_col_18": "Owners.home_phone", "002_col_19": "Owners.cell_number", "002_col_20": "Dogs.dog_id", "002_col_21": "Dogs.owner_id", "002_col_22": "Dogs.abandoned_yn", "002_col_23": "Dogs.breed_code", "002_col_24": "Dogs.size_code", "002_col_25": "Dogs.name", "002_col_26": "Dogs.age", "002_col_27": "Dogs.date_of_birth", "002_col_28": "Dogs.gender", "002_col_29": "Dogs.weight", "002_col_30": "Dogs.date_arrived", "002_col_31": "Dogs.date_adopted", "002_col_32": "Dogs.date_departed", "002_col_33": "Professionals.professional_id", "002_col_34": "Professionals.role_code", "002_col_35": "Professionals.first_name", "002_col_36": "Professionals.street", "002_col_37": "Professionals.city", "002_col_38": "Professionals.state", "002_col_39": "Professionals.zip_code", "002_col_40": "Professionals.last_name", "002_col_41": "Professionals.email_address", "002_col_42": "Professionals.home_phone", "002_col_43": "Professionals.cell_number", "002_col_44": "Treatments.treatment_id", "002_col_45": "Treatments.dog_id", "002_col_46": "Treatments.professional_id", "002_col_47": "Treatments.treatment_type_code", "002_col_48": "Treatments.date_of_treatment", "002_col_49": "Treatments.cost_of_treatment"}, "annotation_approver": null, "labels": [[14, 28, "002_col_6"], [29, 39, "002_col_35"], [44, 72, "002_col_9"]]}
{"id": 4616, "text": "How many singers are there?", "meta": {"000_sql": "SELECT count(*) FROM singer", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 16, "001_table_0"]]}
{"id": 4617, "text": "What is the count of singers?", "meta": {"000_sql": "SELECT count(*) FROM singer", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[21, 28, "001_table_0"]]}
{"id": 4618, "text": "List the name of singers in ascending order of net worth.", "meta": {"000_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[17, 24, "001_table_0"], [9, 13, "002_col_2"], [47, 56, "002_col_4"]]}
{"id": 4619, "text": "What are the names of singers ordered by ascending net worth?", "meta": {"000_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [22, 29, "001_table_0"], [51, 60, "002_col_4"]]}
{"id": 4620, "text": "What are the birth year and citizenship of singers?", "meta": {"000_sql": "SELECT Birth_Year ,  Citizenship FROM singer", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 23, "001_table_0"], [28, 39, "002_col_5"], [43, 50, "001_table_0"]]}
{"id": 4621, "text": "What are the birth years and citizenships of the singers?", "meta": {"000_sql": "SELECT Birth_Year ,  Citizenship FROM singer", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 24, "001_table_0"], [29, 41, "002_col_5"], [49, 56, "001_table_0"]]}
{"id": 4622, "text": "List the name of singers whose citizenship is not \"France\".", "meta": {"000_sql": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [17, 24, "001_table_0"], [31, 42, "002_col_5"]]}
{"id": 4623, "text": "What are the names of the singers who are not French citizens?", "meta": {"000_sql": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 33, "001_table_0"], [53, 61, "002_col_5"]]}
{"id": 4624, "text": "Show the name of singers whose birth year is either 1948 or 1949?", "meta": {"000_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [17, 24, "001_table_0"], [31, 41, "002_col_3"]]}
{"id": 4625, "text": "What are the names of the singers whose birth years are either 1948 or 1949?", "meta": {"000_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 33, "001_table_0"], [40, 51, "002_col_3"]]}
{"id": 4626, "text": "What is the name of the singer with the largest net worth?", "meta": {"000_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 30, "001_table_0"], [48, 57, "002_col_4"]]}
{"id": 4627, "text": "What is the name of the singer who is worth the most?", "meta": {"000_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[12, 16, "002_col_2"], [24, 30, "001_table_0"], [38, 43, "002_col_4"]]}
{"id": 4631, "text": "What is the msot common singer citizenship?", "meta": {"000_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[24, 30, "001_table_0"], [31, 42, "002_col_5"]]}
{"id": 4632, "text": "Show different citizenships and the maximum net worth of singers of each citizenship.", "meta": {"000_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[15, 27, "002_col_5"], [44, 53, "002_col_4"], [57, 64, "001_table_0"], [73, 84, "002_col_5"]]}
{"id": 4633, "text": "For each citizenship, what is the maximum net worth?", "meta": {"000_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 20, "002_col_5"], [42, 51, "002_col_4"]]}
{"id": 4634, "text": "Show titles of songs and names of singers.", "meta": {"000_sql": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[5, 11, "002_col_7"], [15, 20, "001_table_1"], [25, 30, "002_col_2"], [34, 41, "001_table_0"]]}
{"id": 4635, "text": "What are the song titles and singer names?", "meta": {"000_sql": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 17, "001_table_1"], [18, 24, "002_col_7"], [29, 35, "001_table_0"], [36, 41, "002_col_2"]]}
{"id": 4636, "text": "Show distinct names of singers that have songs with sales more than 300000.", "meta": {"000_sql": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[14, 19, "002_col_2"], [23, 30, "001_table_0"], [41, 46, "001_table_1"], [52, 57, "002_col_9"]]}
{"id": 4637, "text": "what are the different names of the singers that have sales more than 300000?", "meta": {"000_sql": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[23, 28, "002_col_2"], [36, 43, "001_table_0"], [54, 59, "002_col_9"]]}
{"id": 4638, "text": "Show the names of singers that have more than one song.", "meta": {"000_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 25, "001_table_0"], [50, 54, "001_table_1"]]}
{"id": 4639, "text": "What are the names of the singers that have more than one songs?", "meta": {"000_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 18, "002_col_2"], [26, 33, "001_table_0"], [58, 63, "001_table_1"]]}
{"id": 4640, "text": "Show the names of singers and the total sales of their songs.", "meta": {"000_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 14, "002_col_2"], [18, 25, "001_table_0"], [40, 45, "002_col_9"], [55, 60, "001_table_1"]]}
{"id": 4641, "text": "For each singer name, what is the total sales for their songs?", "meta": {"000_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 15, "001_table_0"], [16, 20, "002_col_2"], [40, 45, "002_col_9"], [56, 61, "001_table_1"]]}
{"id": 4642, "text": "List the name of singers that do not have any song.", "meta": {"000_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 13, "002_col_2"], [17, 24, "001_table_0"], [46, 50, "001_table_1"]]}
{"id": 4643, "text": "What is the sname of every sing that does not have any song?", "meta": {"000_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[12, 17, "002_col_2"], [27, 31, "001_table_0"], [55, 59, "001_table_1"]]}
{"id": 4644, "text": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "meta": {"000_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[9, 20, "002_col_5"], [31, 38, "001_table_0"], [44, 54, "002_col_3"]]}
{"id": 4645, "text": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "meta": {"000_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "001_table_0": "singer", "001_table_1": "song", "002_col_1": "singer.Singer_ID", "002_col_2": "singer.Name", "002_col_3": "singer.Birth_Year", "002_col_4": "singer.Net_Worth_Millions", "002_col_5": "singer.Citizenship", "002_col_6": "song.Song_ID", "002_col_7": "song.Title", "002_col_8": "song.Singer_ID", "002_col_9": "song.Sales", "002_col_10": "song.Highest_Position"}, "annotation_approver": null, "labels": [[13, 25, "002_col_5"], [45, 52, "001_table_0"], [60, 70, "002_col_3"]]}
{"id": 4646, "text": "How many available features are there in total?", "meta": {"000_sql": "SELECT count(*) FROM Other_Available_Features", "001_table_0": "Ref_Feature_Types", "001_table_1": "Ref_Property_Types", "001_table_2": "Other_Available_Features", "001_table_3": "Properties", "001_table_4": "Other_Property_Features", "002_col_1": "Ref_Feature_Types.feature_type_code", "002_col_2": "Ref_Feature_Types.feature_type_name", "002_col_3": "Ref_Property_Types.property_type_code", "002_col_4": "Ref_Property_Types.property_type_description", "002_col_5": "Other_Available_Features.feature_id", "002_col_6": "Other_Available_Features.feature_type_code", "002_col_7": "Other_Available_Features.feature_name", "002_col_8": "Other_Available_Features.feature_description", "002_col_9": "Properties.property_id", "002_col_10": "Properties.property_type_code", "002_col_11": "Properties.date_on_market", "002_col_12": "Properties.date_sold", "002_col_13": "Properties.property_name", "002_col_14": "Properties.property_address", "002_col_15": "Properties.room_count", "002_col_16": "Properties.vendor_requested_price", "002_col_17": "Properties.buyer_offered_price", "002_col_18": "Properties.agreed_selling_price", "002_col_19": "Properties.apt_feature_1", "002_col_20": "Properties.apt_feature_2", "002_col_21": "Properties.apt_feature_3", "002_col_22": "Properties.fld_feature_1", "002_col_23": "Properties.fld_feature_2", "002_col_24": "Properties.fld_feature_3", "002_col_25": "Properties.hse_feature_1", "002_col_26": "Properties.hse_feature_2", "002_col_27": "Properties.hse_feature_3", "002_col_28": "Properties.oth_feature_1", "002_col_29": "Properties.oth_feature_2", "002_col_30": "Properties.oth_feature_3", "002_col_31": "Properties.shp_feature_1", "002_col_32": "Properties.shp_feature_2", "002_col_33": "Properties.shp_feature_3", "002_col_34": "Properties.other_property_details", "002_col_35": "Other_Property_Features.property_id", "002_col_36": "Other_Property_Features.feature_id", "002_col_37": "Other_Property_Features.property_feature_description"}, "annotation_approver": null, "labels": [[9, 27, "001_table_2"]]}
{"id": 4647, "text": "What is the feature type name of feature AirCon?", "meta": {"000_sql": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "001_table_0": "Ref_Feature_Types", "001_table_1": "Ref_Property_Types", "001_table_2": "Other_Available_Features", "001_table_3": "Properties", "001_table_4": "Other_Property_Features", "002_col_1": "Ref_Feature_Types.feature_type_code", "002_col_2": "Ref_Feature_Types.feature_type_name", "002_col_3": "Ref_Property_Types.property_type_code", "002_col_4": "Ref_Property_Types.property_type_description", "002_col_5": "Other_Available_Features.feature_id", "002_col_6": "Other_Available_Features.feature_type_code", "002_col_7": "Other_Available_Features.feature_name", "002_col_8": "Other_Available_Features.feature_description", "002_col_9": "Properties.property_id", "002_col_10": "Properties.property_type_code", "002_col_11": "Properties.date_on_market", "002_col_12": "Properties.date_sold", "002_col_13": "Properties.property_name", "002_col_14": "Properties.property_address", "002_col_15": "Properties.room_count", "002_col_16": "Properties.vendor_requested_price", "002_col_17": "Properties.buyer_offered_price", "002_col_18": "Properties.agreed_selling_price", "002_col_19": "Properties.apt_feature_1", "002_col_20": "Properties.apt_feature_2", "002_col_21": "Properties.apt_feature_3", "002_col_22": "Properties.fld_feature_1", "002_col_23": "Properties.fld_feature_2", "002_col_24": "Properties.fld_feature_3", "002_col_25": "Properties.hse_feature_1", "002_col_26": "Properties.hse_feature_2", "002_col_27": "Properties.hse_feature_3", "002_col_28": "Properties.oth_feature_1", "002_col_29": "Properties.oth_feature_2", "002_col_30": "Properties.oth_feature_3", "002_col_31": "Properties.shp_feature_1", "002_col_32": "Properties.shp_feature_2", "002_col_33": "Properties.shp_feature_3", "002_col_34": "Properties.other_property_details", "002_col_35": "Other_Property_Features.property_id", "002_col_36": "Other_Property_Features.feature_id", "002_col_37": "Other_Property_Features.property_feature_description"}, "annotation_approver": null, "labels": [[12, 29, "002_col_2"], [33, 40, "002_col_7"]]}
{"id": 4648, "text": "Show the property type descriptions of properties belonging to that code.", "meta": {"000_sql": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "001_table_0": "Ref_Feature_Types", "001_table_1": "Ref_Property_Types", "001_table_2": "Other_Available_Features", "001_table_3": "Properties", "001_table_4": "Other_Property_Features", "002_col_1": "Ref_Feature_Types.feature_type_code", "002_col_2": "Ref_Feature_Types.feature_type_name", "002_col_3": "Ref_Property_Types.property_type_code", "002_col_4": "Ref_Property_Types.property_type_description", "002_col_5": "Other_Available_Features.feature_id", "002_col_6": "Other_Available_Features.feature_type_code", "002_col_7": "Other_Available_Features.feature_name", "002_col_8": "Other_Available_Features.feature_description", "002_col_9": "Properties.property_id", "002_col_10": "Properties.property_type_code", "002_col_11": "Properties.date_on_market", "002_col_12": "Properties.date_sold", "002_col_13": "Properties.property_name", "002_col_14": "Properties.property_address", "002_col_15": "Properties.room_count", "002_col_16": "Properties.vendor_requested_price", "002_col_17": "Properties.buyer_offered_price", "002_col_18": "Properties.agreed_selling_price", "002_col_19": "Properties.apt_feature_1", "002_col_20": "Properties.apt_feature_2", "002_col_21": "Properties.apt_feature_3", "002_col_22": "Properties.fld_feature_1", "002_col_23": "Properties.fld_feature_2", "002_col_24": "Properties.fld_feature_3", "002_col_25": "Properties.hse_feature_1", "002_col_26": "Properties.hse_feature_2", "002_col_27": "Properties.hse_feature_3", "002_col_28": "Properties.oth_feature_1", "002_col_29": "Properties.oth_feature_2", "002_col_30": "Properties.oth_feature_3", "002_col_31": "Properties.shp_feature_1", "002_col_32": "Properties.shp_feature_2", "002_col_33": "Properties.shp_feature_3", "002_col_34": "Properties.other_property_details", "002_col_35": "Other_Property_Features.property_id", "002_col_36": "Other_Property_Features.feature_id", "002_col_37": "Other_Property_Features.property_feature_description"}, "annotation_approver": null, "labels": [[9, 35, "002_col_4"], [39, 49, "001_table_3"], [68, 72, "002_col_3"]]}
{"id": 4649, "text": "What are the names of properties that are either houses or apartments with more than 1 room?", "meta": {"000_sql": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1", "001_table_0": "Ref_Feature_Types", "001_table_1": "Ref_Property_Types", "001_table_2": "Other_Available_Features", "001_table_3": "Properties", "001_table_4": "Other_Property_Features", "002_col_1": "Ref_Feature_Types.feature_type_code", "002_col_2": "Ref_Feature_Types.feature_type_name", "002_col_3": "Ref_Property_Types.property_type_code", "002_col_4": "Ref_Property_Types.property_type_description", "002_col_5": "Other_Available_Features.feature_id", "002_col_6": "Other_Available_Features.feature_type_code", "002_col_7": "Other_Available_Features.feature_name", "002_col_8": "Other_Available_Features.feature_description", "002_col_9": "Properties.property_id", "002_col_10": "Properties.property_type_code", "002_col_11": "Properties.date_on_market", "002_col_12": "Properties.date_sold", "002_col_13": "Properties.property_name", "002_col_14": "Properties.property_address", "002_col_15": "Properties.room_count", "002_col_16": "Properties.vendor_requested_price", "002_col_17": "Properties.buyer_offered_price", "002_col_18": "Properties.agreed_selling_price", "002_col_19": "Properties.apt_feature_1", "002_col_20": "Properties.apt_feature_2", "002_col_21": "Properties.apt_feature_3", "002_col_22": "Properties.fld_feature_1", "002_col_23": "Properties.fld_feature_2", "002_col_24": "Properties.fld_feature_3", "002_col_25": "Properties.hse_feature_1", "002_col_26": "Properties.hse_feature_2", "002_col_27": "Properties.hse_feature_3", "002_col_28": "Properties.oth_feature_1", "002_col_29": "Properties.oth_feature_2", "002_col_30": "Properties.oth_feature_3", "002_col_31": "Properties.shp_feature_1", "002_col_32": "Properties.shp_feature_2", "002_col_33": "Properties.shp_feature_3", "002_col_34": "Properties.other_property_details", "002_col_35": "Other_Property_Features.property_id", "002_col_36": "Other_Property_Features.feature_id", "002_col_37": "Other_Property_Features.property_feature_description"}, "annotation_approver": null, "labels": [[13, 18, "002_col_13"], [22, 32, "002_col_10"], [87, 91, "002_col_15"]]}
{"id": 3664, "text": "How much does the youngest dog weight?", "meta": {"000_sql": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[31, 37, "002_col_14"]]}
{"id": 3684, "text": "What type of pet is the youngest animal, and how much does it weight?", "meta": {"000_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "001_table_0": "Student", "001_table_1": "Has_Pet", "001_table_2": "Pets", "002_col_1": "Student.StuID", "002_col_2": "Student.LName", "002_col_3": "Student.Fname", "002_col_4": "Student.Age", "002_col_5": "Student.Sex", "002_col_6": "Student.Major", "002_col_7": "Student.Advisor", "002_col_8": "Student.city_code", "002_col_9": "Has_Pet.StuID", "002_col_10": "Has_Pet.PetID", "002_col_11": "Pets.PetID", "002_col_12": "Pets.PetType", "002_col_13": "Pets.pet_age", "002_col_14": "Pets.weight"}, "annotation_approver": null, "labels": [[5, 16, "002_col_12"], [33, 39, "001_table_2"], [62, 68, "002_col_14"]]}
