[{"db_id": "concert_singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "How many singers do we have?", "question_toks": ["How", "many", "singers", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "What is the total number of singers?", "question_toks": ["What", "is", "the", "total", "number", "of", "singers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "question_toks": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "What are the names, countries, and ages for every singer in descending order of age?", "question_toks": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value"], "question": "What is the average, minimum, and maximum age of all singers from France?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]]}}, {"db_id": "concert_singer", "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value"], "question": "What is the average, minimum, and maximum age for all French singers?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "all", "French", "singers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]]}}, {"db_id": "concert_singer", "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "song_release_year", "FROM", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "value"], "question": "Show the name and the release year of the song by the youngest singer.", "question_toks": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "song_release_year", "FROM", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "value"], "question": "What are the names and release years for all the songs of the youngest singer?", "question_toks": ["What", "are", "the", "names", "and", "release", "years", "for", "all", "the", "songs", "of", "the", "youngest", "singer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "singer", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "value"], "question": "What are all distinct countries where singers above age 20 are from?", "question_toks": ["What", "are", "all", "distinct", "countries", "where", "singers", "above", "age", "20", "are", "from", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "singer", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "value"], "question": "What are  the different countries with singers above age 20?", "question_toks": ["What", "are", "the", "different", "countries", "with", "singers", "above", "age", "20", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT country ,  count(*) FROM singer GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country"], "question": "Show all countries and the number of singers in each country.", "question_toks": ["Show", "all", "countries", "and", "the", "number", "of", "singers", "in", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT country ,  count(*) FROM singer GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country"], "question": "How many singers are from each country?", "question_toks": ["How", "many", "singers", "are", "from", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "query_toks": ["SELECT", "song_name", "FROM", "singer", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "singer", ")"], "query_toks_no_value": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")"], "question": "List all song names by singers above the average age.", "question_toks": ["List", "all", "song", "names", "by", "singers", "above", "the", "average", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "concert_singer", "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "query_toks": ["SELECT", "song_name", "FROM", "singer", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "singer", ")"], "query_toks_no_value": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")"], "question": "What are all the song names by singers who are older than average?", "question_toks": ["What", "are", "all", "the", "song", "names", "by", "singers", "who", "are", "older", "than", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "concert_singer", "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "LOCATION", ",", "name", "FROM", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "value", "and", "value"], "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "question_toks": ["Show", "location", "and", "name", "for", "all", "stadiums", "with", "a", "capacity", "between", "5000", "and", "10000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]]}}, {"db_id": "concert_singer", "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "LOCATION", ",", "name", "FROM", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "value", "and", "value"], "question": "What are the locations and names of all stations with capacity between 5000 and 10000?", "question_toks": ["What", "are", "the", "locations", "and", "names", "of", "all", "stations", "with", "capacity", "between", "5000", "and", "10000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]]}}, {"db_id": "concert_singer", "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium", "query_toks": ["SELECT", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "FROM", "stadium"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium"], "question": "What is the average and the maximum capacity of all stadiums?", "question_toks": ["What", "is", "the", "average", "and", "the", "maximum", "capacity", "of", "all", "stadiums", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium", "query_toks": ["SELECT", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "FROM", "stadium"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium"], "question": "What is the average and maximum capacities for all stations?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "capacities", "for", "all", "stations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "capacity", "FROM", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "value"], "question": "What is the name and capacity for the stadium with highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "highest", "average", "attendance", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "capacity", "FROM", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "value"], "question": "What is the name and capacity for the stadium with the highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "the", "highest", "average", "attendance", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "WHERE", "YEAR", "=", "2014", "OR", "YEAR", "=", "2015"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many concerts are there in year 2014 or 2015?", "question_toks": ["How", "many", "concerts", "are", "there", "in", "year", "2014", "or", "2015", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "WHERE", "YEAR", "=", "2014", "OR", "YEAR", "=", "2015"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many concerts occurred in 2014 or 2015?", "question_toks": ["How", "many", "concerts", "occurred", "in", "2014", "or", "2015", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "GROUP", "BY", "T1.stadium_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "stadium_id"], "question": "Show the stadium name and the number of concerts in each stadium.", "question_toks": ["Show", "the", "stadium", "name", "and", "the", "number", "of", "concerts", "in", "each", "stadium", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "GROUP", "BY", "T1.stadium_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "stadium_id"], "question": "For each stadium, how many concerts play there?", "question_toks": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.capacity", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", ">", "=", "2014", "GROUP", "BY", "T2.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "=", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "question_toks": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.capacity", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", ">", "=", "2014", "GROUP", "BY", "T2.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "=", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and capacity of the stadium  with the most concerts after 2013?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which year has most number of concerts?", "question_toks": ["Which", "year", "has", "most", "number", "of", "concerts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the year that had the most concerts?", "question_toks": ["What", "is", "the", "year", "that", "had", "the", "most", "concerts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "stadium_id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "concert", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")"], "question": "Show the stadium names without any concert.", "question_toks": ["Show", "the", "stadium", "names", "without", "any", "concert", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "concert_singer", "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "stadium_id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "concert", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")"], "question": "What are the names of the stadiums without any concerts?", "question_toks": ["What", "are", "the", "names", "of", "the", "stadiums", "without", "any", "concerts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "concert_singer", "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "query_toks": ["SELECT", "country", "FROM", "singer", "WHERE", "age", ">", "40", "INTERSECT", "SELECT", "country", "FROM", "singer", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "country", "from", "singer", "where", "age", ">", "value", "intersect", "select", "country", "from", "singer", "where", "age", "<", "value"], "question": "Show countries where a singer above age 40 and a singer below 30 are from.", "question_toks": ["Show", "countries", "where", "a", "singer", "above", "age", "40", "and", "a", "singer", "below", "30", "are", "from", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 13, false], null], 30.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 40.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "query_toks": ["SELECT", "name", "FROM", "stadium", "EXCEPT", "SELECT", "T2.name", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", "=", "2014"], "query_toks_no_value": ["select", "name", "from", "stadium", "except", "select", "t2", ".", "name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "Show names for all stadiums except for stadiums having a concert in year 2014.", "question_toks": ["Show", "names", "for", "all", "stadiums", "except", "for", "stadiums", "having", "a", "concert", "in", "year", "2014", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "query_toks": ["SELECT", "name", "FROM", "stadium", "EXCEPT", "SELECT", "T2.name", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", "=", "2014"], "query_toks_no_value": ["select", "name", "from", "stadium", "except", "select", "t2", ".", "name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "What are the names of all stadiums that did not have a concert in 2014?", "question_toks": ["What", "are", "the", "names", "of", "all", "stadiums", "that", "did", "not", "have", "a", "concert", "in", "2014", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "query_toks": ["SELECT", "T2.concert_name", ",", "T2.theme", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "concert", "AS", "T2", "ON", "T1.concert_id", "=", "T2.concert_id", "GROUP", "BY", "T2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "Show the name and theme for all concerts and the number of singers in each concert.", "question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "query_toks": ["SELECT", "T2.concert_name", ",", "T2.theme", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "concert", "AS", "T2", "ON", "T1.concert_id", "=", "T2.concert_id", "GROUP", "BY", "T2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "What are the names, themes, and number of singers for each and every concert?", "question_toks": ["What", "are", "the", "names", ",", "themes", ",", "and", "number", "of", "singers", "for", "each", "and", "every", "concert", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "List singer names and number of concerts for each singer.", "question_toks": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "What are the names of the singers and number of concerts for each person?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "List all singer names in concerts in year 2014.", "question_toks": ["List", "all", "singer", "names", "in", "concerts", "in", "year", "2014", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "What are the names of the singers who performed in a concert in 2014?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "performed", "in", "a", "concert", "in", "2014", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "query_toks": ["SELECT", "name", ",", "country", "FROM", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value"], "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "question_toks": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]]}}, {"db_id": "concert_singer", "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "query_toks": ["SELECT", "name", ",", "country", "FROM", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value"], "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "every", "singer", "who", "has", "a", "song", "with", "the", "word", "'Hey", "'", "in", "its", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]]}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2014", "INTERSECT", "SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2015"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value", "intersect", "select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "question_toks": ["Find", "the", "name", "and", "location", "of", "the", "stadiums", "which", "some", "concerts", "happened", "in", "the", "years", "of", "both", "2014", "and", "2015", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2014", "INTERSECT", "SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2015"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value", "intersect", "select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "the", "stadiums", "that", "had", "concerts", "that", "occurred", "in", "both", "2014", "and", "2015", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]]}}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "ORDER", "BY", "T2.Capacity", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "order", "by", "t2", ".", "capacity", "desc", "limit", "value"], "question": "Find the number of concerts happened in the stadium with the highest capacity.", "question_toks": ["Find", "the", "number", "of", "concerts", "happened", "in", "the", "stadium", "with", "the", "highest", "capacity", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "ORDER", "BY", "T2.Capacity", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "order", "by", "t2", ".", "capacity", "desc", "limit", "value"], "question": "What are the number of concerts that occurred in the stadium with the largest capacity?", "question_toks": ["What", "are", "the", "number", "of", "concerts", "that", "occurred", "in", "the", "stadium", "with", "the", "largest", "capacity", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM pets WHERE weight  >  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "pets", "WHERE", "weight", ">", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "value"], "question": "Find the number of pets whose weight is heavier than 10.", "question_toks": ["Find", "the", "number", "of", "pets", "whose", "weight", "is", "heavier", "than", "10", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]]}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM pets WHERE weight  >  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "pets", "WHERE", "weight", ">", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "value"], "question": "How many pets have a greater weight than 10?", "question_toks": ["How", "many", "pets", "have", "a", "greater", "weight", "than", "10", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]]}}, {"db_id": "pets_1", "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "Find the weight of the youngest dog.", "question_toks": ["Find", "the", "weight", "of", "the", "youngest", "dog", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "How much does the youngest dog weigh?", "question_toks": ["How", "much", "does", "the", "youngest", "dog", "weigh", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "petType", "FROM", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "question_toks": ["Find", "the", "maximum", "weight", "for", "each", "type", "of", "pet", ".", "List", "the", "maximum", "weight", "and", "pet", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "petType", "FROM", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "List the maximum weight and type for each type of pet.", "question_toks": ["List", "the", "maximum", "weight", "and", "type", "for", "each", "type", "of", "pet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.age", ">", "20"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "age", ">", "value"], "question": "Find number of pets owned by students who are older than 20.", "question_toks": ["Find", "number", "of", "pets", "owned", "by", "students", "who", "are", "older", "than", "20", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.age", ">", "20"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "age", ">", "value"], "question": "How many pets are owned by students that have an age greater than 20?", "question_toks": ["How", "many", "pets", "are", "owned", "by", "students", "that", "have", "an", "age", "greater", "than", "20", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T2.petid", "=", "T3.petid", "WHERE", "T1.sex", "=", "'F", "'", "AND", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t2", ".", "petid", "=", "t3", ".", "petid", "where", "t1", ".", "sex", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "Find the number of dog pets that are raised by female students (with sex F).", "question_toks": ["Find", "the", "number", "of", "dog", "pets", "that", "are", "raised", "by", "female", "students", "(", "with", "sex", "F", ")", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}}, {"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T2.petid", "=", "T3.petid", "WHERE", "T1.sex", "=", "'F", "'", "AND", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t2", ".", "petid", "=", "t3", ".", "petid", "where", "t1", ".", "sex", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "How many dog pets are raised by female students?", "question_toks": ["How", "many", "dog", "pets", "are", "raised", "by", "female", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}}, {"db_id": "pets_1", "query": "SELECT count(DISTINCT pettype) FROM pets", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pettype", ")", "FROM", "pets"], "query_toks_no_value": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets"], "question": "Find the number of distinct type of pets.", "question_toks": ["Find", "the", "number", "of", "distinct", "type", "of", "pets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT count(DISTINCT pettype) FROM pets", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pettype", ")", "FROM", "pets"], "query_toks_no_value": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets"], "question": "How many different types of pet are there?", "question_toks": ["How", "many", "different", "types", "of", "pet", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "OR", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "or", "t3", ".", "pettype", "=", "value"], "question": "Find the first name of students who have cat or dog pet.", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "have", "cat", "or", "dog", "pet", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}}, {"db_id": "pets_1", "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "OR", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "or", "t3", ".", "pettype", "=", "value"], "question": "What are the first names of every student who has a cat or dog as a pet?", "question_toks": ["What", "are", "the", "first", "names", "of", "every", "student", "who", "has", "a", "cat", "or", "dog", "as", "a", "pet", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}}, {"db_id": "pets_1", "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "query_toks": ["SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "INTERSECT", "SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "intersect", "select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "Find the name of students who have both cat and dog pets.", "question_toks": ["Find", "the", "name", "of", "students", "who", "have", "both", "cat", "and", "dog", "pets", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}}, {"db_id": "pets_1", "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "query_toks": ["SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "INTERSECT", "SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "intersect", "select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "What are the students' first names who have both cats and dogs as pets?", "question_toks": ["What", "are", "the", "students", "'", "first", "names", "who", "have", "both", "cats", "and", "dogs", "as", "pets", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}}, {"db_id": "pets_1", "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "major", ",", "age", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "Find the major and age of students who do not have a cat pet.", "question_toks": ["Find", "the", "major", "and", "age", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, null]]}}, {"db_id": "pets_1", "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "major", ",", "age", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "What major is every student who does not own a cat as a pet, and also how old are they?", "question_toks": ["What", "major", "is", "every", "student", "who", "does", "not", "own", "a", "cat", "as", "a", "pet", ",", "and", "also", "how", "old", "are", "they", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, null]]}}, {"db_id": "pets_1", "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "query_toks": ["SELECT", "stuid", "FROM", "student", "EXCEPT", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "Find the id of students who do not have a cat pet.", "question_toks": ["Find", "the", "id", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "query_toks": ["SELECT", "stuid", "FROM", "student", "EXCEPT", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "What are the ids of the students who do not own cats as pets?", "question_toks": ["What", "are", "the", "ids", "of", "the", "students", "who", "do", "not", "own", "cats", "as", "pets", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'", "AND", "T1.stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "and", "t1", ".", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "dog", "but", "do", "not", "have", "a", "cat", "as", "a", "pet", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, null]]}}, {"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'", "AND", "T1.stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "and", "t1", ".", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "What is the first name of every student who has a dog but does not have a cat?", "question_toks": ["What", "is", "the", "first", "name", "of", "every", "student", "who", "has", "a", "dog", "but", "does", "not", "have", "a", "cat", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}, null]]}}, {"db_id": "pets_1", "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "pettype", ",", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "Find the type and weight of the youngest pet.", "question_toks": ["Find", "the", "type", "and", "weight", "of", "the", "youngest", "pet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "pettype", ",", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "What type of pet is the youngest animal, and how much does it weigh?", "question_toks": ["What", "type", "of", "pet", "is", "the", "youngest", "animal", ",", "and", "how", "much", "does", "it", "weigh", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "query_toks": ["SELECT", "petid", ",", "weight", "FROM", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "value"], "question": "Find the id and weight of all pets whose age is older than 1.", "question_toks": ["Find", "the", "id", "and", "weight", "of", "all", "pets", "whose", "age", "is", "older", "than", "1", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]]}}, {"db_id": "pets_1", "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "query_toks": ["SELECT", "petid", ",", "weight", "FROM", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "value"], "question": "What is the id and weight of every pet who is older than 1?", "question_toks": ["What", "is", "the", "id", "and", "weight", "of", "every", "pet", "who", "is", "older", "than", "1", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]]}}, {"db_id": "pets_1", "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the average and maximum age for each type of pet.", "question_toks": ["Find", "the", "average", "and", "maximum", "age", "for", "each", "type", "of", "pet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "What is the average and maximum age for each pet type?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "age", "for", "each", "pet", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the average weight for each pet type.", "question_toks": ["Find", "the", "average", "weight", "for", "each", "pet", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "What is the average weight for each type of pet?", "question_toks": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid"], "question": "Find the first name and age of students who have a pet.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "pet", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid"], "question": "What are the different first names and ages of the students who do have pets?", "question_toks": ["What", "are", "the", "different", "first", "names", "and", "ages", "of", "the", "students", "who", "do", "have", "pets", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "query_toks": ["SELECT", "T2.petid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.Lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t2", ".", "petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "lname", "=", "value"], "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "question_toks": ["Find", "the", "id", "of", "the", "pet", "owned", "by", "student", "whose", "last", "name", "is", "\u2018Smith\u2019", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]]}}, {"db_id": "pets_1", "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "query_toks": ["SELECT", "T2.petid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.Lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t2", ".", "petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "lname", "=", "value"], "question": "What is the id of the pet owned by the student whose last name is 'Smith'?", "question_toks": ["What", "is", "the", "id", "of", "the", "pet", "owned", "by", "the", "student", "whose", "last", "name", "is", "'Smith", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]]}}, {"db_id": "pets_1", "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid"], "question": "Find the number of pets for each student who has any pet and student id.", "question_toks": ["Find", "the", "number", "of", "pets", "for", "each", "student", "who", "has", "any", "pet", "and", "student", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid"], "question": "For students who have pets, how many pets does each student have?", "question_toks": ["For", "students", "who", "have", "pets", ",", "how", "many", "pets", "does", "each", "student", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.fname", ",", "T1.sex", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the first name and gender of student who have more than one pet.", "question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "student", "who", "have", "more", "than", "one", "pet", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.fname", ",", "T1.sex", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the first name and gender of the all the students who have more than one pet?", "question_toks": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "pets_1", "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "query_toks": ["SELECT", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pet_age", "=", "3", "AND", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pet_age", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "Find the last name of the student who has a cat that is age 3.", "question_toks": ["Find", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "age", "3", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}}, {"db_id": "pets_1", "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "query_toks": ["SELECT", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pet_age", "=", "3", "AND", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pet_age", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "What is the last name of the student who has a cat that is 3 years old?", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "3", "years", "old", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]]}}, {"db_id": "pets_1", "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", ")"], "question": "Find the average age of students who do not have any pet.", "question_toks": ["Find", "the", "average", "age", "of", "students", "who", "do", "not", "have", "any", "pet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "pets_1", "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", ")"], "question": "What is the average age for all students who do not own any pets?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "students", "who", "do", "not", "own", "any", "pets", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CONTINENTS;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CONTINENTS", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "continents"], "question": "How many continents are there?", "question_toks": ["How", "many", "continents", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CONTINENTS;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CONTINENTS", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "continents"], "question": "What is the number of continents?", "question_toks": ["What", "is", "the", "number", "of", "continents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "query_toks": ["SELECT", "T1.ContId", ",", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.Continent", "GROUP", "BY", "T1.ContId", ";"], "query_toks_no_value": ["select", "t1", ".", "contid", ",", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "group", "by", "t1", ".", "contid"], "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "question_toks": ["How", "many", "countries", "does", "each", "continent", "have", "?", "List", "the", "continent", "id", ",", "continent", "name", "and", "the", "number", "of", "countries", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "query_toks": ["SELECT", "T1.ContId", ",", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.Continent", "GROUP", "BY", "T1.ContId", ";"], "query_toks_no_value": ["select", "t1", ".", "contid", ",", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "group", "by", "t1", ".", "contid"], "question": "For each continent, list its id, name, and how many countries it has?", "question_toks": ["For", "each", "continent", ",", "list", "its", "id", ",", "name", ",", "and", "how", "many", "countries", "it", "has", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT count(*) FROM COUNTRIES;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "COUNTRIES", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries"], "question": "How many countries are listed?", "question_toks": ["How", "many", "countries", "are", "listed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT count(*) FROM COUNTRIES;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "COUNTRIES", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries"], "question": "How many countries exist?", "question_toks": ["How", "many", "countries", "exist", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", ",", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id"], "question": "How many models does each car maker produce? List maker full name, id and the number.", "question_toks": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", ",", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id"], "question": "What is the full name of each car maker, along with its id and how many models it produces?", "question_toks": ["What", "is", "the", "full", "name", "of", "each", "car", "maker", ",", "along", "with", "its", "id", "and", "how", "many", "models", "it", "produces", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.horsepower", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "horsepower", "asc", "limit", "value"], "question": "Which model of the car has the minimum horsepower?", "question_toks": ["Which", "model", "of", "the", "car", "has", "the", "minimum", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.horsepower", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "horsepower", "asc", "limit", "value"], "question": "What is the model of the car with the smallest amount of horsepower?", "question_toks": ["What", "is", "the", "model", "of", "the", "car", "with", "the", "smallest", "amount", "of", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "query_toks": ["SELECT", "T1.model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Weight", "<", "(", "SELECT", "avg", "(", "Weight", ")", "FROM", "CARS_DATA", ")"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")"], "question": "Find the model of the car whose weight is below the average weight.", "question_toks": ["Find", "the", "model", "of", "the", "car", "whose", "weight", "is", "below", "the", "average", "weight", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "query_toks": ["SELECT", "T1.model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Weight", "<", "(", "SELECT", "avg", "(", "Weight", ")", "FROM", "CARS_DATA", ")"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")"], "question": "What is the model for the car with a weight smaller than the average?", "question_toks": ["What", "is", "the", "model", "for", "the", "car", "with", "a", "weight", "smaller", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "query_toks": ["SELECT", "DISTINCT", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T3.MakeId", "=", "T4.id", "WHERE", "T4.year", "=", "'1970", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "join", "cars_data", "as", "t4", "on", "t3", ".", "makeid", "=", "t4", ".", "id", "where", "t4", ".", "year", "=", "value"], "question": "Find the name of the makers that produced some cars in the year of 1970?", "question_toks": ["Find", "the", "name", "of", "the", "makers", "that", "produced", "some", "cars", "in", "the", "year", "of", "1970", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "query_toks": ["SELECT", "DISTINCT", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T3.MakeId", "=", "T4.id", "WHERE", "T4.year", "=", "'1970", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "join", "cars_data", "as", "t4", "on", "t3", ".", "makeid", "=", "t4", ".", "id", "where", "t4", ".", "year", "=", "value"], "question": "What is the name of the different car makers who produced a car in 1970?", "question_toks": ["What", "is", "the", "name", "of", "the", "different", "car", "makers", "who", "produced", "a", "car", "in", "1970", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]]}}, {"db_id": "car_1", "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "query_toks": ["SELECT", "T2.Make", ",", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "CARS_DATA", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "make", ",", "t1", ".", "year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")"], "question": "Find the make and production time of the cars that were produced in the earliest year?", "question_toks": ["Find", "the", "make", "and", "production", "time", "of", "the", "cars", "that", "were", "produced", "in", "the", "earliest", "year", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 23, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "query_toks": ["SELECT", "T2.Make", ",", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "CARS_DATA", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "make", ",", "t1", ".", "year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")"], "question": "What is the maker of the carr produced in the earliest year and what year was it?", "question_toks": ["What", "is", "the", "maker", "of", "the", "carr", "produced", "in", "the", "earliest", "year", "and", "what", "year", "was", "it", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 23, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.model", "=", "T2.model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.id", "WHERE", "T3.year", ">", "1980", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "where", "t3", ".", "year", ">", "value"], "question": "Which distinct car models are the produced after 1980?", "question_toks": ["Which", "distinct", "car", "models", "are", "the", "produced", "after", "1980", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.model", "=", "T2.model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.id", "WHERE", "T3.year", ">", "1980", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "where", "t3", ".", "year", ">", "value"], "question": "What are the different models for the cards produced after 1980?", "question_toks": ["What", "are", "the", "different", "models", "for", "the", "cards", "produced", "after", "1980", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "query_toks": ["SELECT", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.continent", "JOIN", "car_makers", "AS", "T3", "ON", "T2.CountryId", "=", "T3.Country", "GROUP", "BY", "T1.Continent", ";"], "query_toks_no_value": ["select", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "join", "car_makers", "as", "t3", "on", "t2", ".", "countryid", "=", "t3", ".", "country", "group", "by", "t1", ".", "continent"], "question": "How many car makers are there in each continents? List the continent name and the count.", "question_toks": ["How", "many", "car", "makers", "are", "there", "in", "each", "continents", "?", "List", "the", "continent", "name", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "query_toks": ["SELECT", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.continent", "JOIN", "car_makers", "AS", "T3", "ON", "T2.CountryId", "=", "T3.Country", "GROUP", "BY", "T1.Continent", ";"], "query_toks_no_value": ["select", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "join", "car_makers", "as", "t3", "on", "t2", ".", "countryid", "=", "t3", ".", "country", "group", "by", "t1", ".", "continent"], "question": "What is the name of each continent and how many car makers are there in each one?", "question_toks": ["What", "is", "the", "name", "of", "each", "continent", "and", "how", "many", "car", "makers", "are", "there", "in", "each", "one", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.CountryName", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "GROUP", "BY", "T1.Country", "ORDER", "BY", "Count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which of the countries has the most car makers? List the country name.", "question_toks": ["Which", "of", "the", "countries", "has", "the", "most", "car", "makers", "?", "List", "the", "country", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.CountryName", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "GROUP", "BY", "T1.Country", "ORDER", "BY", "Count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the country with the most car makers?", "question_toks": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "car", "makers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "query_toks": ["SELECT", "Count", "(", "*", ")", ",", "T2.FullName", ",", "T2.id", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "GROUP", "BY", "T2.id", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "fullname", ",", "t2", ".", "id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "How many car models are produced by each maker? List the count and the maker full name.", "question_toks": ["How", "many", "car", "models", "are", "produced", "by", "each", "maker", "?", "List", "the", "count", "and", "the", "maker", "full", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "query_toks": ["SELECT", "Count", "(", "*", ")", ",", "T2.FullName", ",", "T2.id", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "GROUP", "BY", "T2.id", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "fullname", ",", "t2", ".", "id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "question_toks": ["What", "is", "the", "number", "of", "car", "models", "that", "are", "produced", "by", "each", "maker", "and", "what", "is", "the", "id", "and", "full", "name", "of", "each", "maker", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "query_toks": ["SELECT", "T1.Accelerate", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Make", "=", "'amc", "hornet", "sportabout", "(", "sw", ")", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "make", "=", "value"], "question": "What is the accelerate of the car make amc hornet sportabout (sw)?", "question_toks": ["What", "is", "the", "accelerate", "of", "the", "car", "make", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]]}}, {"db_id": "car_1", "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "query_toks": ["SELECT", "T1.Accelerate", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Make", "=", "'amc", "hornet", "sportabout", "(", "sw", ")", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "make", "=", "value"], "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "question_toks": ["How", "much", "does", "the", "car", "accelerate", "that", "makes", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "WHERE", "T2.CountryName", "=", "'france", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "where", "t2", ".", "countryname", "=", "value"], "question": "How many car makers are there in france?", "question_toks": ["How", "many", "car", "makers", "are", "there", "in", "france", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "WHERE", "T2.CountryName", "=", "'france", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "where", "t2", ".", "countryname", "=", "value"], "question": "What is the number of makers of care in France?", "question_toks": ["What", "is", "the", "number", "of", "makers", "of", "care", "in", "France", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "JOIN", "COUNTRIES", "AS", "T3", "ON", "T2.Country", "=", "T3.CountryId", "WHERE", "T3.CountryName", "=", "'usa", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "join", "countries", "as", "t3", "on", "t2", ".", "country", "=", "t3", ".", "countryid", "where", "t3", ".", "countryname", "=", "value"], "question": "How many car models are produced in the usa?", "question_toks": ["How", "many", "car", "models", "are", "produced", "in", "the", "usa", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "JOIN", "COUNTRIES", "AS", "T3", "ON", "T2.Country", "=", "T3.CountryId", "WHERE", "T3.CountryName", "=", "'usa", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "join", "countries", "as", "t3", "on", "t2", ".", "country", "=", "t3", ".", "countryid", "where", "t3", ".", "countryname", "=", "value"], "question": "What is the count of the car models produced in the United States?", "question_toks": ["What", "is", "the", "count", "of", "the", "car", "models", "produced", "in", "the", "United", "States", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]]}}, {"db_id": "car_1", "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "query_toks": ["SELECT", "avg", "(", "mpg", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", ";"], "query_toks_no_value": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value"], "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "(", "mpg", ")", "of", "the", "cars", "with", "4", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "query_toks": ["SELECT", "avg", "(", "mpg", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", ";"], "query_toks_no_value": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value"], "question": "What is the average miles per gallon of all the cards with 4 cylinders?", "question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "of", "all", "the", "cards", "with", "4", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;", "query_toks": ["SELECT", "Weight", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", "AND", "YEAR", "=", "1974", "ORDER", "BY", "Weight", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "weight", "from", "cars_data", "where", "cylinders", "=", "value", "and", "year", "=", "value", "order", "by", "weight", "asc", "limit", "value"], "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?", "question_toks": ["What", "is", "the", "smallest", "weight", "of", "the", "car", "produced", "with", "8", "cylinders", "on", "1974", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]]}}, {"db_id": "car_1", "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;", "query_toks": ["SELECT", "Weight", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", "AND", "YEAR", "=", "1974", "ORDER", "BY", "Weight", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "weight", "from", "cars_data", "where", "cylinders", "=", "value", "and", "year", "=", "value", "order", "by", "weight", "asc", "limit", "value"], "question": "What is the minimu weight of the car with 8 cylinders produced in 1974?", "question_toks": ["What", "is", "the", "minimu", "weight", "of", "the", "car", "with", "8", "cylinders", "produced", "in", "1974", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]]}}, {"db_id": "car_1", "query": "SELECT Maker ,  Model FROM MODEL_LIST;", "query_toks": ["SELECT", "Maker", ",", "Model", "FROM", "MODEL_LIST", ";"], "query_toks_no_value": ["select", "maker", ",", "model", "from", "model_list"], "question": "What are all the makers and models?", "question_toks": ["What", "are", "all", "the", "makers", "and", "models", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT Maker ,  Model FROM MODEL_LIST;", "query_toks": ["SELECT", "Maker", ",", "Model", "FROM", "MODEL_LIST", ";"], "query_toks_no_value": ["select", "maker", ",", "model", "from", "model_list"], "question": "What are the makers and models?", "question_toks": ["What", "are", "the", "makers", "and", "models", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "T1.CountryName", ",", "T1.CountryId", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", ",", "t1", ".", "countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the countries having at least one car maker? List name and id.", "question_toks": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "T1.CountryName", ",", "T1.CountryId", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", ",", "t1", ".", "countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names and ids of all countries with at least one car maker?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "countries", "with", "at", "least", "one", "car", "maker", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "horsepower", ">", "150", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "value"], "question": "What is the number of the cars with horsepower more than 150?", "question_toks": ["What", "is", "the", "number", "of", "the", "cars", "with", "horsepower", "more", "than", "150", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "horsepower", ">", "150", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "value"], "question": "What is the number of cars with a horsepower greater than 150?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "horsepower", "greater", "than", "150", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]]}}, {"db_id": "car_1", "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "query_toks": ["SELECT", "avg", "(", "Weight", ")", ",", "YEAR", "FROM", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year"], "question": "What is the average weight of cars each year?", "question_toks": ["What", "is", "the", "average", "weight", "of", "cars", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "query_toks": ["SELECT", "avg", "(", "Weight", ")", ",", "YEAR", "FROM", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year"], "question": "What is the average weight and year for each year?", "question_toks": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "query_toks": ["SELECT", "T1.CountryName", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CONTINENTS", "AS", "T2", "ON", "T1.Continent", "=", "T2.ContId", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T1.CountryId", "=", "T3.Country", "WHERE", "T2.Continent", "=", "'europe", "'", "GROUP", "BY", "T1.CountryName", "HAVING", "count", "(", "*", ")", ">", "=", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1", ".", "continent", "=", "t2", ".", "contid", "join", "car_makers", "as", "t3", "on", "t1", ".", "countryid", "=", "t3", ".", "country", "where", "t2", ".", "continent", "=", "value", "group", "by", "t1", ".", "countryname", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which countries in europe have at least 3 car manufacturers?", "question_toks": ["Which", "countries", "in", "europe", "have", "at", "least", "3", "car", "manufacturers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]]}}, {"db_id": "car_1", "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "query_toks": ["SELECT", "T1.CountryName", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CONTINENTS", "AS", "T2", "ON", "T1.Continent", "=", "T2.ContId", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T1.CountryId", "=", "T3.Country", "WHERE", "T2.Continent", "=", "'europe", "'", "GROUP", "BY", "T1.CountryName", "HAVING", "count", "(", "*", ")", ">", "=", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1", ".", "continent", "=", "t2", ".", "contid", "join", "car_makers", "as", "t3", "on", "t1", ".", "countryid", "=", "t3", ".", "country", "where", "t2", ".", "continent", "=", "value", "group", "by", "t1", ".", "countryname", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of all European countries with at least 3 manufacturers?", "question_toks": ["What", "are", "the", "names", "of", "all", "European", "countries", "with", "at", "least", "3", "manufacturers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]]}}, {"db_id": "car_1", "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T2.horsepower", ",", "T1.Make", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.cylinders", "=", "3", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "horsepower", ",", "t1", ".", "make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "question_toks": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]]}}, {"db_id": "car_1", "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T2.horsepower", ",", "T1.Make", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.cylinders", "=", "3", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "horsepower", ",", "t1", ".", "make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "question_toks": ["What", "is", "the", "largest", "amount", "of", "horsepower", "for", "the", "models", "with", "3", "cylinders", "and", "what", "make", "is", "it", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]]}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.mpg", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "mpg", "desc", "limit", "value"], "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "question_toks": ["Which", "model", "saves", "the", "most", "gasoline", "?", "That", "is", "to", "say", ",", "have", "the", "maximum", "miles", "per", "gallon", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.mpg", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "mpg", "desc", "limit", "value"], "question": "What is the car wmodel with the highest mpg?", "question_toks": ["What", "is", "the", "car", "wmodel", "with", "the", "highest", "mpg", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "query_toks": ["SELECT", "avg", "(", "horsepower", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "<", "1980", ";"], "query_toks_no_value": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "value"], "question": "What is the average horsepower of the cars before 1980?", "question_toks": ["What", "is", "the", "average", "horsepower", "of", "the", "cars", "before", "1980", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "query_toks": ["SELECT", "avg", "(", "horsepower", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "<", "1980", ";"], "query_toks_no_value": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "value"], "question": "What is the average horsepower for all cards produced before 1980?", "question_toks": ["What", "is", "the", "average", "horsepower", "for", "all", "cards", "produced", "before", "1980", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "query_toks": ["SELECT", "avg", "(", "T2.edispl", ")", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T1.Model", "=", "'volvo", "'", ";"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t1", ".", "model", "=", "value"], "question": "What is the average edispl of the cars of model volvo?", "question_toks": ["What", "is", "the", "average", "edispl", "of", "the", "cars", "of", "model", "volvo", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]]}}, {"db_id": "car_1", "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "query_toks": ["SELECT", "avg", "(", "T2.edispl", ")", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T1.Model", "=", "'volvo", "'", ";"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t1", ".", "model", "=", "value"], "question": "What is the average edispl for all volvos?", "question_toks": ["What", "is", "the", "average", "edispl", "for", "all", "volvos", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]]}}, {"db_id": "car_1", "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "query_toks": ["SELECT", "max", "(", "Accelerate", ")", ",", "Cylinders", "FROM", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders"], "question": "What is the maximum accelerate for different number of cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "different", "number", "of", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "query_toks": ["SELECT", "max", "(", "Accelerate", ")", ",", "Cylinders", "FROM", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders"], "question": "What is the maximum accelerate for all the different cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "all", "the", "different", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Model", "FROM", "CAR_NAMES", "GROUP", "BY", "Model", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which model has the most version(make) of cars?", "question_toks": ["Which", "model", "has", "the", "most", "version", "(", "make", ")", "of", "cars", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Model", "FROM", "CAR_NAMES", "GROUP", "BY", "Model", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What model has the most different versions?", "question_toks": ["What", "model", "has", "the", "most", "different", "versions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "4", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "How many cars have more than 4 cylinders?", "question_toks": ["How", "many", "cars", "have", "more", "than", "4", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "4", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "What is the number of cars with more than 4 cylinders?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "more", "than", "4", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "=", "1980", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "value"], "question": "how many cars were produced in 1980?", "question_toks": ["how", "many", "cars", "were", "produced", "in", "1980", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "=", "1980", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "value"], "question": "In 1980, how many cars were made?", "question_toks": ["In", "1980", ",", "how", "many", "cars", "were", "made", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "WHERE", "T1.FullName", "=", "'American", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "where", "t1", ".", "fullname", "=", "value"], "question": "How many car models were produced by the maker with full name American Motor Company?", "question_toks": ["How", "many", "car", "models", "were", "produced", "by", "the", "maker", "with", "full", "name", "American", "Motor", "Company", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]]}}, {"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "WHERE", "T1.FullName", "=", "'American", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "where", "t1", ".", "fullname", "=", "value"], "question": "What is the number of car models created by the car maker American Motor Company?", "question_toks": ["What", "is", "the", "number", "of", "car", "models", "created", "by", "the", "car", "maker", "American", "Motor", "Company", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]]}}, {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which makers designed more than 3 car models? List full name and the id.", "question_toks": ["Which", "makers", "designed", "more", "than", "3", "car", "models", "?", "List", "full", "name", "and", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names and ids of all makers with more than 3 models?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "query_toks": ["SELECT", "DISTINCT", "T2.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T2.Maker", "=", "T3.Id", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T1.MakeId", "=", "T4.Id", "WHERE", "T3.FullName", "=", "'General", "Motors", "'", "OR", "T4.weight", ">", "3500", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "car_makers", "as", "t3", "on", "t2", ".", "maker", "=", "t3", ".", "id", "join", "cars_data", "as", "t4", "on", "t1", ".", "makeid", "=", "t4", ".", "id", "where", "t3", ".", "fullname", "=", "value", "or", "t4", ".", "weight", ">", "value"], "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "question_toks": ["Which", "distinctive", "models", "are", "produced", "by", "maker", "with", "the", "full", "name", "General", "Motors", "or", "weighing", "more", "than", "3500", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "query_toks": ["SELECT", "DISTINCT", "T2.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T2.Maker", "=", "T3.Id", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T1.MakeId", "=", "T4.Id", "WHERE", "T3.FullName", "=", "'General", "Motors", "'", "OR", "T4.weight", ">", "3500", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "car_makers", "as", "t3", "on", "t2", ".", "maker", "=", "t3", ".", "id", "join", "cars_data", "as", "t4", "on", "t1", ".", "makeid", "=", "t4", ".", "id", "where", "t3", ".", "fullname", "=", "value", "or", "t4", ".", "weight", ">", "value"], "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "question_toks": ["What", "are", "the", "different", "models", "created", "by", "either", "the", "car", "maker", "General", "Motors", "or", "weighed", "more", "than", "3500", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;", "query_toks": ["SELECT", "DISTINCT", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "WHERE", "T1.Weight", ">", "3000", "AND", "T1.weight", "<", "4000", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "year", "from", "cars_data", "as", "t1", "where", "t1", ".", "weight", ">", "value", "and", "t1", ".", "weight", "<", "value"], "question": "In which years cars were produced weighing no less than 3000 and no more than 4000?", "question_toks": ["In", "which", "years", "cars", "were", "produced", "weighing", "no", "less", "than", "3000", "and", "no", "more", "than", "4000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], 3000.0, null], "and", [false, 4, [0, [0, 21, false], null], 4000.0, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;", "query_toks": ["SELECT", "DISTINCT", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "WHERE", "T1.Weight", ">", "3000", "AND", "T1.weight", "<", "4000", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "year", "from", "cars_data", "as", "t1", "where", "t1", ".", "weight", ">", "value", "and", "t1", ".", "weight", "<", "value"], "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?", "question_toks": ["What", "are", "the", "different", "years", "in", "which", "there", "were", "cars", "produced", "that", "weighed", "less", "than", "4000", "and", "also", "cars", "that", "weighted", "more", "than", "3000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], 3000.0, null], "and", [false, 4, [0, [0, 21, false], null], 4000.0, null]]}}, {"db_id": "car_1", "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "query_toks": ["SELECT", "T1.horsepower", "FROM", "CARS_DATA", "AS", "T1", "ORDER", "BY", "T1.accelerate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1", ".", "accelerate", "desc", "limit", "value"], "question": "What is the horsepower of the car with the largest accelerate?", "question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "largest", "accelerate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "query_toks": ["SELECT", "T1.horsepower", "FROM", "CARS_DATA", "AS", "T1", "ORDER", "BY", "T1.accelerate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1", ".", "accelerate", "desc", "limit", "value"], "question": "What is the horsepower of the car with the greatest accelerate?", "question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "greatest", "accelerate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "query_toks": ["SELECT", "T1.cylinders", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Model", "=", "'volvo", "'", "ORDER", "BY", "T1.accelerate", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "model", "=", "value", "order", "by", "t1", ".", "accelerate", "asc", "limit", "value"], "question": "For model volvo, how many cylinders does the car with the least accelerate have?", "question_toks": ["For", "model", "volvo", ",", "how", "many", "cylinders", "does", "the", "car", "with", "the", "least", "accelerate", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]]}}, {"db_id": "car_1", "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "query_toks": ["SELECT", "T1.cylinders", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Model", "=", "'volvo", "'", "ORDER", "BY", "T1.accelerate", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "model", "=", "value", "order", "by", "t1", ".", "accelerate", "asc", "limit", "value"], "question": "For a volvo model, how many cylinders does the version with least accelerate have?", "question_toks": ["For", "a", "volvo", "model", ",", "how", "many", "cylinders", "does", "the", "version", "with", "least", "accelerate", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]]}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Accelerate", ">", "(", "SELECT", "Accelerate", "FROM", "CARS_DATA", "ORDER", "BY", "Horsepower", "DESC", "LIMIT", "1", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "value", ")"], "question": "How many cars have a larger accelerate than the car with the largest horsepower?", "question_toks": ["How", "many", "cars", "have", "a", "larger", "accelerate", "than", "the", "car", "with", "the", "largest", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 22, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Accelerate", ">", "(", "SELECT", "Accelerate", "FROM", "CARS_DATA", "ORDER", "BY", "Horsepower", "DESC", "LIMIT", "1", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "value", ")"], "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "greater", "accelerate", "than", "the", "one", "with", "the", "most", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 22, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.CountryId", ",", "COUNT", "(", "*", ")", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "2", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "countryid", ",", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", ")"], "question": "How many countries has more than 2 car makers?", "question_toks": ["How", "many", "countries", "has", "more", "than", "2", "car", "makers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["sql", {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.CountryId", ",", "COUNT", "(", "*", ")", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "2", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "countryid", ",", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", ")"], "question": "What is the number of countries with more than 2 car makers?", "question_toks": ["What", "is", "the", "number", "of", "countries", "with", "more", "than", "2", "car", "makers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["sql", {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "6", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "How many cars has over 6 cylinders?", "question_toks": ["How", "many", "cars", "has", "over", "6", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]]}}, {"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "6", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "What is the number of carsw ith over 6 cylinders?", "question_toks": ["What", "is", "the", "number", "of", "carsw", "ith", "over", "6", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]]}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Cylinders", "=", "4", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "For the cars with 4 cylinders, which model has the largest horsepower?", "question_toks": ["For", "the", "cars", "with", "4", "cylinders", ",", "which", "model", "has", "the", "largest", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Cylinders", "=", "4", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "For all of the 4 cylinder cars, which model has the most horsepower?", "question_toks": ["For", "all", "of", "the", "4", "cylinder", "cars", ",", "which", "model", "has", "the", "most", "horsepower", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]]}}, {"db_id": "car_1", "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "query_toks": ["SELECT", "T2.MakeId", ",", "T2.Make", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Horsepower", ">", "(", "SELECT", "min", "(", "Horsepower", ")", "FROM", "CARS_DATA", ")", "AND", "T1.Cylinders", "<", "=", "3", ";"], "query_toks_no_value": ["select", "t2", ".", "makeid", ",", "t2", ".", "make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1", ".", "cylinders", "<", "=", "value"], "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "question_toks": ["Among", "the", "cars", "with", "more", "than", "lowest", "horsepower", ",", "which", "ones", "do", "not", "have", "more", "than", "3", "cylinders", "?", "List", "the", "car", "makeid", "and", "make", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 20, false], null]]]], "union": null, "where": []}, null], "and", [false, 6, [0, [0, 18, false], null], 3.0, null]]}}, {"db_id": "car_1", "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "query_toks": ["SELECT", "T2.MakeId", ",", "T2.Make", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Horsepower", ">", "(", "SELECT", "min", "(", "Horsepower", ")", "FROM", "CARS_DATA", ")", "AND", "T1.Cylinders", "<", "=", "3", ";"], "query_toks_no_value": ["select", "t2", ".", "makeid", ",", "t2", ".", "make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1", ".", "cylinders", "<", "=", "value"], "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?", "question_toks": ["Among", "the", "cars", "that", "do", "not", "have", "the", "minimum", "horsepower", ",", "what", "are", "the", "make", "ids", "and", "names", "of", "al", "those", "with", "less", "than", "4", "cylinders", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 5], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 20, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 20, false], null]]]], "union": null, "where": []}, null], "and", [false, 6, [0, [0, 18, false], null], 3.0, null]]}}, {"db_id": "car_1", "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;", "query_toks": ["SELECT", "mpg", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "8", "OR", "YEAR", "<", "1980", "ORDER", "BY", "mpg", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "mpg", "from", "cars_data", "where", "cylinders", "=", "value", "or", "year", "<", "value", "order", "by", "mpg", "desc", "limit", "value"], "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?", "question_toks": ["What", "is", "the", "maximum", "miles", "per", "gallon", "of", "the", "car", "with", "8", "cylinders", "or", "produced", "before", "1980", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;", "query_toks": ["SELECT", "mpg", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "8", "OR", "YEAR", "<", "1980", "ORDER", "BY", "mpg", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "mpg", "from", "cars_data", "where", "cylinders", "=", "value", "or", "year", "<", "value", "order", "by", "mpg", "desc", "limit", "value"], "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?", "question_toks": ["What", "is", "the", "maximum", "mpg", "of", "the", "cars", "that", "had", "8", "cylinders", "or", "that", "were", "produced", "before", "1980", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.Id", "JOIN", "CAR_MAKERS", "AS", "T4", "ON", "T1.Maker", "=", "T4.Id", "WHERE", "T3.weight", "<", "3500", "AND", "T4.FullName", "!", "=", "'Ford", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "join", "car_makers", "as", "t4", "on", "t1", ".", "maker", "=", "t4", ".", "id", "where", "t3", ".", "weight", "<", "value", "and", "t4", ".", "fullname", "!", "=", "value"], "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "question_toks": ["Which", "models", "are", "lighter", "than", "3500", "but", "not", "built", "by", "the", "'Ford", "Motor", "Company", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]]}}, {"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.Id", "JOIN", "CAR_MAKERS", "AS", "T4", "ON", "T1.Maker", "=", "T4.Id", "WHERE", "T3.weight", "<", "3500", "AND", "T4.FullName", "!", "=", "'Ford", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "join", "car_makers", "as", "t4", "on", "t1", ".", "maker", "=", "t4", ".", "id", "where", "t3", ".", "weight", "<", "value", "and", "t4", ".", "fullname", "!", "=", "value"], "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "question_toks": ["What", "are", "the", "different", "models", "wthat", "are", "lighter", "than", "3500", "but", "were", "not", "built", "by", "the", "Ford", "Motor", "Company", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]]}}, {"db_id": "car_1", "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "query_toks": ["SELECT", "CountryName", "FROM", "countries", "EXCEPT", "SELECT", "T1.CountryName", "FROM", "countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.countryId", "=", "T2.Country", ";"], "query_toks_no_value": ["select", "countryname", "from", "countries", "except", "select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country"], "question": "What are the name of the countries where there is not a single car maker?", "question_toks": ["What", "are", "the", "name", "of", "the", "countries", "where", "there", "is", "not", "a", "single", "car", "maker", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "query_toks": ["SELECT", "CountryName", "FROM", "countries", "EXCEPT", "SELECT", "T1.CountryName", "FROM", "countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.countryId", "=", "T2.Country", ";"], "query_toks_no_value": ["select", "countryname", "from", "countries", "except", "select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country"], "question": "What are the names of the countries with no car makers?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "with", "no", "car", "makers", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "INTERSECT", "SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value", "intersect", "select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.", "question_toks": ["Which", "are", "the", "car", "makers", "which", "produce", "at", "least", "2", "models", "and", "more", "than", "3", "car", "makes", "?", "List", "the", "id", "and", "the", "maker", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "INTERSECT", "SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value", "intersect", "select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "question_toks": ["What", "are", "the", "ids", "and", "makers", "of", "all", "car", "makers", "that", "produce", "at", "least", "2", "models", "and", "make", "more", "than", "3", "cars", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "query_toks": ["SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.countryId", "HAVING", "count", "(", "*", ")", ">", "3", "UNION", "SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "JOIN", "MODEL_LIST", "AS", "T3", "ON", "T2.Id", "=", "T3.Maker", "WHERE", "T3.Model", "=", "'fiat", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "join", "model_list", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "maker", "where", "t3", ".", "model", "=", "value"], "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "question_toks": ["What", "are", "the", "id", "and", "names", "of", "the", "countries", "which", "have", "more", "than", "3", "car", "makers", "or", "produce", "the", "'fiat", "'", "model", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]]}, "where": []}}, {"db_id": "car_1", "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "query_toks": ["SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.countryId", "HAVING", "count", "(", "*", ")", ">", "3", "UNION", "SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "JOIN", "MODEL_LIST", "AS", "T3", "ON", "T2.Id", "=", "T3.Maker", "WHERE", "T3.Model", "=", "'fiat", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "join", "model_list", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "maker", "where", "t3", ".", "model", "=", "value"], "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiats", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]]}, "where": []}}, {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "Which country does Airline \"JetBlue Airways\" belong to?", "question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "What country is Jetblue Airways affiliated with?", "question_toks": ["What", "country", "is", "Jetblue", "Airways", "affiliated", "with", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "question_toks": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "Which abbreviation corresponds to Jetblue Airways?", "question_toks": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "List all airline names and their abbreviations in \"USA\".", "question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "What are the airline names and abbreviations for airlines in the USA?", "question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "List the airport code and name in the city of Anthony.", "question_toks": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "Give the airport code and airport name corresonding to the city Anthony.", "question_toks": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "How many airlines do we have?", "question_toks": ["How", "many", "airlines", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "How many airports do we have?", "question_toks": ["How", "many", "airports", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "Return the number of  airports.", "question_toks": ["Return", "the", "number", "of", "airports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "How many flights do we have?", "question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "Return the number of flights.", "question_toks": ["Return", "the", "number", "of", "flights", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Which airline has abbreviation 'UAL'?", "question_toks": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]]}}, {"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Give the airline with abbreviation 'UAL'.", "question_toks": ["Give", "the", "airline", "with", "abbreviation", "'UAL", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "How many airlines are from USA?", "question_toks": ["How", "many", "airlines", "are", "from", "USA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "Return the number of airlines in the USA.", "question_toks": ["Return", "the", "number", "of", "airlines", "in", "the", "USA", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Which city and country is the Alton airport at?", "question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]]}}, {"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Give the city and country for the Alton airport.", "question_toks": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "What is the airport name for airport 'AKO'?", "question_toks": ["What", "is", "the", "airport", "name", "for", "airport", "'AKO", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "Return the name of the airport with code 'AKO'.", "question_toks": ["Return", "the", "name", "of", "the", "airport", "with", "code", "'AKO", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are airport names at City 'Aberdeen'?", "question_toks": ["What", "are", "airport", "names", "at", "City", "'Aberdeen", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are the names of airports in Aberdeen?", "question_toks": ["What", "are", "the", "names", "of", "airports", "in", "Aberdeen", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "How many flights depart from 'APG'?", "question_toks": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Count the number of flights departing from 'APG'.", "question_toks": ["Count", "the", "number", "of", "flights", "departing", "from", "'APG", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "How many flights have destination ATO?", "question_toks": ["How", "many", "flights", "have", "destination", "ATO", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "Count the number of flights into ATO.", "question_toks": ["Count", "the", "number", "of", "flights", "into", "ATO", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights depart from City Aberdeen?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights departing from Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "departing", "from", "Aberdeen", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights arriving in Aberdeen city?", "question_toks": ["How", "many", "flights", "arriving", "in", "Aberdeen", "city", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights arriving in Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "arriving", "in", "Aberdeen", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights fly from Aberdeen to Ashley?", "question_toks": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "How many flights does airline 'JetBlue Airways' have?", "question_toks": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "Give the number of Jetblue Airways flights.", "question_toks": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "How many 'United Airlines' flights go to Airport 'ASY'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "go", "to", "Airport", "'ASY", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "Count the number of United Airlines flights arriving in ASY Airport.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "Return the number of United Airlines flights leaving from AHD Airport.", "question_toks": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "How many United Airlines flights go to City 'Aberdeen'?", "question_toks": ["How", "many", "United", "Airlines", "flights", "go", "to", "City", "'Aberdeen", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "Count the number of United Airlines flights that arrive in Aberdeen.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "that", "arrive", "in", "Aberdeen", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of arriving flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has the most frequent destination airport?", "question_toks": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of departing flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "departing", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city is the most frequent source airport?", "question_toks": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of airport that has the highest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the airport code of the airport with the most flights?", "question_toks": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the code of airport that has fewest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "fewest", "number", "of", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Give the code of the airport with the least flights.", "question_toks": ["Give", "the", "code", "of", "the", "airport", "with", "the", "least", "flights", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which airline has most number of flights?", "question_toks": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What airline serves the most flights?", "question_toks": ["What", "airline", "serves", "the", "most", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "question_toks": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "What are airlines that have some flight departing from airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have a flight with source airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "What are airlines that have flights arriving at airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "Which airlines have a flight with destination airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "destination", "airport", "AHD", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "both", "airports", "'APG", "'", "and", "'CVO", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departing flights from both APG and CVO airports?", "question_toks": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "airport", "'CVO", "'", "but", "not", "from", "'APG", "'", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departures from CVO but not from APG airports?", "question_toks": ["Which", "airlines", "have", "departures", "from", "CVO", "but", "not", "from", "APG", "airports", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Find all airlines that have at least 10 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "at", "least", "10", "flights", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Which airlines have at least 10 flights?", "question_toks": ["Which", "airlines", "have", "at", "least", "10", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Find all airlines that have fewer than 200 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Which airlines have less than 200 flights?", "question_toks": ["Which", "airlines", "have", "less", "than", "200", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "What are flight numbers of Airline \"United Airlines\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "Airline", "``", "United", "Airlines", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "Which flight numbers correspond to United Airlines flights?", "question_toks": ["Which", "flight", "numbers", "correspond", "to", "United", "Airlines", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]]}}, {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "What are flight numbers of flights departing from Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "Airport", "``", "APG", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Give the flight numbers of flights leaving from APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "APG", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "What are flight numbers of flights arriving at Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "Airport", "``", "APG", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "Give the flight numbers of flights landing at APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "landing", "at", "APG", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights leaving from Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "Aberdeen", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights arriving in Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "Find the number of flights landing in the city of Aberdeen or Abilene.", "question_toks": ["Find", "the", "number", "of", "flights", "landing", "in", "the", "city", "of", "Aberdeen", "or", "Abilene", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]]}}, {"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "How many flights land in Aberdeen or Abilene?", "question_toks": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Find the name of airports which do not have any flight in and out.", "question_toks": ["Find", "the", "name", "of", "airports", "which", "do", "not", "have", "any", "flight", "in", "and", "out", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, "where": []}, null]]}}, {"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Which airports do not have departing or arriving flights?", "question_toks": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) FROM employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "How many employees are there?", "question_toks": ["How", "many", "employees", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) FROM employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "Count the number of employees", "question_toks": ["Count", "the", "number", "of", "employees"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee ORDER BY age", "query_toks": ["SELECT", "name", "FROM", "employee", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "age"], "question": "Sort employee names by their age in ascending order.", "question_toks": ["Sort", "employee", "names", "by", "their", "age", "in", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee ORDER BY age", "query_toks": ["SELECT", "name", "FROM", "employee", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "age"], "question": "List the names of employees and sort in ascending order of age.", "question_toks": ["List", "the", "names", "of", "employees", "and", "sort", "in", "ascending", "order", "of", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  city FROM employee GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city"], "question": "What is the number of employees from each city?", "question_toks": ["What", "is", "the", "number", "of", "employees", "from", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  city FROM employee GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city"], "question": "Count the number of employees for each city.", "question_toks": ["Count", "the", "number", "of", "employees", "for", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", "FROM", "employee", "WHERE", "age", "<", "30", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", "from", "employee", "where", "age", "<", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Which cities do more than one employee under age 30 come from?", "question_toks": ["Which", "cities", "do", "more", "than", "one", "employee", "under", "age", "30", "come", "from", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", "FROM", "employee", "WHERE", "age", "<", "30", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", "from", "employee", "where", "age", "<", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the cities that have more than one employee under age 30.", "question_toks": ["Find", "the", "cities", "that", "have", "more", "than", "one", "employee", "under", "age", "30", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "LOCATION", "FROM", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location"], "question": "Find the number of shops in each location.", "question_toks": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "LOCATION", "FROM", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location"], "question": "How many shops are there in each location?", "question_toks": ["How", "many", "shops", "are", "there", "in", "each", "location", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "query_toks": ["SELECT", "manager_name", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "value"], "question": "Find the manager name and district of the shop whose number of products is the largest.", "question_toks": ["Find", "the", "manager", "name", "and", "district", "of", "the", "shop", "whose", "number", "of", "products", "is", "the", "largest", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "query_toks": ["SELECT", "manager_name", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "value"], "question": "What are the manager name and district of the shop that sells the largest number of products?", "question_toks": ["What", "are", "the", "manager", "name", "and", "district", "of", "the", "shop", "that", "sells", "the", "largest", "number", "of", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "query_toks": ["SELECT", "min", "(", "Number_products", ")", ",", "max", "(", "Number_products", ")", "FROM", "shop"], "query_toks_no_value": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop"], "question": "find the minimum and maximum number of products of all stores.", "question_toks": ["find", "the", "minimum", "and", "maximum", "number", "of", "products", "of", "all", "stores", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "query_toks": ["SELECT", "min", "(", "Number_products", ")", ",", "max", "(", "Number_products", ")", "FROM", "shop"], "query_toks_no_value": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop"], "question": "What are the minimum and maximum number of products across all the shops?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "number", "of", "products", "across", "all", "the", "shops", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc"], "question": "Return the name, location and district of all shops in descending order of number of products.", "question_toks": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc"], "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "question_toks": ["Sort", "all", "the", "shops", "by", "number", "products", "in", "descending", "order", ",", "and", "return", "the", "name", ",", "location", "and", "district", "of", "each", "shop", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "number_products", ">", "(", "SELECT", "avg", "(", "number_products", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")"], "question": "Find the names of stores whose number products is more than the average number of products.", "question_toks": ["Find", "the", "names", "of", "stores", "whose", "number", "products", "is", "more", "than", "the", "average", "number", "of", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "number_products", ">", "(", "SELECT", "avg", "(", "number_products", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")"], "question": "Which shops' number products is above the average? Give me the shop names.", "question_toks": ["Which", "shops", "'", "number", "products", "is", "above", "the", "average", "?", "Give", "me", "the", "shop", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "GROUP", "BY", "t2.Employee_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "group", "by", "t2", ".", "employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the name of employee who was awarded the most times in the evaluation.", "question_toks": ["find", "the", "name", "of", "employee", "who", "was", "awarded", "the", "most", "times", "in", "the", "evaluation", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "GROUP", "BY", "t2.Employee_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "group", "by", "t2", ".", "employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which employee received the most awards in evaluations? Give me the employee name.", "question_toks": ["Which", "employee", "received", "the", "most", "awards", "in", "evaluations", "?", "Give", "me", "the", "employee", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "ORDER", "BY", "t2.bonus", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "order", "by", "t2", ".", "bonus", "desc", "limit", "value"], "question": "Find the name of the employee who got the highest one time bonus.", "question_toks": ["Find", "the", "name", "of", "the", "employee", "who", "got", "the", "highest", "one", "time", "bonus", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "ORDER", "BY", "t2.bonus", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "order", "by", "t2", ".", "bonus", "desc", "limit", "value"], "question": "Which employee received the biggest bonus? Give me the employee name.", "question_toks": ["Which", "employee", "received", "the", "biggest", "bonus", "?", "Give", "me", "the", "employee", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "query_toks": ["SELECT", "name", "FROM", "employee", "WHERE", "Employee_ID", "NOT", "IN", "(", "SELECT", "Employee_ID", "FROM", "evaluation", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")"], "question": "Find the names of employees who never won any award in the evaluation.", "question_toks": ["Find", "the", "names", "of", "employees", "who", "never", "won", "any", "award", "in", "the", "evaluation", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "query_toks": ["SELECT", "name", "FROM", "employee", "WHERE", "Employee_ID", "NOT", "IN", "(", "SELECT", "Employee_ID", "FROM", "evaluation", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")"], "question": "What are the names of the employees who never received any evaluation?", "question_toks": ["What", "are", "the", "names", "of", "the", "employees", "who", "never", "received", "any", "evaluation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t1.shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t1", ".", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the shop that is hiring the largest number of employees?", "question_toks": ["What", "is", "the", "name", "of", "the", "shop", "that", "is", "hiring", "the", "largest", "number", "of", "employees", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t1.shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t1", ".", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which shop has the most employees? Give me the shop name.", "question_toks": ["Which", "shop", "has", "the", "most", "employees", "?", "Give", "me", "the", "shop", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "hiring", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")"], "question": "Find the name of the shops that do not hire any employee.", "question_toks": ["Find", "the", "name", "of", "the", "shops", "that", "do", "not", "hire", "any", "employee", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "hiring", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")"], "question": "Which shops run with no employees? Find the shop names", "question_toks": ["Which", "shops", "run", "with", "no", "employees", "?", "Find", "the", "shop", "names"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t2", ".", "name"], "question": "Find the number of employees hired in each shop; show the shop name as well.", "question_toks": ["Find", "the", "number", "of", "employees", "hired", "in", "each", "shop", ";", "show", "the", "shop", "name", "as", "well", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t2", ".", "name"], "question": "For each shop, return the number of employees working there and the name of the shop.", "question_toks": ["For", "each", "shop", ",", "return", "the", "number", "of", "employees", "working", "there", "and", "the", "name", "of", "the", "shop", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT sum(bonus) FROM evaluation", "query_toks": ["SELECT", "sum", "(", "bonus", ")", "FROM", "evaluation"], "query_toks_no_value": ["select", "sum", "(", "bonus", ")", "from", "evaluation"], "question": "What is total bonus given in all evaluations?", "question_toks": ["What", "is", "total", "bonus", "given", "in", "all", "evaluations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT sum(bonus) FROM evaluation", "query_toks": ["SELECT", "sum", "(", "bonus", ")", "FROM", "evaluation"], "query_toks_no_value": ["select", "sum", "(", "bonus", ")", "from", "evaluation"], "question": "Find the total amount of bonus given in all the evaluations.", "question_toks": ["Find", "the", "total", "amount", "of", "bonus", "given", "in", "all", "the", "evaluations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring", "query_toks": ["SELECT", "*", "FROM", "hiring"], "query_toks_no_value": ["select", "*", "from", "hiring"], "question": "Give me all the information about hiring.", "question_toks": ["Give", "me", "all", "the", "information", "about", "hiring", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring", "query_toks": ["SELECT", "*", "FROM", "hiring"], "query_toks_no_value": ["select", "*", "from", "hiring"], "question": "What is all the information about hiring?", "question_toks": ["What", "is", "all", "the", "information", "about", "hiring", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "query_toks": ["SELECT", "district", "FROM", "shop", "WHERE", "Number_products", "<", "3000", "INTERSECT", "SELECT", "district", "FROM", "shop", "WHERE", "Number_products", ">", "10000"], "query_toks_no_value": ["select", "district", "from", "shop", "where", "number_products", "<", "value", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "value"], "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "question_toks": ["Which", "district", "has", "both", "stores", "with", "less", "than", "3000", "products", "and", "stores", "with", "more", "than", "10000", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "query_toks": ["SELECT", "district", "FROM", "shop", "WHERE", "Number_products", "<", "3000", "INTERSECT", "SELECT", "district", "FROM", "shop", "WHERE", "Number_products", ">", "10000"], "query_toks_no_value": ["select", "district", "from", "shop", "where", "number_products", "<", "value", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "value"], "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "question_toks": ["Find", "the", "districts", "in", "which", "there", "are", "both", "shops", "selling", "less", "than", "3000", "products", "and", "shops", "selling", "more", "than", "10000", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]]}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(DISTINCT LOCATION) FROM shop", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LOCATION", ")", "FROM", "shop"], "query_toks_no_value": ["select", "count", "(", "distinct", "location", ")", "from", "shop"], "question": "How many different store locations are there?", "question_toks": ["How", "many", "different", "store", "locations", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 7, true], null]]]], "union": null, "where": []}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(DISTINCT LOCATION) FROM shop", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LOCATION", ")", "FROM", "shop"], "query_toks_no_value": ["select", "count", "(", "distinct", "location", ")", "from", "shop"], "question": "Count the number of distinct store locations.", "question_toks": ["Count", "the", "number", "of", "distinct", "store", "locations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 7, true], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents"], "question": "How many documents do we have?", "question_toks": ["How", "many", "documents", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents"], "question": "Count the number of documents.", "question_toks": ["Count", "the", "number", "of", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", ",", "document_description", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents"], "question": "List document IDs, document names, and document descriptions for all documents.", "question_toks": ["List", "document", "IDs", ",", "document", "names", ",", "and", "document", "descriptions", "for", "all", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", ",", "document_description", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents"], "question": "What are the ids, names, and descriptions for all documents?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "document_name", ",", "template_id", "FROM", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value"], "question": "What is the document name and template id for document with description with the letter 'w' in it?", "question_toks": ["What", "is", "the", "document", "name", "and", "template", "id", "for", "document", "with", "description", "with", "the", "letter", "'w", "'", "in", "it", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "document_name", ",", "template_id", "FROM", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value"], "question": "Return the names and template ids for documents that contain the letter w in their description.", "question_toks": ["Return", "the", "names", "and", "template", "ids", "for", "documents", "that", "contain", "the", "letter", "w", "in", "their", "description", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "document_id", ",", "template_id", ",", "Document_Description", "FROM", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value"], "question": "What is the document id, template id and description for document named \"Robbin CV\"?", "question_toks": ["What", "is", "the", "document", "id", ",", "template", "id", "and", "description", "for", "document", "named", "``", "Robbin", "CV", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "document_id", ",", "template_id", ",", "Document_Description", "FROM", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value"], "question": "Return the document id, template id, and description for the document with the name Robbin CV.", "question_toks": ["Return", "the", "document", "id", ",", "template", "id", ",", "and", "description", "for", "the", "document", "with", "the", "name", "Robbin", "CV", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(DISTINCT template_id) FROM Documents", "query_toks": ["SELECT", "count", "(", "DISTINCT", "template_id", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents"], "question": "How many different templates do all document use?", "question_toks": ["How", "many", "different", "templates", "do", "all", "document", "use", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 10, true], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(DISTINCT template_id) FROM Documents", "query_toks": ["SELECT", "count", "(", "DISTINCT", "template_id", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents"], "question": "Count the number of different templates used for documents.", "question_toks": ["Count", "the", "number", "of", "different", "templates", "used", "for", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 10, true], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.Template_ID", "=", "T2.Template_ID", "WHERE", "T2.Template_Type_Code", "=", "'PPT", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "template_type_code", "=", "value"], "question": "How many documents are using the template with type code 'PPT'?", "question_toks": ["How", "many", "documents", "are", "using", "the", "template", "with", "type", "code", "'PPT", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.Template_ID", "=", "T2.Template_ID", "WHERE", "T2.Template_Type_Code", "=", "'PPT", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "template_type_code", "=", "value"], "question": "Count the number of documents that use the PPT template type.", "question_toks": ["Count", "the", "number", "of", "documents", "that", "use", "the", "PPT", "template", "type", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "query_toks": ["SELECT", "template_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id"], "question": "Show all template ids and number of documents using each template.", "question_toks": ["Show", "all", "template", "ids", "and", "number", "of", "documents", "using", "each", "template", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "query_toks": ["SELECT", "template_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id"], "question": "What are all different template ids used for documents, and how many times were each of them used?", "question_toks": ["What", "are", "all", "different", "template", "ids", "used", "for", "documents", ",", "and", "how", "many", "times", "were", "each", "of", "them", "used", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_id", ",", "T2.Template_Type_Code", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_id", ",", "t2", ".", "template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and type code for the template used by the most documents?", "question_toks": ["What", "is", "the", "id", "and", "type", "code", "for", "the", "template", "used", "by", "the", "most", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_id", ",", "T2.Template_Type_Code", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_id", ",", "t2", ".", "template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id and type code of the template that is used for the greatest number of documents.", "question_toks": ["Return", "the", "id", "and", "type", "code", "of", "the", "template", "that", "is", "used", "for", "the", "greatest", "number", "of", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "query_toks": ["SELECT", "template_id", "FROM", "Documents", "GROUP", "BY", "template_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show ids for all templates that are used by more than one document.", "question_toks": ["Show", "ids", "for", "all", "templates", "that", "are", "used", "by", "more", "than", "one", "document", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "query_toks": ["SELECT", "template_id", "FROM", "Documents", "GROUP", "BY", "template_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the template ids of any templates used in more than a single document?", "question_toks": ["What", "are", "the", "template", "ids", "of", "any", "templates", "used", "in", "more", "than", "a", "single", "document", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "EXCEPT", "SELECT", "template_id", "FROM", "Documents"], "query_toks_no_value": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents"], "question": "Show ids for all templates not used by any document.", "question_toks": ["Show", "ids", "for", "all", "templates", "not", "used", "by", "any", "document", "."], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "EXCEPT", "SELECT", "template_id", "FROM", "Documents"], "query_toks_no_value": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents"], "question": "What are the ids for templates that are not used in any documents?", "question_toks": ["What", "are", "the", "ids", "for", "templates", "that", "are", "not", "used", "in", "any", "documents", "?"], "sql": {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates"], "question": "How many templates do we have?", "question_toks": ["How", "many", "templates", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates"], "question": "Count the number of templates.", "question_toks": ["Count", "the", "number", "of", "templates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "query_toks": ["SELECT", "template_id", ",", "version_number", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates"], "question": "Show template ids, version numbers, and template type codes for all templates.", "question_toks": ["Show", "template", "ids", ",", "version", "numbers", ",", "and", "template", "type", "codes", "for", "all", "templates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "query_toks": ["SELECT", "template_id", ",", "version_number", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates"], "question": "What are the ids, version numbers, and type codes for each template?", "question_toks": ["What", "are", "the", "ids", ",", "version", "numbers", ",", "and", "type", "codes", "for", "each", "template", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT template_type_code FROM Templates", "query_toks": ["SELECT", "DISTINCT", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "distinct", "template_type_code", "from", "templates"], "question": "Show all distinct template type codes for all templates.", "question_toks": ["Show", "all", "distinct", "template", "type", "codes", "for", "all", "templates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT template_type_code FROM Templates", "query_toks": ["SELECT", "DISTINCT", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "distinct", "template_type_code", "from", "templates"], "question": "What are the different template type codes?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "PP", "''", "OR", "template_type_code", "=", "``", "PPT", "''"], "query_toks_no_value": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value"], "question": "What are the ids of templates with template type code PP or PPT?", "question_toks": ["What", "are", "the", "ids", "of", "templates", "with", "template", "type", "code", "PP", "or", "PPT", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "PP", "''", "OR", "template_type_code", "=", "``", "PPT", "''"], "query_toks_no_value": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value"], "question": "Return the ids of templates that have the code PP or PPT.", "question_toks": ["Return", "the", "ids", "of", "templates", "that", "have", "the", "code", "PP", "or", "PPT", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "CV", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value"], "question": "How many templates have template type code CV?", "question_toks": ["How", "many", "templates", "have", "template", "type", "code", "CV", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "CV", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value"], "question": "Count the number of templates of the type CV.", "question_toks": ["Count", "the", "number", "of", "templates", "of", "the", "type", "CV", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "query_toks": ["SELECT", "version_number", ",", "template_type_code", "FROM", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "value"], "question": "What is the version number and template type code for the template with version number later than 5?", "question_toks": ["What", "is", "the", "version", "number", "and", "template", "type", "code", "for", "the", "template", "with", "version", "number", "later", "than", "5", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "query_toks": ["SELECT", "version_number", ",", "template_type_code", "FROM", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "value"], "question": "Return the version numbers and template type codes of templates with a version number greater than 5.", "question_toks": ["Return", "the", "version", "numbers", "and", "template", "type", "codes", "of", "templates", "with", "a", "version", "number", "greater", "than", "5", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "query_toks": ["SELECT", "template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code"], "question": "Show all template type codes and number of templates for each.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "query_toks": ["SELECT", "template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code"], "question": "What are the different template type codes, and how many templates correspond to each?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "templates", "correspond", "to", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which template type code has most number of templates?", "question_toks": ["Which", "template", "type", "code", "has", "most", "number", "of", "templates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the type code of the template type that the most templates belong to.", "question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "that", "the", "most", "templates", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "value"], "question": "Show all template type codes with less than three templates.", "question_toks": ["Show", "all", "template", "type", "codes", "with", "less", "than", "three", "templates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the codes of template types that have fewer than 3 templates?", "question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "have", "fewer", "than", "3", "templates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "query_toks": ["SELECT", "min", "(", "Version_Number", ")", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates"], "question": "What the smallest version number and its template type code?", "question_toks": ["What", "the", "smallest", "version", "number", "and", "its", "template", "type", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "query_toks": ["SELECT", "min", "(", "Version_Number", ")", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates"], "question": "Return the lowest version number, along with its corresponding template type code.", "question_toks": ["Return", "the", "lowest", "version", "number", ",", "along", "with", "its", "corresponding", "template", "type", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T2.document_name", "=", "``", "Data", "base", "''"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What is the template type code of the template used by document with the name \"Data base\"?", "question_toks": ["What", "is", "the", "template", "type", "code", "of", "the", "template", "used", "by", "document", "with", "the", "name", "``", "Data", "base", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T2.document_name", "=", "``", "Data", "base", "''"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Return the template type code of the template that is used by a document named Data base.", "question_toks": ["Return", "the", "template", "type", "code", "of", "the", "template", "that", "is", "used", "by", "a", "document", "named", "Data", "base", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "query_toks": ["SELECT", "T2.document_name", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T1.template_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "t2", ".", "document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t1", ".", "template_type_code", "=", "value"], "question": "Show all document names using templates with template type code BK.", "question_toks": ["Show", "all", "document", "names", "using", "templates", "with", "template", "type", "code", "BK", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "query_toks": ["SELECT", "T2.document_name", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T1.template_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "t2", ".", "document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t1", ".", "template_type_code", "=", "value"], "question": "What are the names of documents that use templates with the code BK?", "question_toks": ["What", "are", "the", "names", "of", "documents", "that", "use", "templates", "with", "the", "code", "BK", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "query_toks": ["SELECT", "T1.template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code"], "question": "Show all template type codes and the number of documents using each type.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "the", "number", "of", "documents", "using", "each", "type", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "query_toks": ["SELECT", "T1.template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code"], "question": "What are the different template type codes, and how many documents use each type?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "documents", "use", "each", "type", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which template type code is used by most number of documents?", "question_toks": ["Which", "template", "type", "code", "is", "used", "by", "most", "number", "of", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the code of the template type that is most commonly used in documents.", "question_toks": ["Return", "the", "code", "of", "the", "template", "type", "that", "is", "most", "commonly", "used", "in", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "EXCEPT", "SELECT", "template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id"], "question": "Show all template type codes that are not used by any document.", "question_toks": ["Show", "all", "template", "type", "codes", "that", "are", "not", "used", "by", "any", "document", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "EXCEPT", "SELECT", "template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id"], "question": "What are the codes of template types that are not used for any document?", "question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "are", "not", "used", "for", "any", "document", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "query_toks": ["SELECT", "template_type_code", ",", "template_type_description", "FROM", "Ref_template_types"], "query_toks_no_value": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types"], "question": "Show all template type codes and descriptions.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "descriptions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "query_toks": ["SELECT", "template_type_code", ",", "template_type_description", "FROM", "Ref_template_types"], "query_toks_no_value": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types"], "question": "What are the type codes and descriptions for all template types?", "question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "for", "all", "template", "types", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "query_toks": ["SELECT", "template_type_description", "FROM", "Ref_template_types", "WHERE", "template_type_code", "=", "``", "AD", "''"], "query_toks_no_value": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value"], "question": "What is the template type descriptions for template type code \"AD\".", "question_toks": ["What", "is", "the", "template", "type", "descriptions", "for", "template", "type", "code", "``", "AD", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "query_toks": ["SELECT", "template_type_description", "FROM", "Ref_template_types", "WHERE", "template_type_code", "=", "``", "AD", "''"], "query_toks_no_value": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value"], "question": "Return the template type description of the template type with the code AD.", "question_toks": ["Return", "the", "template", "type", "description", "of", "the", "template", "type", "with", "the", "code", "AD", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "query_toks": ["SELECT", "template_type_code", "FROM", "Ref_template_types", "WHERE", "template_type_description", "=", "``", "Book", "''"], "query_toks_no_value": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value"], "question": "What is the template type code for template type description \"Book\".", "question_toks": ["What", "is", "the", "template", "type", "code", "for", "template", "type", "description", "``", "Book", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "query_toks": ["SELECT", "template_type_code", "FROM", "Ref_template_types", "WHERE", "template_type_description", "=", "``", "Book", "''"], "query_toks_no_value": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value"], "question": "Return the type code of the template type with the description \"Book\".", "question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "with", "the", "description", "``", "Book", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "query_toks": ["SELECT", "DISTINCT", "T1.template_type_description", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "JOIN", "Documents", "AS", "T3", "ON", "T2.Template_ID", "=", "T3.template_ID"], "query_toks_no_value": ["select", "distinct", "t1", ".", "template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "join", "documents", "as", "t3", "on", "t2", ".", "template_id", "=", "t3", ".", "template_id"], "question": "What are the distinct template type descriptions for the templates ever used by any document?", "question_toks": ["What", "are", "the", "distinct", "template", "type", "descriptions", "for", "the", "templates", "ever", "used", "by", "any", "document", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "query_toks": ["SELECT", "DISTINCT", "T1.template_type_description", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "JOIN", "Documents", "AS", "T3", "ON", "T2.Template_ID", "=", "T3.template_ID"], "query_toks_no_value": ["select", "distinct", "t1", ".", "template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "join", "documents", "as", "t3", "on", "t2", ".", "template_id", "=", "t3", ".", "template_id"], "question": "Return the different descriptions for templates that have been used in a document.", "question_toks": ["Return", "the", "different", "descriptions", "for", "templates", "that", "have", "been", "used", "in", "a", "document", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "query_toks": ["SELECT", "T2.template_id", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "WHERE", "T1.template_type_description", "=", "``", "Presentation", "''"], "query_toks_no_value": ["select", "t2", ".", "template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "where", "t1", ".", "template_type_description", "=", "value"], "question": "What are the template ids with template type description \"Presentation\".", "question_toks": ["What", "are", "the", "template", "ids", "with", "template", "type", "description", "``", "Presentation", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "query_toks": ["SELECT", "T2.template_id", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "WHERE", "T1.template_type_description", "=", "``", "Presentation", "''"], "query_toks_no_value": ["select", "t2", ".", "template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "where", "t1", ".", "template_type_description", "=", "value"], "question": "Return the ids corresponding to templates with the description 'Presentation'.", "question_toks": ["Return", "the", "ids", "corresponding", "to", "templates", "with", "the", "description", "'Presentation", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs"], "question": "How many paragraphs in total?", "question_toks": ["How", "many", "paragraphs", "in", "total", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs"], "question": "Count the number of paragraphs.", "question_toks": ["Count", "the", "number", "of", "paragraphs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_ID", "=", "T2.document_ID", "WHERE", "T2.document_name", "=", "'Summer", "Show", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "How many paragraphs for the document with name 'Summer Show'?", "question_toks": ["How", "many", "paragraphs", "for", "the", "document", "with", "name", "'Summer", "Show", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_ID", "=", "T2.document_ID", "WHERE", "T2.document_name", "=", "'Summer", "Show", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Count the number of paragraphs in the document named 'Summer Show'.", "question_toks": ["Count", "the", "number", "of", "paragraphs", "in", "the", "document", "named", "'Summer", "Show", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'", "query_toks": ["SELECT", "Other_Details", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Korea", "'"], "query_toks_no_value": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "Show paragraph details for paragraph with text 'Korea'.", "question_toks": ["Show", "paragraph", "details", "for", "paragraph", "with", "text", "'Korea", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Korea\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'", "query_toks": ["SELECT", "Other_Details", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Korea", "'"], "query_toks_no_value": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "What are the details for the paragraph that includes the text 'Korea'?", "question_toks": ["What", "are", "the", "details", "for", "the", "paragraph", "that", "includes", "the", "text", "'Korea", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Korea\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "T1.paragraph_id", ",", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["select", "t1", ".", "paragraph_id", ",", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "question_toks": ["Show", "all", "paragraph", "ids", "and", "texts", "for", "the", "document", "with", "name", "'Welcome", "to", "NY", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "T1.paragraph_id", ",", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["select", "t1", ".", "paragraph_id", ",", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "question_toks": ["What", "are", "the", "ids", "and", "texts", "of", "paragraphs", "in", "the", "document", "titled", "'Welcome", "to", "NY", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "query_toks": ["SELECT", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Customer", "reviews", "''"], "query_toks_no_value": ["select", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Show all paragraph texts for the document \"Customer reviews\".", "question_toks": ["Show", "all", "paragraph", "texts", "for", "the", "document", "``", "Customer", "reviews", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "query_toks": ["SELECT", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Customer", "reviews", "''"], "query_toks_no_value": ["select", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What are the paragraph texts for the document with the name 'Customer reviews'?", "question_toks": ["What", "are", "the", "paragraph", "texts", "for", "the", "document", "with", "the", "name", "'Customer", "reviews", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id"], "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "question_toks": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id"], "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "question_toks": ["Return", "the", "different", "document", "ids", "along", "with", "the", "number", "of", "paragraphs", "corresponding", "to", "each", ",", "ordered", "by", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id"], "question": "Show all document ids, names and the number of paragraphs in each document.", "question_toks": ["Show", "all", "document", "ids", ",", "names", "and", "the", "number", "of", "paragraphs", "in", "each", "document", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id"], "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List all document ids with at least two paragraphs.", "question_toks": ["List", "all", "document", "ids", "with", "at", "least", "two", "paragraphs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids of documents that have 2 or more paragraphs?", "question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "have", "2", "or", "more", "paragraphs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the document id and name with greatest number of paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "and", "name", "with", "greatest", "number", "of", "paragraphs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id and name of the document with the most paragraphs.", "question_toks": ["Return", "the", "id", "and", "name", "of", "the", "document", "with", "the", "most", "paragraphs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the document id with least number of paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "with", "least", "number", "of", "paragraphs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Return the id of the document with the fewest paragraphs.", "question_toks": ["Return", "the", "id", "of", "the", "document", "with", "the", "fewest", "paragraphs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", "BETWEEN", "1", "AND", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "What is the document id with 1 to 2 paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "with", "1", "to", "2", "paragraphs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", "BETWEEN", "1", "AND", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "Give the ids of documents that have between one and two paragraphs.", "question_toks": ["Give", "the", "ids", "of", "documents", "that", "have", "between", "one", "and", "two", "paragraphs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Brazil", "'", "INTERSECT", "SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Ireland", "'"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "question_toks": ["Show", "the", "document", "id", "with", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]]}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Brazil", "'", "INTERSECT", "SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Ireland", "'"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "contain", "the", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]]}}, {"db_id": "course_teach", "query": "SELECT count(*) FROM teacher", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "teacher"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "teacher"], "question": "How many teachers are there?", "question_toks": ["How", "many", "teachers", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT count(*) FROM teacher", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "teacher"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "teacher"], "question": "What is the total count of teachers?", "question_toks": ["What", "is", "the", "total", "count", "of", "teachers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "teacher", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "teacher", "order", "by", "age", "asc"], "question": "List the names of teachers in ascending order of age.", "question_toks": ["List", "the", "names", "of", "teachers", "in", "ascending", "order", "of", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "teacher", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "teacher", "order", "by", "age", "asc"], "question": "What are the names of the teachers ordered by ascending age?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "ordered", "by", "ascending", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Age ,  Hometown FROM teacher", "query_toks": ["SELECT", "Age", ",", "Hometown", "FROM", "teacher"], "query_toks_no_value": ["select", "age", ",", "hometown", "from", "teacher"], "question": "What are the age and hometown of teachers?", "question_toks": ["What", "are", "the", "age", "and", "hometown", "of", "teachers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Age ,  Hometown FROM teacher", "query_toks": ["SELECT", "Age", ",", "Hometown", "FROM", "teacher"], "query_toks_no_value": ["select", "age", ",", "hometown", "from", "teacher"], "question": "What is the age and hometown of every teacher?", "question_toks": ["What", "is", "the", "age", "and", "hometown", "of", "every", "teacher", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Hometown", "!", "=", "``", "Little", "Lever", "Urban", "Distric", "''"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "hometown", "!", "=", "value"], "question": "List the name of teachers whose hometown is not \"Little Lever Urban District\".", "question_toks": ["List", "the", "name", "of", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 7, false], null], "\"Little Lever Urban Distric\"", null]]}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Hometown", "!", "=", "``", "Little", "Lever", "Urban", "Distric", "''"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "hometown", "!", "=", "value"], "question": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 7, false], null], "\"Little Lever Urban Distric\"", null]]}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Age", "=", "32", "OR", "Age", "=", "33"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Show the name of teachers aged either 32 or 33?", "question_toks": ["Show", "the", "name", "of", "teachers", "aged", "either", "32", "or", "33", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]]}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Age", "=", "32", "OR", "Age", "=", "33"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "What are the names of the teachers who are aged either 32 or 33?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "are", "aged", "either", "32", "or", "33", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]]}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "What is the hometown of the youngest teacher?", "question_toks": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "Where is the youngest teacher from?", "question_toks": ["Where", "is", "the", "youngest", "teacher", "from", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "query_toks": ["SELECT", "Hometown", ",", "COUNT", "(", "*", ")", "FROM", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown"], "question": "Show different hometown of teachers and the number of teachers from each hometown.", "question_toks": ["Show", "different", "hometown", "of", "teachers", "and", "the", "number", "of", "teachers", "from", "each", "hometown", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "query_toks": ["SELECT", "Hometown", ",", "COUNT", "(", "*", ")", "FROM", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown"], "question": "For each hometown, how many teachers are there?", "question_toks": ["For", "each", "hometown", ",", "how", "many", "teachers", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the most common hometown of teachers.", "question_toks": ["List", "the", "most", "common", "hometown", "of", "teachers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most commmon hometowns for teachers?", "question_toks": ["What", "is", "the", "most", "commmon", "hometowns", "for", "teachers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the hometowns shared by at least two teachers.", "question_toks": ["Show", "the", "hometowns", "shared", "by", "at", "least", "two", "teachers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the towns from which at least two teachers come from?", "question_toks": ["What", "are", "the", "towns", "from", "which", "at", "least", "two", "teachers", "come", "from", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id"], "question": "Show names of teachers and the courses they are arranged to teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id"], "question": "What is the name of each teacher and what course they teach?", "question_toks": ["What", "is", "the", "name", "of", "each", "teacher", "and", "what", "course", "they", "teach", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "ORDER", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "order", "by", "t3", ".", "name"], "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "in", "ascending", "alphabetical", "order", "of", "the", "teacher", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "ORDER", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "order", "by", "t3", ".", "name"], "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "the", "courses", "they", "teach", "in", "ascending", "alphabetical", "order", "by", "the", "name", "of", "the", "teacher", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "query_toks": ["SELECT", "T3.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "WHERE", "T2.Course", "=", "``", "Math", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "where", "t2", ".", "course", "=", "value"], "question": "Show the name of the teacher for the math course.", "question_toks": ["Show", "the", "name", "of", "the", "teacher", "for", "the", "math", "course", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]]}}, {"db_id": "course_teach", "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "query_toks": ["SELECT", "T3.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "WHERE", "T2.Course", "=", "``", "Math", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "where", "t2", ".", "course", "=", "value"], "question": "What are the names of the people who teach math courses?", "question_toks": ["What", "are", "the", "names", "of", "the", "people", "who", "teach", "math", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]]}}, {"db_id": "course_teach", "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name"], "question": "Show names of teachers and the number of courses they teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name"], "question": "What are the names of the teachers and how many courses do they teach?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "how", "many", "courses", "do", "they", "teach", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show names of teachers that teach at least two courses.", "question_toks": ["Show", "names", "of", "teachers", "that", "teach", "at", "least", "two", "courses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of the teachers who teach at least two courses?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "teach", "at", "least", "two", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Teacher_id", "NOT", "IN", "(", "SELECT", "Teacher_id", "FROM", "course_arrange", ")"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")"], "question": "List the names of teachers who have not been arranged to teach courses.", "question_toks": ["List", "the", "names", "of", "teachers", "who", "have", "not", "been", "arranged", "to", "teach", "courses", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Teacher_id", "NOT", "IN", "(", "SELECT", "Teacher_id", "FROM", "course_arrange", ")"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")"], "question": "What are the names of the teachers whose courses have not been arranged?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "courses", "have", "not", "been", "arranged", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM players", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "players"], "question": "Find the total number of players.", "question_toks": ["Find", "the", "total", "number", "of", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM players", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "players"], "question": "How many players are there?", "question_toks": ["How", "many", "players", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM matches", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches"], "question": "Find the total number of matches.", "question_toks": ["Find", "the", "total", "number", "of", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM matches", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches"], "question": "Count the number of matches.", "question_toks": ["Count", "the", "number", "of", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "query_toks": ["SELECT", "first_name", ",", "birth_date", "FROM", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value"], "question": "List the first name and birth date of all players from the country with code USA.", "question_toks": ["List", "the", "first", "name", "and", "birth", "date", "of", "all", "players", "from", "the", "country", "with", "code", "USA", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]]}}, {"db_id": "wta_1", "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "query_toks": ["SELECT", "first_name", ",", "birth_date", "FROM", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value"], "question": "What are the first names and birth dates of players from the USA?", "question_toks": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]]}}, {"db_id": "wta_1", "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "query_toks": ["SELECT", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches"], "question": "Find the average age of losers and winners of all matches.", "question_toks": ["Find", "the", "average", "age", "of", "losers", "and", "winners", "of", "all", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "query_toks": ["SELECT", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches"], "question": "What are the average ages of losers and winners across matches?", "question_toks": ["What", "are", "the", "average", "ages", "of", "losers", "and", "winners", "across", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT avg(winner_rank) FROM matches", "query_toks": ["SELECT", "avg", "(", "winner_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "winner_rank", ")", "from", "matches"], "question": "Find the average rank of winners in all matches.", "question_toks": ["Find", "the", "average", "rank", "of", "winners", "in", "all", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT avg(winner_rank) FROM matches", "query_toks": ["SELECT", "avg", "(", "winner_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "winner_rank", ")", "from", "matches"], "question": "What is the average rank for winners in all matches?", "question_toks": ["What", "is", "the", "average", "rank", "for", "winners", "in", "all", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT min(loser_rank) FROM matches", "query_toks": ["SELECT", "min", "(", "loser_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "min", "(", "loser_rank", ")", "from", "matches"], "question": "Find the highest rank of losers in all matches.", "question_toks": ["Find", "the", "highest", "rank", "of", "losers", "in", "all", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT min(loser_rank) FROM matches", "query_toks": ["SELECT", "min", "(", "loser_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "min", "(", "loser_rank", ")", "from", "matches"], "question": "What is the best rank of losers across all matches?", "question_toks": ["What", "is", "the", "best", "rank", "of", "losers", "across", "all", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT country_code) FROM players", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country_code", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "distinct", "country_code", ")", "from", "players"], "question": "find the number of distinct country codes of all players.", "question_toks": ["find", "the", "number", "of", "distinct", "country", "codes", "of", "all", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 6, true], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT country_code) FROM players", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country_code", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "distinct", "country_code", ")", "from", "players"], "question": "How many distinct countries do players come from?", "question_toks": ["How", "many", "distinct", "countries", "do", "players", "come", "from", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 6, true], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT loser_name) FROM matches", "query_toks": ["SELECT", "count", "(", "DISTINCT", "loser_name", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches"], "question": "Find the number of distinct name of losers.", "question_toks": ["Find", "the", "number", "of", "distinct", "name", "of", "losers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 15, true], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT loser_name) FROM matches", "query_toks": ["SELECT", "count", "(", "DISTINCT", "loser_name", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches"], "question": "How many different loser names are there?", "question_toks": ["How", "many", "different", "loser", "names", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 15, true], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "query_toks": ["SELECT", "tourney_name", "FROM", "matches", "GROUP", "BY", "tourney_name", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name of tourney that has more than 10 matches.", "question_toks": ["Find", "the", "name", "of", "tourney", "that", "has", "more", "than", "10", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "query_toks": ["SELECT", "tourney_name", "FROM", "matches", "GROUP", "BY", "tourney_name", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of tournaments that have more than 10 matches?", "question_toks": ["What", "are", "the", "names", "of", "tournaments", "that", "have", "more", "than", "10", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "INTERSECT", "SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "year", "=", "value", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "value"], "question": "List the names of all winners who played in both 2013 and 2016.", "question_toks": ["List", "the", "names", "of", "all", "winners", "who", "played", "in", "both", "2013", "and", "2016", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]]}}, {"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "INTERSECT", "SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "year", "=", "value", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "value"], "question": "What are the names of players who won in both 2013 and 2016?", "question_toks": ["What", "are", "the", "names", "of", "players", "who", "won", "in", "both", "2013", "and", "2016", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]]}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "OR", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "List the number of all matches who played in years of 2013 or 2016.", "question_toks": ["List", "the", "number", "of", "all", "matches", "who", "played", "in", "years", "of", "2013", "or", "2016", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]]}}, {"db_id": "wta_1", "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "OR", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many matches were played in 2013 or 2016?", "question_toks": ["How", "many", "matches", "were", "played", "in", "2013", "or", "2016", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]]}}, {"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'WTA", "Championships", "'", "INTERSECT", "SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'Australian", "Open", "'"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value", "intersect", "select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value"], "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "question_toks": ["What", "are", "the", "country", "code", "and", "first", "name", "of", "the", "players", "who", "won", "in", "both", "tourney", "WTA", "Championships", "and", "Australian", "Open", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]]}}, {"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'WTA", "Championships", "'", "INTERSECT", "SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'Australian", "Open", "'"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value", "intersect", "select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value"], "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "question_toks": ["What", "are", "the", "first", "names", "and", "country", "codes", "for", "players", "who", "won", "both", "the", "WTA", "Championships", "and", "the", "Australian", "Open", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]]}}, {"db_id": "wta_1", "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "country_code", "FROM", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "value"], "question": "Find the first name and country code of the oldest player.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "country_code", "FROM", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "value"], "question": "What is the first name and country code of the oldest player?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date"], "question": "List the first and last name of all players in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "in", "the", "order", "of", "birth", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date"], "question": "What are the full names of all players, sorted by birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "players", ",", "sorted", "by", "birth", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "WHERE", "hand", "=", "'L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date"], "question": "List the first and last name of all players who are left / L hand in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "who", "are", "left", "/", "L", "hand", "in", "the", "order", "of", "birth", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]]}}, {"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "WHERE", "hand", "=", "'L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date"], "question": "What are the full names of all left handed players, in order of birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "left", "handed", "players", ",", "in", "order", "of", "birth", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]]}}, {"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "ORDER", "BY", "T2.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "order", "by", "t2", ".", "tours", "desc", "limit", "value"], "question": "Find the first name and country code of the player who did the most number of tours.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "player", "who", "did", "the", "most", "number", "of", "tours", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "ORDER", "BY", "T2.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "order", "by", "t2", ".", "tours", "desc", "limit", "value"], "question": "What is the first name and country code of the player with the most tours?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "player", "with", "the", "most", "tours", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the year that has the most number of matches.", "question_toks": ["Find", "the", "year", "that", "has", "the", "most", "number", "of", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which year had the most matches?", "question_toks": ["Which", "year", "had", "the", "most", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "winner_rank_points", "FROM", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and rank points of the winner who won the most times.", "question_toks": ["Find", "the", "name", "and", "rank", "points", "of", "the", "winner", "who", "won", "the", "most", "times", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "winner_rank_points", "FROM", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "question_toks": ["What", "is", "the", "name", "of", "the", "winner", "who", "has", "won", "the", "most", "matches", ",", "and", "how", "many", "rank", "points", "does", "this", "player", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "tourney_name", "=", "'Australian", "Open", "'", "ORDER", "BY", "winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "value"], "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "question_toks": ["Find", "the", "name", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "and", "participated", "in", "the", "Australian", "Open", "tourney", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]]}}, {"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "tourney_name", "=", "'Australian", "Open", "'", "ORDER", "BY", "winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "value"], "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "question_toks": ["What", "is", "the", "name", "of", "the", "winner", "with", "the", "most", "rank", "points", "who", "participated", "in", "the", "Australian", "Open", "tournament", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]]}}, {"db_id": "wta_1", "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "loser_name", "FROM", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "value"], "question": "find the names of loser and winner who played in the match with greatest number of minutes.", "question_toks": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "loser_name", "FROM", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "value"], "question": "What are the names of the winner and loser who played in the longest match?", "question_toks": ["What", "are", "the", "names", "of", "the", "winner", "and", "loser", "who", "played", "in", "the", "longest", "match", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "avg", "(", "ranking", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "avg", "(", "ranking", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "Find the average ranking for each player and their first name.", "question_toks": ["Find", "the", "average", "ranking", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "avg", "(", "ranking", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "avg", "(", "ranking", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "What are the first names of all players, and their average rankings?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "average", "rankings", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "sum", "(", "ranking_points", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "sum", "(", "ranking_points", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "Find the total ranking points for each player and their first name.", "question_toks": ["Find", "the", "total", "ranking", "points", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "sum", "(", "ranking_points", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "sum", "(", "ranking_points", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "What are the first names of all players, and their total ranking points?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "total", "ranking", "points", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country_code", "FROM", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code"], "question": "find the number of players for each country.", "question_toks": ["find", "the", "number", "of", "players", "for", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country_code", "FROM", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code"], "question": "How many players are from each country?", "question_toks": ["How", "many", "players", "are", "from", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the code of the country where has the greatest number of players.", "question_toks": ["find", "the", "code", "of", "the", "country", "where", "has", "the", "greatest", "number", "of", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of the country with the most players?", "question_toks": ["What", "is", "the", "code", "of", "the", "country", "with", "the", "most", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the codes of countries that have more than 50 players.", "question_toks": ["Find", "the", "codes", "of", "countries", "that", "have", "more", "than", "50", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the codes of countries with more than 50 players?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "with", "more", "than", "50", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "query_toks": ["SELECT", "sum", "(", "tours", ")", ",", "ranking_date", "FROM", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date"], "question": "Find the total number of tours for each ranking date.", "question_toks": ["Find", "the", "total", "number", "of", "tours", "for", "each", "ranking", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 39, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "query_toks": ["SELECT", "sum", "(", "tours", ")", ",", "ranking_date", "FROM", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date"], "question": "How many total tours were there for each ranking date?", "question_toks": ["How", "many", "total", "tours", "were", "there", "for", "each", "ranking", "date", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 39, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year"], "question": "Find the number of matches happened in each year.", "question_toks": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year"], "question": "How many matches were played in each year?", "question_toks": ["How", "many", "matches", "were", "played", "in", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "query_toks": ["SELECT", "DISTINCT", "winner_name", ",", "winner_rank", "FROM", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "value"], "question": "Find the name and rank of the 3 youngest winners across all matches.", "question_toks": ["Find", "the", "name", "and", "rank", "of", "the", "3", "youngest", "winners", "across", "all", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 28, false], null]]], "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "query_toks": ["SELECT", "DISTINCT", "winner_name", ",", "winner_rank", "FROM", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "value"], "question": "What are the names and ranks of the three youngest winners across all matches?", "question_toks": ["What", "are", "the", "names", "and", "ranks", "of", "the", "three", "youngest", "winners", "across", "all", "matches", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 28, false], null]]], "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "winner_name", ")", "FROM", "matches", "WHERE", "tourney_name", "=", "'WTA", "Championships", "'", "AND", "winner_hand", "=", "'L", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value"], "question": "How many different winners both participated in the WTA Championships and were left handed?", "question_toks": ["How", "many", "different", "winners", "both", "participated", "in", "the", "WTA", "Championships", "and", "were", "left", "handed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 34, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]]}}, {"db_id": "wta_1", "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "winner_name", ")", "FROM", "matches", "WHERE", "tourney_name", "=", "'WTA", "Championships", "'", "AND", "winner_hand", "=", "'L", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value"], "question": "Find the number of left handed winners who participated in the WTA Championships.", "question_toks": ["Find", "the", "number", "of", "left", "handed", "winners", "who", "participated", "in", "the", "WTA", "Championships", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 34, true], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]]}}, {"db_id": "wta_1", "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.country_code", ",", "T1.birth_date", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "ORDER", "BY", "T2.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "country_code", ",", "t1", ".", "birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "order", "by", "t2", ".", "winner_rank_points", "desc", "limit", "value"], "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "question_toks": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.country_code", ",", "T1.birth_date", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "ORDER", "BY", "T2.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "country_code", ",", "t1", ".", "birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "order", "by", "t2", ".", "winner_rank_points", "desc", "limit", "value"], "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "question_toks": ["What", "is", "the", "first", "name", ",", "country", "code", ",", "and", "birth", "date", "of", "the", "player", "with", "the", "most", "winner", "rank", "points", "across", "all", "matches", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "hand", "FROM", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand"], "question": "Find the number of players for each hand type.", "question_toks": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "wta_1", "query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "hand", "FROM", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand"], "question": "How many players are there for each hand type?", "question_toks": ["How", "many", "players", "are", "there", "for", "each", "hand", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT count(*) FROM poker_player", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "poker_player"], "question": "How many poker players are there?", "question_toks": ["How", "many", "poker", "players", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT count(*) FROM poker_player", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "poker_player"], "question": "Count the number of poker players.", "question_toks": ["Count", "the", "number", "of", "poker", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "query_toks": ["SELECT", "Earnings", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC"], "query_toks_no_value": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc"], "question": "List the earnings of poker players in descending order.", "question_toks": ["List", "the", "earnings", "of", "poker", "players", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "query_toks": ["SELECT", "Earnings", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC"], "query_toks_no_value": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc"], "question": "What are the earnings of poker players, ordered descending by value?", "question_toks": ["What", "are", "the", "earnings", "of", "poker", "players", ",", "ordered", "descending", "by", "value", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "query_toks": ["SELECT", "Final_Table_Made", ",", "Best_Finish", "FROM", "poker_player"], "query_toks_no_value": ["select", "final_table_made", ",", "best_finish", "from", "poker_player"], "question": "List the final tables made and the best finishes of poker players.", "question_toks": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "query_toks": ["SELECT", "Final_Table_Made", ",", "Best_Finish", "FROM", "poker_player"], "query_toks_no_value": ["select", "final_table_made", ",", "best_finish", "from", "poker_player"], "question": "What are the final tables made and best finishes for all poker players?", "question_toks": ["What", "are", "the", "final", "tables", "made", "and", "best", "finishes", "for", "all", "poker", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT avg(Earnings) FROM poker_player", "query_toks": ["SELECT", "avg", "(", "Earnings", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "avg", "(", "earnings", ")", "from", "poker_player"], "question": "What is the average earnings of poker players?", "question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT avg(Earnings) FROM poker_player", "query_toks": ["SELECT", "avg", "(", "Earnings", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "avg", "(", "earnings", ")", "from", "poker_player"], "question": "Return the average earnings across all poker players.", "question_toks": ["Return", "the", "average", "earnings", "across", "all", "poker", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Money_Rank", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the money rank of the poker player with the highest earnings?", "question_toks": ["What", "is", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "highest", "earnings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Money_Rank", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "value"], "question": "Return the money rank of the player with the greatest earnings.", "question_toks": ["Return", "the", "money", "rank", "of", "the", "player", "with", "the", "greatest", "earnings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "query_toks": ["SELECT", "max", "(", "Final_Table_Made", ")", "FROM", "poker_player", "WHERE", "Earnings", "<", "200000"], "query_toks_no_value": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "value"], "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "final", "tables", "made", "among", "poker", "players", "with", "earnings", "less", "than", "200000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]]}}, {"db_id": "poker_player", "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "query_toks": ["SELECT", "max", "(", "Final_Table_Made", ")", "FROM", "poker_player", "WHERE", "Earnings", "<", "200000"], "query_toks_no_value": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "value"], "question": "Return the maximum final tables made across all poker players who have earnings below 200000.", "question_toks": ["Return", "the", "maximum", "final", "tables", "made", "across", "all", "poker", "players", "who", "have", "earnings", "below", "200000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]]}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "What are the names of poker players?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "Return the names of all the poker players.", "question_toks": ["Return", "the", "names", "of", "all", "the", "poker", "players", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Earnings", ">", "300000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "earnings", ">", "value"], "question": "What are the names of poker players whose earnings is higher than 300000?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "whose", "earnings", "is", "higher", "than", "300000", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]]}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Earnings", ">", "300000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "earnings", ">", "value"], "question": "Give the names of poker players who have earnings above 300000.", "question_toks": ["Give", "the", "names", "of", "poker", "players", "who", "have", "earnings", "above", "300000", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]]}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Final_Table_Made"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "final_table_made"], "question": "List the names of poker players ordered by the final tables made in ascending order.", "question_toks": ["List", "the", "names", "of", "poker", "players", "ordered", "by", "the", "final", "tables", "made", "in", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Final_Table_Made"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "final_table_made"], "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", ",", "ordered", "ascending", "by", "the", "number", "of", "final", "tables", "they", "have", "made", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "query_toks": ["SELECT", "T1.Birth_Date", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "asc", "limit", "value"], "question": "What is the birth date of the poker player with the lowest earnings?", "question_toks": ["What", "is", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "query_toks": ["SELECT", "T1.Birth_Date", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "asc", "limit", "value"], "question": "Return the birth date of the poker player with the lowest earnings.", "question_toks": ["Return", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "query_toks": ["SELECT", "T2.Money_Rank", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "height", "desc", "limit", "value"], "question": "What is the money rank of the tallest poker player?", "question_toks": ["What", "is", "the", "money", "rank", "of", "the", "tallest", "poker", "player", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "query_toks": ["SELECT", "T2.Money_Rank", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "height", "desc", "limit", "value"], "question": "Return the money rank of the poker player with the greatest height.", "question_toks": ["Return", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "greatest", "height", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "query_toks": ["SELECT", "avg", "(", "T2.Earnings", ")", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Height", ">", "200"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "height", ">", "value"], "question": "What is the average earnings of poker players with height higher than 200?", "question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "with", "height", "higher", "than", "200", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]]}}, {"db_id": "poker_player", "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "query_toks": ["SELECT", "avg", "(", "T2.Earnings", ")", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Height", ">", "200"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "height", ">", "value"], "question": "Give average earnings of poker players who are taller than 200.", "question_toks": ["Give", "average", "earnings", "of", "poker", "players", "who", "are", "taller", "than", "200", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]]}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "desc"], "question": "What are the names of poker players in descending order of earnings?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "in", "descending", "order", "of", "earnings", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "desc"], "question": "Return the names of poker players sorted by their earnings descending.", "question_toks": ["Return", "the", "names", "of", "poker", "players", "sorted", "by", "their", "earnings", "descending", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality"], "question": "What are different nationalities of people and the corresponding number of people from each nation?", "question_toks": ["What", "are", "different", "nationalities", "of", "people", "and", "the", "corresponding", "number", "of", "people", "from", "each", "nation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality"], "question": "How many people are there of each nationality?", "question_toks": ["How", "many", "people", "are", "there", "of", "each", "nationality", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common nationality of people?", "question_toks": ["What", "is", "the", "most", "common", "nationality", "of", "people", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the nationality that is most common across all people.", "question_toks": ["Give", "the", "nationality", "that", "is", "most", "common", "across", "all", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the nationalities that are shared by at least two people?", "question_toks": ["What", "are", "the", "nationalities", "that", "are", "shared", "by", "at", "least", "two", "people", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Return the nationalities for which there are two or more people.", "question_toks": ["Return", "the", "nationalities", "for", "which", "there", "are", "two", "or", "more", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "query_toks": ["SELECT", "Name", ",", "Birth_Date", "FROM", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc"], "question": "List the names and birth dates of people in ascending alphabetical order of name.", "question_toks": ["List", "the", "names", "and", "birth", "dates", "of", "people", "in", "ascending", "alphabetical", "order", "of", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "query_toks": ["SELECT", "Name", ",", "Birth_Date", "FROM", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc"], "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "question_toks": ["What", "are", "the", "names", "and", "birth", "dates", "of", "people", ",", "ordered", "by", "their", "names", "in", "alphabetical", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "Nationality", "!", "=", "``", "Russia", "''"], "query_toks_no_value": ["select", "name", "from", "people", "where", "nationality", "!", "=", "value"], "question": "Show names of people whose nationality is not \"Russia\".", "question_toks": ["Show", "names", "of", "people", "whose", "nationality", "is", "not", "``", "Russia", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]]}}, {"db_id": "poker_player", "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "Nationality", "!", "=", "``", "Russia", "''"], "query_toks_no_value": ["select", "name", "from", "people", "where", "nationality", "!", "=", "value"], "question": "What are the names of people who are not from Russia?", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "are", "not", "from", "Russia", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]]}}, {"db_id": "poker_player", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "poker_player", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")"], "question": "List the names of people that are not poker players.", "question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "poker", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "poker_player", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "poker_player", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")"], "question": "What are the names of people who do not play poker?", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "do", "not", "play", "poker", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "poker_player", "query": "SELECT count(DISTINCT Nationality) FROM people", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "people"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "people"], "question": "How many distinct nationalities are there?", "question_toks": ["How", "many", "distinct", "nationalities", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 8, true], null]]]], "union": null, "where": []}}, {"db_id": "poker_player", "query": "SELECT count(DISTINCT Nationality) FROM people", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "people"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "people"], "question": "Count the number of different nationalities.", "question_toks": ["Count", "the", "number", "of", "different", "nationalities", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 8, true], null]]]], "union": null, "where": []}}, {"db_id": "real_estate_properties", "query": "SELECT count(*) FROM Other_Available_Features", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Other_Available_Features"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "other_available_features"], "question": "How many available features are there in total?", "question_toks": ["How", "many", "available", "features", "are", "there", "in", "total", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "real_estate_properties", "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "query_toks": ["SELECT", "T2.feature_type_name", "FROM", "Other_Available_Features", "AS", "T1", "JOIN", "Ref_Feature_Types", "AS", "T2", "ON", "T1.feature_type_code", "=", "T2.feature_type_code", "WHERE", "T1.feature_name", "=", "``", "AirCon", "''"], "query_toks_no_value": ["select", "t2", ".", "feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1", ".", "feature_type_code", "=", "t2", ".", "feature_type_code", "where", "t1", ".", "feature_name", "=", "value"], "question": "What is the feature type name of feature AirCon?", "question_toks": ["What", "is", "the", "feature", "type", "name", "of", "feature", "AirCon", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"AirCon\"", null]]}}, {"db_id": "real_estate_properties", "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "query_toks": ["SELECT", "T2.property_type_description", "FROM", "Properties", "AS", "T1", "JOIN", "Ref_Property_Types", "AS", "T2", "ON", "T1.property_type_code", "=", "T2.property_type_code", "GROUP", "BY", "T1.property_type_code"], "query_toks_no_value": ["select", "t2", ".", "property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1", ".", "property_type_code", "=", "t2", ".", "property_type_code", "group", "by", "t1", ".", "property_type_code"], "question": "Show the property type descriptions of properties belonging to that code.", "question_toks": ["Show", "the", "property", "type", "descriptions", "of", "properties", "belonging", "to", "that", "code", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "real_estate_properties", "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1", "query_toks": ["SELECT", "property_name", "FROM", "Properties", "WHERE", "property_type_code", "=", "``", "House", "''", "UNION", "SELECT", "property_name", "FROM", "Properties", "WHERE", "property_type_code", "=", "``", "Apartment", "''", "AND", "room_count", ">", "1"], "query_toks_no_value": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "and", "room_count", ">", "value"], "question": "What are the names of properties that are either houses or apartments with more than 1 room?", "question_toks": ["What", "are", "the", "names", "of", "properties", "that", "are", "either", "houses", "or", "apartments", "with", "more", "than", "1", "room", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Apartment\"", null], "and", [false, 3, [0, [0, 15, false], null], 1.0, null]]}, "where": [[false, 2, [0, [0, 10, false], null], "\"House\"", null]]}}]